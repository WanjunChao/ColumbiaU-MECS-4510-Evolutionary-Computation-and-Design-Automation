# 1 "tmp/CMakeCUDACompilerId.cudafe1.cpp"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 1 "<command-line>" 2
# 1 "tmp/CMakeCUDACompilerId.cudafe1.cpp"
# 1 "CMakeCUDACompilerId.cu"
#pragma GCC diagnostic ignored "-Wunused-local-typedefs"
# 1 "CMakeCUDACompilerId.cu"
#pragma GCC diagnostic push
# 1 "CMakeCUDACompilerId.cu"
#pragma GCC diagnostic ignored "-Wunused-variable"
# 1 "CMakeCUDACompilerId.cu"
#pragma GCC diagnostic ignored "-Wunused-function"
# 1 "CMakeCUDACompilerId.cu"
static char __nv_inited_managed_rt = 0; static void **__nv_fatbinhandle_for_managed_rt; static void __nv_save_fatbinhandle_for_managed_rt(void **in){__nv_fatbinhandle_for_managed_rt = in;} static char __nv_init_managed_rt_with_module(void **); static inline void __nv_init_managed_rt(void) { __nv_inited_managed_rt = (__nv_inited_managed_rt ? __nv_inited_managed_rt : __nv_init_managed_rt_with_module(__nv_fatbinhandle_for_managed_rt));}
# 1 "CMakeCUDACompilerId.cu"
#pragma GCC diagnostic pop
# 1 "CMakeCUDACompilerId.cu"
#pragma GCC diagnostic ignored "-Wunused-variable"
# 1 "CMakeCUDACompilerId.cu"
# 1 "CMakeCUDACompilerId.cu"
# 56 "/usr/include/cuda_runtime.h" 3
#pragma GCC diagnostic push
# 59 "/usr/include/cuda_runtime.h" 3
#pragma GCC diagnostic ignored "-Wunused-function"
# 61 "/usr/include/device_types.h" 3
# 149 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h" 3

# 149 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h" 3
typedef long ptrdiff_t;
# 216 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h" 3
typedef unsigned long size_t;
# 1 "/usr/include/crt/host_runtime.h" 1 3 4
# 69 "/usr/include/crt/host_runtime.h" 3 4
# 1 "/usr/include/builtin_types.h" 1 3 4
# 56 "/usr/include/builtin_types.h" 3 4
# 1 "/usr/include/device_types.h" 1 3 4
# 53 "/usr/include/device_types.h" 3 4
# 1 "/usr/include/host_defines.h" 1 3 4
# 54 "/usr/include/device_types.h" 2 3 4







enum cudaRoundMode
{
    cudaRoundNearest,
    cudaRoundZero,
    cudaRoundPosInf,
    cudaRoundMinInf
};
# 57 "/usr/include/builtin_types.h" 2 3 4


# 1 "/usr/include/driver_types.h" 1 3 4
# 151 "/usr/include/driver_types.h" 3 4
enum cudaError
{





    cudaSuccess = 0,





    cudaErrorMissingConfiguration = 1,





    cudaErrorMemoryAllocation = 2,





    cudaErrorInitializationError = 3,
# 186 "/usr/include/driver_types.h" 3 4
    cudaErrorLaunchFailure = 4,
# 195 "/usr/include/driver_types.h" 3 4
    cudaErrorPriorLaunchFailure = 5,
# 205 "/usr/include/driver_types.h" 3 4
    cudaErrorLaunchTimeout = 6,
# 214 "/usr/include/driver_types.h" 3 4
    cudaErrorLaunchOutOfResources = 7,





    cudaErrorInvalidDeviceFunction = 8,
# 229 "/usr/include/driver_types.h" 3 4
    cudaErrorInvalidConfiguration = 9,





    cudaErrorInvalidDevice = 10,





    cudaErrorInvalidValue = 11,





    cudaErrorInvalidPitchValue = 12,





    cudaErrorInvalidSymbol = 13,




    cudaErrorMapBufferObjectFailed = 14,




    cudaErrorUnmapBufferObjectFailed = 15,





    cudaErrorInvalidHostPointer = 16,





    cudaErrorInvalidDevicePointer = 17,





    cudaErrorInvalidTexture = 18,





    cudaErrorInvalidTextureBinding = 19,






    cudaErrorInvalidChannelDescriptor = 20,





    cudaErrorInvalidMemcpyDirection = 21,
# 310 "/usr/include/driver_types.h" 3 4
    cudaErrorAddressOfConstant = 22,
# 319 "/usr/include/driver_types.h" 3 4
    cudaErrorTextureFetchFailed = 23,
# 328 "/usr/include/driver_types.h" 3 4
    cudaErrorTextureNotBound = 24,
# 337 "/usr/include/driver_types.h" 3 4
    cudaErrorSynchronizationError = 25,





    cudaErrorInvalidFilterSetting = 26,





    cudaErrorInvalidNormSetting = 27,







    cudaErrorMixedDeviceExecution = 28,






    cudaErrorCudartUnloading = 29,




    cudaErrorUnknown = 30,







    cudaErrorNotYetImplemented = 31,
# 386 "/usr/include/driver_types.h" 3 4
    cudaErrorMemoryValueTooLarge = 32,






    cudaErrorInvalidResourceHandle = 33,







    cudaErrorNotReady = 34,






    cudaErrorInsufficientDriver = 35,
# 421 "/usr/include/driver_types.h" 3 4
    cudaErrorSetOnActiveProcess = 36,





    cudaErrorInvalidSurface = 37,





    cudaErrorNoDevice = 38,





    cudaErrorECCUncorrectable = 39,




    cudaErrorSharedObjectSymbolNotFound = 40,




    cudaErrorSharedObjectInitFailed = 41,





    cudaErrorUnsupportedLimit = 42,





    cudaErrorDuplicateVariableName = 43,





    cudaErrorDuplicateTextureName = 44,





    cudaErrorDuplicateSurfaceName = 45,
# 483 "/usr/include/driver_types.h" 3 4
    cudaErrorDevicesUnavailable = 46,




    cudaErrorInvalidKernelImage = 47,







    cudaErrorNoKernelImageForDevice = 48,
# 509 "/usr/include/driver_types.h" 3 4
    cudaErrorIncompatibleDriverContext = 49,






    cudaErrorPeerAccessAlreadyEnabled = 50,






    cudaErrorPeerAccessNotEnabled = 51,





    cudaErrorDeviceAlreadyInUse = 54,






    cudaErrorProfilerDisabled = 55,







    cudaErrorProfilerNotInitialized = 56,






    cudaErrorProfilerAlreadyStarted = 57,






     cudaErrorProfilerAlreadyStopped = 58,







    cudaErrorAssert = 59,






    cudaErrorTooManyPeers = 60,





    cudaErrorHostMemoryAlreadyRegistered = 61,





    cudaErrorHostMemoryNotRegistered = 62,




    cudaErrorOperatingSystem = 63,





    cudaErrorPeerAccessUnsupported = 64,






    cudaErrorLaunchMaxDepthExceeded = 65,







    cudaErrorLaunchFileScopedTex = 66,







    cudaErrorLaunchFileScopedSurf = 67,
# 634 "/usr/include/driver_types.h" 3 4
    cudaErrorSyncDepthExceeded = 68,
# 646 "/usr/include/driver_types.h" 3 4
    cudaErrorLaunchPendingCountExceeded = 69,




    cudaErrorNotPermitted = 70,





    cudaErrorNotSupported = 71,
# 666 "/usr/include/driver_types.h" 3 4
    cudaErrorHardwareStackError = 72,







    cudaErrorIllegalInstruction = 73,
# 683 "/usr/include/driver_types.h" 3 4
    cudaErrorMisalignedAddress = 74,
# 694 "/usr/include/driver_types.h" 3 4
    cudaErrorInvalidAddressSpace = 75,







    cudaErrorInvalidPc = 76,







    cudaErrorIllegalAddress = 77,





    cudaErrorInvalidPtx = 78,




    cudaErrorInvalidGraphicsContext = 79,





    cudaErrorStartupFailure = 0x7f,







    cudaErrorApiFailureBase = 10000
};




enum cudaChannelFormatKind
{
    cudaChannelFormatKindSigned = 0,
    cudaChannelFormatKindUnsigned = 1,
    cudaChannelFormatKindFloat = 2,
    cudaChannelFormatKindNone = 3
};




struct cudaChannelFormatDesc
{
    int x;
    int y;
    int z;
    int w;
    enum cudaChannelFormatKind f;
};




typedef struct cudaArray *cudaArray_t;




typedef const struct cudaArray *cudaArray_const_t;

struct cudaArray;




typedef struct cudaMipmappedArray *cudaMipmappedArray_t;




typedef const struct cudaMipmappedArray *cudaMipmappedArray_const_t;

struct cudaMipmappedArray;




enum cudaMemoryType
{
    cudaMemoryTypeHost = 1,
    cudaMemoryTypeDevice = 2
};




enum cudaMemcpyKind
{
    cudaMemcpyHostToHost = 0,
    cudaMemcpyHostToDevice = 1,
    cudaMemcpyDeviceToHost = 2,
    cudaMemcpyDeviceToDevice = 3,
    cudaMemcpyDefault = 4
};






struct cudaPitchedPtr
{
    void *ptr;
    size_t pitch;
    size_t xsize;
    size_t ysize;
};






struct cudaExtent
{
    size_t width;
    size_t height;
    size_t depth;
};






struct cudaPos
{
    size_t x;
    size_t y;
    size_t z;
};




struct cudaMemcpy3DParms
{
    cudaArray_t srcArray;
    struct cudaPos srcPos;
    struct cudaPitchedPtr srcPtr;

    cudaArray_t dstArray;
    struct cudaPos dstPos;
    struct cudaPitchedPtr dstPtr;

    struct cudaExtent extent;
    enum cudaMemcpyKind kind;
};




struct cudaMemcpy3DPeerParms
{
    cudaArray_t srcArray;
    struct cudaPos srcPos;
    struct cudaPitchedPtr srcPtr;
    int srcDevice;

    cudaArray_t dstArray;
    struct cudaPos dstPos;
    struct cudaPitchedPtr dstPtr;
    int dstDevice;

    struct cudaExtent extent;
};




struct cudaGraphicsResource;




enum cudaGraphicsRegisterFlags
{
    cudaGraphicsRegisterFlagsNone = 0,
    cudaGraphicsRegisterFlagsReadOnly = 1,
    cudaGraphicsRegisterFlagsWriteDiscard = 2,
    cudaGraphicsRegisterFlagsSurfaceLoadStore = 4,
    cudaGraphicsRegisterFlagsTextureGather = 8
};




enum cudaGraphicsMapFlags
{
    cudaGraphicsMapFlagsNone = 0,
    cudaGraphicsMapFlagsReadOnly = 1,
    cudaGraphicsMapFlagsWriteDiscard = 2
};




enum cudaGraphicsCubeFace
{
    cudaGraphicsCubeFacePositiveX = 0x00,
    cudaGraphicsCubeFaceNegativeX = 0x01,
    cudaGraphicsCubeFacePositiveY = 0x02,
    cudaGraphicsCubeFaceNegativeY = 0x03,
    cudaGraphicsCubeFacePositiveZ = 0x04,
    cudaGraphicsCubeFaceNegativeZ = 0x05
};




enum cudaResourceType
{
    cudaResourceTypeArray = 0x00,
    cudaResourceTypeMipmappedArray = 0x01,
    cudaResourceTypeLinear = 0x02,
    cudaResourceTypePitch2D = 0x03
};




enum cudaResourceViewFormat
{
    cudaResViewFormatNone = 0x00,
    cudaResViewFormatUnsignedChar1 = 0x01,
    cudaResViewFormatUnsignedChar2 = 0x02,
    cudaResViewFormatUnsignedChar4 = 0x03,
    cudaResViewFormatSignedChar1 = 0x04,
    cudaResViewFormatSignedChar2 = 0x05,
    cudaResViewFormatSignedChar4 = 0x06,
    cudaResViewFormatUnsignedShort1 = 0x07,
    cudaResViewFormatUnsignedShort2 = 0x08,
    cudaResViewFormatUnsignedShort4 = 0x09,
    cudaResViewFormatSignedShort1 = 0x0a,
    cudaResViewFormatSignedShort2 = 0x0b,
    cudaResViewFormatSignedShort4 = 0x0c,
    cudaResViewFormatUnsignedInt1 = 0x0d,
    cudaResViewFormatUnsignedInt2 = 0x0e,
    cudaResViewFormatUnsignedInt4 = 0x0f,
    cudaResViewFormatSignedInt1 = 0x10,
    cudaResViewFormatSignedInt2 = 0x11,
    cudaResViewFormatSignedInt4 = 0x12,
    cudaResViewFormatHalf1 = 0x13,
    cudaResViewFormatHalf2 = 0x14,
    cudaResViewFormatHalf4 = 0x15,
    cudaResViewFormatFloat1 = 0x16,
    cudaResViewFormatFloat2 = 0x17,
    cudaResViewFormatFloat4 = 0x18,
    cudaResViewFormatUnsignedBlockCompressed1 = 0x19,
    cudaResViewFormatUnsignedBlockCompressed2 = 0x1a,
    cudaResViewFormatUnsignedBlockCompressed3 = 0x1b,
    cudaResViewFormatUnsignedBlockCompressed4 = 0x1c,
    cudaResViewFormatSignedBlockCompressed4 = 0x1d,
    cudaResViewFormatUnsignedBlockCompressed5 = 0x1e,
    cudaResViewFormatSignedBlockCompressed5 = 0x1f,
    cudaResViewFormatUnsignedBlockCompressed6H = 0x20,
    cudaResViewFormatSignedBlockCompressed6H = 0x21,
    cudaResViewFormatUnsignedBlockCompressed7 = 0x22
};




struct cudaResourceDesc {
 enum cudaResourceType resType;

 union {
  struct {
   cudaArray_t array;
  } array;
        struct {
            cudaMipmappedArray_t mipmap;
        } mipmap;
  struct {
   void *devPtr;
   struct cudaChannelFormatDesc desc;
   size_t sizeInBytes;
  } linear;
  struct {
   void *devPtr;
   struct cudaChannelFormatDesc desc;
   size_t width;
   size_t height;
   size_t pitchInBytes;
  } pitch2D;
 } res;
};




struct cudaResourceViewDesc
{
    enum cudaResourceViewFormat format;
    size_t width;
    size_t height;
    size_t depth;
    unsigned int firstMipmapLevel;
    unsigned int lastMipmapLevel;
    unsigned int firstLayer;
    unsigned int lastLayer;
};




struct cudaPointerAttributes
{




    enum cudaMemoryType memoryType;
# 1034 "/usr/include/driver_types.h" 3 4
    int device;





    void *devicePointer;





    void *hostPointer;




    int isManaged;
};




struct cudaFuncAttributes
{





   size_t sharedSizeBytes;





   size_t constSizeBytes;




   size_t localSizeBytes;






   int maxThreadsPerBlock;




   int numRegs;






   int ptxVersion;






   int binaryVersion;





   int cacheModeCA;
};




enum cudaFuncCache
{
    cudaFuncCachePreferNone = 0,
    cudaFuncCachePreferShared = 1,
    cudaFuncCachePreferL1 = 2,
    cudaFuncCachePreferEqual = 3
};





enum cudaSharedMemConfig
{
    cudaSharedMemBankSizeDefault = 0,
    cudaSharedMemBankSizeFourByte = 1,
    cudaSharedMemBankSizeEightByte = 2
};




enum cudaComputeMode
{
    cudaComputeModeDefault = 0,
    cudaComputeModeExclusive = 1,
    cudaComputeModeProhibited = 2,
    cudaComputeModeExclusiveProcess = 3
};




enum cudaLimit
{
    cudaLimitStackSize = 0x00,
    cudaLimitPrintfFifoSize = 0x01,
    cudaLimitMallocHeapSize = 0x02,
    cudaLimitDevRuntimeSyncDepth = 0x03,
    cudaLimitDevRuntimePendingLaunchCount = 0x04
};




enum cudaOutputMode
{
    cudaKeyValuePair = 0x00,
    cudaCSV = 0x01
};




enum cudaDeviceAttr
{
    cudaDevAttrMaxThreadsPerBlock = 1,
    cudaDevAttrMaxBlockDimX = 2,
    cudaDevAttrMaxBlockDimY = 3,
    cudaDevAttrMaxBlockDimZ = 4,
    cudaDevAttrMaxGridDimX = 5,
    cudaDevAttrMaxGridDimY = 6,
    cudaDevAttrMaxGridDimZ = 7,
    cudaDevAttrMaxSharedMemoryPerBlock = 8,
    cudaDevAttrTotalConstantMemory = 9,
    cudaDevAttrWarpSize = 10,
    cudaDevAttrMaxPitch = 11,
    cudaDevAttrMaxRegistersPerBlock = 12,
    cudaDevAttrClockRate = 13,
    cudaDevAttrTextureAlignment = 14,
    cudaDevAttrGpuOverlap = 15,
    cudaDevAttrMultiProcessorCount = 16,
    cudaDevAttrKernelExecTimeout = 17,
    cudaDevAttrIntegrated = 18,
    cudaDevAttrCanMapHostMemory = 19,
    cudaDevAttrComputeMode = 20,
    cudaDevAttrMaxTexture1DWidth = 21,
    cudaDevAttrMaxTexture2DWidth = 22,
    cudaDevAttrMaxTexture2DHeight = 23,
    cudaDevAttrMaxTexture3DWidth = 24,
    cudaDevAttrMaxTexture3DHeight = 25,
    cudaDevAttrMaxTexture3DDepth = 26,
    cudaDevAttrMaxTexture2DLayeredWidth = 27,
    cudaDevAttrMaxTexture2DLayeredHeight = 28,
    cudaDevAttrMaxTexture2DLayeredLayers = 29,
    cudaDevAttrSurfaceAlignment = 30,
    cudaDevAttrConcurrentKernels = 31,
    cudaDevAttrEccEnabled = 32,
    cudaDevAttrPciBusId = 33,
    cudaDevAttrPciDeviceId = 34,
    cudaDevAttrTccDriver = 35,
    cudaDevAttrMemoryClockRate = 36,
    cudaDevAttrGlobalMemoryBusWidth = 37,
    cudaDevAttrL2CacheSize = 38,
    cudaDevAttrMaxThreadsPerMultiProcessor = 39,
    cudaDevAttrAsyncEngineCount = 40,
    cudaDevAttrUnifiedAddressing = 41,
    cudaDevAttrMaxTexture1DLayeredWidth = 42,
    cudaDevAttrMaxTexture1DLayeredLayers = 43,
    cudaDevAttrMaxTexture2DGatherWidth = 45,
    cudaDevAttrMaxTexture2DGatherHeight = 46,
    cudaDevAttrMaxTexture3DWidthAlt = 47,
    cudaDevAttrMaxTexture3DHeightAlt = 48,
    cudaDevAttrMaxTexture3DDepthAlt = 49,
    cudaDevAttrPciDomainId = 50,
    cudaDevAttrTexturePitchAlignment = 51,
    cudaDevAttrMaxTextureCubemapWidth = 52,
    cudaDevAttrMaxTextureCubemapLayeredWidth = 53,
    cudaDevAttrMaxTextureCubemapLayeredLayers = 54,
    cudaDevAttrMaxSurface1DWidth = 55,
    cudaDevAttrMaxSurface2DWidth = 56,
    cudaDevAttrMaxSurface2DHeight = 57,
    cudaDevAttrMaxSurface3DWidth = 58,
    cudaDevAttrMaxSurface3DHeight = 59,
    cudaDevAttrMaxSurface3DDepth = 60,
    cudaDevAttrMaxSurface1DLayeredWidth = 61,
    cudaDevAttrMaxSurface1DLayeredLayers = 62,
    cudaDevAttrMaxSurface2DLayeredWidth = 63,
    cudaDevAttrMaxSurface2DLayeredHeight = 64,
    cudaDevAttrMaxSurface2DLayeredLayers = 65,
    cudaDevAttrMaxSurfaceCubemapWidth = 66,
    cudaDevAttrMaxSurfaceCubemapLayeredWidth = 67,
    cudaDevAttrMaxSurfaceCubemapLayeredLayers = 68,
    cudaDevAttrMaxTexture1DLinearWidth = 69,
    cudaDevAttrMaxTexture2DLinearWidth = 70,
    cudaDevAttrMaxTexture2DLinearHeight = 71,
    cudaDevAttrMaxTexture2DLinearPitch = 72,
    cudaDevAttrMaxTexture2DMipmappedWidth = 73,
    cudaDevAttrMaxTexture2DMipmappedHeight = 74,
    cudaDevAttrComputeCapabilityMajor = 75,
    cudaDevAttrComputeCapabilityMinor = 76,
    cudaDevAttrMaxTexture1DMipmappedWidth = 77,
    cudaDevAttrStreamPrioritiesSupported = 78,
    cudaDevAttrGlobalL1CacheSupported = 79,
    cudaDevAttrLocalL1CacheSupported = 80,
    cudaDevAttrMaxSharedMemoryPerMultiprocessor = 81,
    cudaDevAttrMaxRegistersPerMultiprocessor = 82,
    cudaDevAttrManagedMemory = 83,
    cudaDevAttrIsMultiGpuBoard = 84,
    cudaDevAttrMultiGpuBoardGroupID = 85
};




struct cudaDeviceProp
{
    char name[256];
    size_t totalGlobalMem;
    size_t sharedMemPerBlock;
    int regsPerBlock;
    int warpSize;
    size_t memPitch;
    int maxThreadsPerBlock;
    int maxThreadsDim[3];
    int maxGridSize[3];
    int clockRate;
    size_t totalConstMem;
    int major;
    int minor;
    size_t textureAlignment;
    size_t texturePitchAlignment;
    int deviceOverlap;
    int multiProcessorCount;
    int kernelExecTimeoutEnabled;
    int integrated;
    int canMapHostMemory;
    int computeMode;
    int maxTexture1D;
    int maxTexture1DMipmap;
    int maxTexture1DLinear;
    int maxTexture2D[2];
    int maxTexture2DMipmap[2];
    int maxTexture2DLinear[3];
    int maxTexture2DGather[2];
    int maxTexture3D[3];
    int maxTexture3DAlt[3];
    int maxTextureCubemap;
    int maxTexture1DLayered[2];
    int maxTexture2DLayered[3];
    int maxTextureCubemapLayered[2];
    int maxSurface1D;
    int maxSurface2D[2];
    int maxSurface3D[3];
    int maxSurface1DLayered[2];
    int maxSurface2DLayered[3];
    int maxSurfaceCubemap;
    int maxSurfaceCubemapLayered[2];
    size_t surfaceAlignment;
    int concurrentKernels;
    int ECCEnabled;
    int pciBusID;
    int pciDeviceID;
    int pciDomainID;
    int tccDriver;
    int asyncEngineCount;
    int unifiedAddressing;
    int memoryClockRate;
    int memoryBusWidth;
    int l2CacheSize;
    int maxThreadsPerMultiProcessor;
    int streamPrioritiesSupported;
    int globalL1CacheSupported;
    int localL1CacheSupported;
    size_t sharedMemPerMultiprocessor;
    int regsPerMultiprocessor;
    int managedMemory;
    int isMultiGpuBoard;
    int multiGpuBoardGroupID;
};
# 1398 "/usr/include/driver_types.h" 3 4
typedef struct cudaIpcEventHandle_st
{
    char reserved[64];
}cudaIpcEventHandle_t;




typedef struct cudaIpcMemHandle_st
{
    char reserved[64];
}cudaIpcMemHandle_t;
# 1420 "/usr/include/driver_types.h" 3 4
typedef enum cudaError cudaError_t;




typedef struct CUstream_st *cudaStream_t;




typedef struct CUevent_st *cudaEvent_t;




typedef struct cudaGraphicsResource *cudaGraphicsResource_t;




typedef struct CUuuid_st cudaUUID_t;




typedef enum cudaOutputMode cudaOutputMode_t;
# 60 "/usr/include/builtin_types.h" 2 3 4


# 1 "/usr/include/surface_types.h" 1 3 4
# 84 "/usr/include/surface_types.h" 3 4
enum cudaSurfaceBoundaryMode
{
    cudaBoundaryModeZero = 0,
    cudaBoundaryModeClamp = 1,
    cudaBoundaryModeTrap = 2
};




enum cudaSurfaceFormatMode
{
    cudaFormatModeForced = 0,
    cudaFormatModeAuto = 1
};




struct surfaceReference
{



    struct cudaChannelFormatDesc channelDesc;
};




typedef unsigned long long cudaSurfaceObject_t;
# 63 "/usr/include/builtin_types.h" 2 3 4
# 1 "/usr/include/texture_types.h" 1 3 4
# 84 "/usr/include/texture_types.h" 3 4
enum cudaTextureAddressMode
{
    cudaAddressModeWrap = 0,
    cudaAddressModeClamp = 1,
    cudaAddressModeMirror = 2,
    cudaAddressModeBorder = 3
};




enum cudaTextureFilterMode
{
    cudaFilterModePoint = 0,
    cudaFilterModeLinear = 1
};




enum cudaTextureReadMode
{
    cudaReadModeElementType = 0,
    cudaReadModeNormalizedFloat = 1
};




struct textureReference
{



    int normalized;



    enum cudaTextureFilterMode filterMode;



    enum cudaTextureAddressMode addressMode[3];



    struct cudaChannelFormatDesc channelDesc;



    int sRGB;



    unsigned int maxAnisotropy;



    enum cudaTextureFilterMode mipmapFilterMode;



    float mipmapLevelBias;



    float minMipmapLevelClamp;



    float maxMipmapLevelClamp;
    int __cudaReserved[15];
};




struct cudaTextureDesc
{



    enum cudaTextureAddressMode addressMode[3];



    enum cudaTextureFilterMode filterMode;



    enum cudaTextureReadMode readMode;



    int sRGB;



    int normalizedCoords;



    unsigned int maxAnisotropy;



    enum cudaTextureFilterMode mipmapFilterMode;



    float mipmapLevelBias;



    float minMipmapLevelClamp;



    float maxMipmapLevelClamp;
};




typedef unsigned long long cudaTextureObject_t;
# 64 "/usr/include/builtin_types.h" 2 3 4
# 1 "/usr/include/vector_types.h" 1 3 4
# 61 "/usr/include/vector_types.h" 3 4
# 1 "/usr/include/builtin_types.h" 1 3 4
# 64 "/usr/include/builtin_types.h" 3 4
# 1 "/usr/include/vector_types.h" 1 3 4
# 64 "/usr/include/builtin_types.h" 2 3 4
# 62 "/usr/include/vector_types.h" 2 3 4
# 98 "/usr/include/vector_types.h" 3 4
struct char1
{
    signed char x;
};

struct uchar1
{
    unsigned char x;
};


struct __attribute__((aligned(2))) char2
{
    signed char x, y;
};

struct __attribute__((aligned(2))) uchar2
{
    unsigned char x, y;
};

struct char3
{
    signed char x, y, z;
};

struct uchar3
{
    unsigned char x, y, z;
};

struct __attribute__((aligned(4))) char4
{
    signed char x, y, z, w;
};

struct __attribute__((aligned(4))) uchar4
{
    unsigned char x, y, z, w;
};

struct short1
{
    short x;
};

struct ushort1
{
    unsigned short x;
};

struct __attribute__((aligned(4))) short2
{
    short x, y;
};

struct __attribute__((aligned(4))) ushort2
{
    unsigned short x, y;
};

struct short3
{
    short x, y, z;
};

struct ushort3
{
    unsigned short x, y, z;
};

struct __attribute__((aligned(8))) short4 { short x; short y; short z; short w; };
struct __attribute__((aligned(8))) ushort4 { unsigned short x; unsigned short y; unsigned short z; unsigned short w; };

struct int1
{
    int x;
};

struct uint1
{
    unsigned int x;
};

struct __attribute__((aligned(8))) int2 { int x; int y; };
struct __attribute__((aligned(8))) uint2 { unsigned int x; unsigned int y; };

struct int3
{
    int x, y, z;
};

struct uint3
{
    unsigned int x, y, z;
};

struct __attribute__((aligned(16))) int4
{
    int x, y, z, w;
};

struct __attribute__((aligned(16))) uint4
{
    unsigned int x, y, z, w;
};

struct long1
{
    long int x;
};

struct ulong1
{
    unsigned long x;
};






struct __attribute__((aligned(2*sizeof(long int)))) long2
{
    long int x, y;
};

struct __attribute__((aligned(2*sizeof(unsigned long int)))) ulong2
{
    unsigned long int x, y;
};



struct long3
{
    long int x, y, z;
};

struct ulong3
{
    unsigned long int x, y, z;
};

struct __attribute__((aligned(16))) long4
{
    long int x, y, z, w;
};

struct __attribute__((aligned(16))) ulong4
{
    unsigned long int x, y, z, w;
};

struct float1
{
    float x;
};
# 274 "/usr/include/vector_types.h" 3 4
struct __attribute__((aligned(8))) float2 { float x; float y; };




struct float3
{
    float x, y, z;
};

struct __attribute__((aligned(16))) float4
{
    float x, y, z, w;
};

struct longlong1
{
    long long int x;
};

struct ulonglong1
{
    unsigned long long int x;
};

struct __attribute__((aligned(16))) longlong2
{
    long long int x, y;
};

struct __attribute__((aligned(16))) ulonglong2
{
    unsigned long long int x, y;
};

struct longlong3
{
    long long int x, y, z;
};

struct ulonglong3
{
    unsigned long long int x, y, z;
};

struct __attribute__((aligned(16))) longlong4
{
    long long int x, y, z ,w;
};

struct __attribute__((aligned(16))) ulonglong4
{
    unsigned long long int x, y, z, w;
};

struct double1
{
    double x;
};

struct __attribute__((aligned(16))) double2
{
    double x, y;
};

struct double3
{
    double x, y, z;
};

struct __attribute__((aligned(16))) double4
{
    double x, y, z, w;
};
# 362 "/usr/include/vector_types.h" 3 4
typedef struct char1 char1;
typedef struct uchar1 uchar1;
typedef struct char2 char2;
typedef struct uchar2 uchar2;
typedef struct char3 char3;
typedef struct uchar3 uchar3;
typedef struct char4 char4;
typedef struct uchar4 uchar4;
typedef struct short1 short1;
typedef struct ushort1 ushort1;
typedef struct short2 short2;
typedef struct ushort2 ushort2;
typedef struct short3 short3;
typedef struct ushort3 ushort3;
typedef struct short4 short4;
typedef struct ushort4 ushort4;
typedef struct int1 int1;
typedef struct uint1 uint1;
typedef struct int2 int2;
typedef struct uint2 uint2;
typedef struct int3 int3;
typedef struct uint3 uint3;
typedef struct int4 int4;
typedef struct uint4 uint4;
typedef struct long1 long1;
typedef struct ulong1 ulong1;
typedef struct long2 long2;
typedef struct ulong2 ulong2;
typedef struct long3 long3;
typedef struct ulong3 ulong3;
typedef struct long4 long4;
typedef struct ulong4 ulong4;
typedef struct float1 float1;
typedef struct float2 float2;
typedef struct float3 float3;
typedef struct float4 float4;
typedef struct longlong1 longlong1;
typedef struct ulonglong1 ulonglong1;
typedef struct longlong2 longlong2;
typedef struct ulonglong2 ulonglong2;
typedef struct longlong3 longlong3;
typedef struct ulonglong3 ulonglong3;
typedef struct longlong4 longlong4;
typedef struct ulonglong4 ulonglong4;
typedef struct double1 double1;
typedef struct double2 double2;
typedef struct double3 double3;
typedef struct double4 double4;







struct dim3
{
    unsigned int x, y, z;

    dim3(unsigned int vx = 1, unsigned int vy = 1, unsigned int vz = 1) : x(vx), y(vy), z(vz) {}
    dim3(uint3 v) : x(v.x), y(v.y), z(v.z) {}
    operator uint3(void) { uint3 t; t.x = x; t.y = y; t.z = z; return t; }

};

typedef struct dim3 dim3;
# 64 "/usr/include/builtin_types.h" 2 3 4
# 70 "/usr/include/crt/host_runtime.h" 2 3 4
# 1 "/usr/include/crt/storage_class.h" 1 3 4
# 71 "/usr/include/crt/host_runtime.h" 2 3 4
# 218 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h" 2 3
# 151 "/usr/include/driver_types.h" 3
# 741 "/usr/include/driver_types.h" 3
# 752 "/usr/include/driver_types.h" 3
# 764 "/usr/include/driver_types.h" 3
typedef struct cudaArray *cudaArray_t;
# 769 "/usr/include/driver_types.h" 3
typedef const cudaArray *cudaArray_const_t;
# 771 "/usr/include/driver_types.h" 3
struct cudaArray;
# 776 "/usr/include/driver_types.h" 3
typedef struct cudaMipmappedArray *cudaMipmappedArray_t;
# 781 "/usr/include/driver_types.h" 3
typedef const cudaMipmappedArray *cudaMipmappedArray_const_t;
# 783 "/usr/include/driver_types.h" 3
struct cudaMipmappedArray;
# 788 "/usr/include/driver_types.h" 3
# 797 "/usr/include/driver_types.h" 3
# 811 "/usr/include/driver_types.h" 3
# 824 "/usr/include/driver_types.h" 3
# 836 "/usr/include/driver_types.h" 3
# 846 "/usr/include/driver_types.h" 3
# 863 "/usr/include/driver_types.h" 3
# 881 "/usr/include/driver_types.h" 3
struct cudaGraphicsResource;
# 886 "/usr/include/driver_types.h" 3
# 898 "/usr/include/driver_types.h" 3
# 908 "/usr/include/driver_types.h" 3
# 921 "/usr/include/driver_types.h" 3
# 932 "/usr/include/driver_types.h" 3
# 974 "/usr/include/driver_types.h" 3
# 1002 "/usr/include/driver_types.h" 3
# 1017 "/usr/include/driver_types.h" 3
# 1057 "/usr/include/driver_types.h" 3
# 1113 "/usr/include/driver_types.h" 3
# 1125 "/usr/include/driver_types.h" 3
# 1135 "/usr/include/driver_types.h" 3
# 1146 "/usr/include/driver_types.h" 3
# 1158 "/usr/include/driver_types.h" 3
# 1167 "/usr/include/driver_types.h" 3
# 1258 "/usr/include/driver_types.h" 3
# 1401 "/usr/include/driver_types.h" 3
# 1409 "/usr/include/driver_types.h" 3
# 1420 "/usr/include/driver_types.h" 3
# 1425 "/usr/include/driver_types.h" 3
# 1430 "/usr/include/driver_types.h" 3
# 1435 "/usr/include/driver_types.h" 3
# 1440 "/usr/include/driver_types.h" 3
# 1445 "/usr/include/driver_types.h" 3
# 84 "/usr/include/surface_types.h" 3
# 94 "/usr/include/surface_types.h" 3
# 103 "/usr/include/surface_types.h" 3
# 114 "/usr/include/surface_types.h" 3
# 84 "/usr/include/texture_types.h" 3
# 95 "/usr/include/texture_types.h" 3
# 104 "/usr/include/texture_types.h" 3
# 113 "/usr/include/texture_types.h" 3
# 161 "/usr/include/texture_types.h" 3
# 208 "/usr/include/texture_types.h" 3
# 98 "/usr/include/vector_types.h" 3
# 103 "/usr/include/vector_types.h" 3
# 109 "/usr/include/vector_types.h" 3
# 114 "/usr/include/vector_types.h" 3
# 119 "/usr/include/vector_types.h" 3
# 124 "/usr/include/vector_types.h" 3
# 129 "/usr/include/vector_types.h" 3
# 134 "/usr/include/vector_types.h" 3
# 139 "/usr/include/vector_types.h" 3
# 144 "/usr/include/vector_types.h" 3
# 149 "/usr/include/vector_types.h" 3
# 154 "/usr/include/vector_types.h" 3
# 159 "/usr/include/vector_types.h" 3
# 164 "/usr/include/vector_types.h" 3
# 169 "/usr/include/vector_types.h" 3
# 170 "/usr/include/vector_types.h" 3
# 172 "/usr/include/vector_types.h" 3
# 177 "/usr/include/vector_types.h" 3
# 182 "/usr/include/vector_types.h" 3
# 183 "/usr/include/vector_types.h" 3
# 185 "/usr/include/vector_types.h" 3
# 190 "/usr/include/vector_types.h" 3
# 195 "/usr/include/vector_types.h" 3
# 200 "/usr/include/vector_types.h" 3
# 205 "/usr/include/vector_types.h" 3
# 210 "/usr/include/vector_types.h" 3
# 220 "/usr/include/vector_types.h" 3
# 225 "/usr/include/vector_types.h" 3
# 232 "/usr/include/vector_types.h" 3
# 237 "/usr/include/vector_types.h" 3
# 242 "/usr/include/vector_types.h" 3
# 247 "/usr/include/vector_types.h" 3
# 252 "/usr/include/vector_types.h" 3
# 274 "/usr/include/vector_types.h" 3
# 279 "/usr/include/vector_types.h" 3
# 284 "/usr/include/vector_types.h" 3
# 289 "/usr/include/vector_types.h" 3
# 294 "/usr/include/vector_types.h" 3
# 299 "/usr/include/vector_types.h" 3
# 304 "/usr/include/vector_types.h" 3
# 309 "/usr/include/vector_types.h" 3
# 314 "/usr/include/vector_types.h" 3
# 319 "/usr/include/vector_types.h" 3
# 324 "/usr/include/vector_types.h" 3
# 329 "/usr/include/vector_types.h" 3
# 334 "/usr/include/vector_types.h" 3
# 339 "/usr/include/vector_types.h" 3
# 344 "/usr/include/vector_types.h" 3
# 362 "/usr/include/vector_types.h" 3
# 363 "/usr/include/vector_types.h" 3
# 364 "/usr/include/vector_types.h" 3
# 365 "/usr/include/vector_types.h" 3
# 366 "/usr/include/vector_types.h" 3
# 367 "/usr/include/vector_types.h" 3
# 368 "/usr/include/vector_types.h" 3
# 369 "/usr/include/vector_types.h" 3
# 370 "/usr/include/vector_types.h" 3
# 371 "/usr/include/vector_types.h" 3
# 372 "/usr/include/vector_types.h" 3
# 373 "/usr/include/vector_types.h" 3
# 374 "/usr/include/vector_types.h" 3
# 375 "/usr/include/vector_types.h" 3
# 376 "/usr/include/vector_types.h" 3
# 377 "/usr/include/vector_types.h" 3
# 378 "/usr/include/vector_types.h" 3
# 379 "/usr/include/vector_types.h" 3
# 380 "/usr/include/vector_types.h" 3
# 381 "/usr/include/vector_types.h" 3
# 382 "/usr/include/vector_types.h" 3
# 383 "/usr/include/vector_types.h" 3
# 384 "/usr/include/vector_types.h" 3
# 385 "/usr/include/vector_types.h" 3
# 386 "/usr/include/vector_types.h" 3
# 387 "/usr/include/vector_types.h" 3
# 388 "/usr/include/vector_types.h" 3
# 389 "/usr/include/vector_types.h" 3
# 390 "/usr/include/vector_types.h" 3
# 391 "/usr/include/vector_types.h" 3
# 392 "/usr/include/vector_types.h" 3
# 393 "/usr/include/vector_types.h" 3
# 394 "/usr/include/vector_types.h" 3
# 395 "/usr/include/vector_types.h" 3
# 396 "/usr/include/vector_types.h" 3
# 397 "/usr/include/vector_types.h" 3
# 398 "/usr/include/vector_types.h" 3
# 399 "/usr/include/vector_types.h" 3
# 400 "/usr/include/vector_types.h" 3
# 401 "/usr/include/vector_types.h" 3
# 402 "/usr/include/vector_types.h" 3
# 403 "/usr/include/vector_types.h" 3
# 404 "/usr/include/vector_types.h" 3
# 405 "/usr/include/vector_types.h" 3
# 406 "/usr/include/vector_types.h" 3
# 407 "/usr/include/vector_types.h" 3
# 408 "/usr/include/vector_types.h" 3
# 409 "/usr/include/vector_types.h" 3
# 417 "/usr/include/vector_types.h" 3
# 427 "/usr/include/vector_types.h" 3
# 106 "/usr/include/cuda_device_runtime_api.h" 3
extern "C" cudaError_t cudaDeviceGetAttribute(int * value, cudaDeviceAttr attr, int device);
# 107 "/usr/include/cuda_device_runtime_api.h" 3
extern "C" cudaError_t cudaDeviceGetLimit(size_t * pValue, cudaLimit limit);
# 108 "/usr/include/cuda_device_runtime_api.h" 3
extern "C" cudaError_t cudaDeviceGetCacheConfig(cudaFuncCache * pCacheConfig);
# 109 "/usr/include/cuda_device_runtime_api.h" 3
extern "C" cudaError_t cudaDeviceGetSharedMemConfig(cudaSharedMemConfig * pConfig);
# 110 "/usr/include/cuda_device_runtime_api.h" 3
extern "C" cudaError_t cudaDeviceSynchronize();
# 111 "/usr/include/cuda_device_runtime_api.h" 3
extern "C" cudaError_t cudaGetLastError();
# 112 "/usr/include/cuda_device_runtime_api.h" 3
extern "C" cudaError_t cudaPeekAtLastError();
# 113 "/usr/include/cuda_device_runtime_api.h" 3
extern "C" const char *cudaGetErrorString(cudaError_t error);
# 114 "/usr/include/cuda_device_runtime_api.h" 3
extern "C" const char *cudaGetErrorName(cudaError_t error);
# 115 "/usr/include/cuda_device_runtime_api.h" 3
extern "C" cudaError_t cudaGetDeviceCount(int * count);
# 116 "/usr/include/cuda_device_runtime_api.h" 3
extern "C" cudaError_t cudaGetDevice(int * device);
# 117 "/usr/include/cuda_device_runtime_api.h" 3
extern "C" cudaError_t cudaStreamCreateWithFlags(cudaStream_t * pStream, unsigned flags);
# 118 "/usr/include/cuda_device_runtime_api.h" 3
extern "C" cudaError_t cudaStreamDestroy(cudaStream_t stream);
# 119 "/usr/include/cuda_device_runtime_api.h" 3
extern "C" cudaError_t cudaStreamWaitEvent(cudaStream_t stream, cudaEvent_t event, unsigned flags);
# 120 "/usr/include/cuda_device_runtime_api.h" 3
extern "C" { __attribute__((unused)) extern cudaError_t cudaStreamWaitEvent_ptsz(cudaStream_t stream, cudaEvent_t event, unsigned flags); }
# 121 "/usr/include/cuda_device_runtime_api.h" 3
extern "C" cudaError_t cudaEventCreateWithFlags(cudaEvent_t * event, unsigned flags);
# 122 "/usr/include/cuda_device_runtime_api.h" 3
extern "C" cudaError_t cudaEventRecord(cudaEvent_t event, cudaStream_t stream);
# 123 "/usr/include/cuda_device_runtime_api.h" 3
extern "C" { __attribute__((unused)) extern cudaError_t cudaEventRecord_ptsz(cudaEvent_t event, cudaStream_t stream); }
# 124 "/usr/include/cuda_device_runtime_api.h" 3
extern "C" cudaError_t cudaEventDestroy(cudaEvent_t event);
# 125 "/usr/include/cuda_device_runtime_api.h" 3
extern "C" cudaError_t cudaFuncGetAttributes(cudaFuncAttributes * attr, const void * func);
# 126 "/usr/include/cuda_device_runtime_api.h" 3
extern "C" cudaError_t cudaFree(void * devPtr);
# 127 "/usr/include/cuda_device_runtime_api.h" 3
extern "C" cudaError_t cudaMalloc(void ** devPtr, size_t size);
# 128 "/usr/include/cuda_device_runtime_api.h" 3
extern "C" cudaError_t cudaMemcpyAsync(void * dst, const void * src, size_t count, cudaMemcpyKind kind, cudaStream_t stream);
# 129 "/usr/include/cuda_device_runtime_api.h" 3
extern "C" { __attribute__((unused)) extern cudaError_t cudaMemcpyAsync_ptsz(void * dst, const void * src, size_t count, cudaMemcpyKind kind, cudaStream_t stream); }
# 130 "/usr/include/cuda_device_runtime_api.h" 3
extern "C" cudaError_t cudaMemcpy2DAsync(void * dst, size_t dpitch, const void * src, size_t spitch, size_t width, size_t height, cudaMemcpyKind kind, cudaStream_t stream);
# 131 "/usr/include/cuda_device_runtime_api.h" 3
extern "C" { __attribute__((unused)) extern cudaError_t cudaMemcpy2DAsync_ptsz(void * dst, size_t dpitch, const void * src, size_t spitch, size_t width, size_t height, cudaMemcpyKind kind, cudaStream_t stream); }
# 132 "/usr/include/cuda_device_runtime_api.h" 3
extern "C" cudaError_t cudaMemcpy3DAsync(const cudaMemcpy3DParms * p, cudaStream_t stream);
# 133 "/usr/include/cuda_device_runtime_api.h" 3
extern "C" { __attribute__((unused)) extern cudaError_t cudaMemcpy3DAsync_ptsz(const cudaMemcpy3DParms * p, cudaStream_t stream); }
# 134 "/usr/include/cuda_device_runtime_api.h" 3
extern "C" cudaError_t cudaMemsetAsync(void * devPtr, int value, size_t count, cudaStream_t stream);
# 135 "/usr/include/cuda_device_runtime_api.h" 3
extern "C" { __attribute__((unused)) extern cudaError_t cudaMemsetAsync_ptsz(void * devPtr, int value, size_t count, cudaStream_t stream); }
# 136 "/usr/include/cuda_device_runtime_api.h" 3
extern "C" cudaError_t cudaMemset2DAsync(void * devPtr, size_t pitch, int value, size_t width, size_t height, cudaStream_t stream);
# 137 "/usr/include/cuda_device_runtime_api.h" 3
extern "C" { __attribute__((unused)) extern cudaError_t cudaMemset2DAsync_ptsz(void * devPtr, size_t pitch, int value, size_t width, size_t height, cudaStream_t stream); }
# 138 "/usr/include/cuda_device_runtime_api.h" 3
extern "C" cudaError_t cudaMemset3DAsync(cudaPitchedPtr pitchedDevPtr, int value, cudaExtent extent, cudaStream_t stream);
# 139 "/usr/include/cuda_device_runtime_api.h" 3
extern "C" { __attribute__((unused)) extern cudaError_t cudaMemset3DAsync_ptsz(cudaPitchedPtr pitchedDevPtr, int value, cudaExtent extent, cudaStream_t stream); }
# 140 "/usr/include/cuda_device_runtime_api.h" 3
extern "C" cudaError_t cudaRuntimeGetVersion(int * runtimeVersion);
# 161 "/usr/include/cuda_device_runtime_api.h" 3
extern "C" { __attribute__((unused)) extern void *cudaGetParameterBuffer(size_t alignment, size_t size); }
# 189 "/usr/include/cuda_device_runtime_api.h" 3
extern "C" { __attribute__((unused)) extern void *cudaGetParameterBufferV2(void * func, dim3 gridDimension, dim3 blockDimension, unsigned sharedMemSize); }
# 190 "/usr/include/cuda_device_runtime_api.h" 3
extern "C" { __attribute__((unused)) extern cudaError_t cudaLaunchDevice_ptsz(void * func, void * parameterBuffer, dim3 gridDimension, dim3 blockDimension, unsigned sharedMemSize, cudaStream_t stream); }
# 191 "/usr/include/cuda_device_runtime_api.h" 3
extern "C" { __attribute__((unused)) extern cudaError_t cudaLaunchDeviceV2_ptsz(void * parameterBuffer, cudaStream_t stream); }
# 209 "/usr/include/cuda_device_runtime_api.h" 3
extern "C" { __attribute__((unused)) extern cudaError_t cudaLaunchDevice(void * func, void * parameterBuffer, dim3 gridDimension, dim3 blockDimension, unsigned sharedMemSize, cudaStream_t stream); }
# 210 "/usr/include/cuda_device_runtime_api.h" 3
extern "C" { __attribute__((unused)) extern cudaError_t cudaLaunchDeviceV2(void * parameterBuffer, cudaStream_t stream); }
# 213 "/usr/include/cuda_device_runtime_api.h" 3
extern "C" cudaError_t cudaOccupancyMaxActiveBlocksPerMultiprocessor(int * numBlocks, const void * func, int blockSize, size_t dynamicSmemSize);
# 214 "/usr/include/cuda_device_runtime_api.h" 3
extern "C" cudaError_t cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(int * numBlocks, const void * func, int blockSize, size_t dynamicSmemSize, unsigned flags);
# 218 "/usr/include/cuda_device_runtime_api.h" 3
template< class T> static inline cudaError_t cudaMalloc(T ** devPtr, size_t size);
# 219 "/usr/include/cuda_device_runtime_api.h" 3
template< class T> static inline cudaError_t cudaFuncGetAttributes(cudaFuncAttributes * attr, T * entry);
# 220 "/usr/include/cuda_device_runtime_api.h" 3
template< class T> static inline cudaError_t cudaOccupancyMaxActiveBlocksPerMultiprocessor(int * numBlocks, T func, int blockSize, size_t dynamicSmemSize);
# 221 "/usr/include/cuda_device_runtime_api.h" 3
template< class T> static inline cudaError_t cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(int * numBlocks, T func, int blockSize, size_t dynamicSmemSize, unsigned flags);
# 251 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaDeviceReset();
# 268 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaDeviceSynchronize();
# 343 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaDeviceSetLimit(cudaLimit limit, size_t value);
# 372 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaDeviceGetLimit(size_t * pValue, cudaLimit limit);
# 403 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaDeviceGetCacheConfig(cudaFuncCache * pCacheConfig);
# 438 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaDeviceGetStreamPriorityRange(int * leastPriority, int * greatestPriority);
# 480 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaDeviceSetCacheConfig(cudaFuncCache cacheConfig);
# 509 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaDeviceGetSharedMemConfig(cudaSharedMemConfig * pConfig);
# 551 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaDeviceSetSharedMemConfig(cudaSharedMemConfig config);
# 574 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaDeviceGetByPCIBusId(int * device, const char * pciBusId);
# 601 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaDeviceGetPCIBusId(char * pciBusId, int len, int device);
# 643 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaIpcGetEventHandle(cudaIpcEventHandle_t * handle, cudaEvent_t event);
# 678 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaIpcOpenEventHandle(cudaEvent_t * event, cudaIpcEventHandle_t handle);
# 716 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaIpcGetMemHandle(cudaIpcMemHandle_t * handle, void * devPtr);
# 766 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaIpcOpenMemHandle(void ** devPtr, cudaIpcMemHandle_t handle, unsigned flags);
# 796 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaIpcCloseMemHandle(void * devPtr);
# 836 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaThreadExit();
# 860 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaThreadSynchronize();
# 907 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaThreadSetLimit(cudaLimit limit, size_t value);
# 938 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaThreadGetLimit(size_t * pValue, cudaLimit limit);
# 973 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaThreadGetCacheConfig(cudaFuncCache * pCacheConfig);
# 1019 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaThreadSetCacheConfig(cudaFuncCache cacheConfig);
# 1073 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaGetLastError();
# 1114 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaPeekAtLastError();
# 1129 "/usr/include/cuda_runtime_api.h" 3
extern "C" const char *cudaGetErrorName(cudaError_t error);
# 1144 "/usr/include/cuda_runtime_api.h" 3
extern "C" const char *cudaGetErrorString(cudaError_t error);
# 1174 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaGetDeviceCount(int * count);
# 1410 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaGetDeviceProperties(cudaDeviceProp * prop, int device);
# 1570 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaDeviceGetAttribute(int * value, cudaDeviceAttr attr, int device);
# 1589 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaChooseDevice(int * device, const cudaDeviceProp * prop);
# 1623 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaSetDevice(int device);
# 1640 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaGetDevice(int * device);
# 1669 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaSetValidDevices(int * device_arr, int len);
# 1731 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaSetDeviceFlags(unsigned flags);
# 1772 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaGetDeviceFlags(unsigned * flags);
# 1809 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaStreamCreate(cudaStream_t * pStream);
# 1838 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaStreamCreateWithFlags(cudaStream_t * pStream, unsigned flags);
# 1881 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaStreamCreateWithPriority(cudaStream_t * pStream, unsigned flags, int priority);
# 1905 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaStreamGetPriority(cudaStream_t hStream, int * priority);
# 1926 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaStreamGetFlags(cudaStream_t hStream, unsigned * flags);
# 1947 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaStreamDestroy(cudaStream_t stream);
# 1979 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaStreamWaitEvent(cudaStream_t stream, cudaEvent_t event, unsigned flags);
# 1993 "/usr/include/cuda_runtime_api.h" 3
extern "C" { typedef void (*cudaStreamCallback_t)(cudaStream_t stream, cudaError_t status, void * userData); }
# 2050 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaStreamAddCallback(cudaStream_t stream, cudaStreamCallback_t callback, void * userData, unsigned flags);
# 2070 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaStreamSynchronize(cudaStream_t stream);
# 2091 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaStreamQuery(cudaStream_t stream);
# 2157 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaStreamAttachMemAsync(cudaStream_t stream, void * devPtr, size_t length, unsigned flags);
# 2193 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaEventCreate(cudaEvent_t * event);
# 2227 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaEventCreateWithFlags(cudaEvent_t * event, unsigned flags);
# 2258 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaEventRecord(cudaEvent_t event, cudaStream_t stream = 0);
# 2290 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaEventQuery(cudaEvent_t event);
# 2322 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaEventSynchronize(cudaEvent_t event);
# 2347 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaEventDestroy(cudaEvent_t event);
# 2388 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaEventElapsedTime(float * ms, cudaEvent_t start, cudaEvent_t end);
# 2447 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaLaunchKernel(const void * func, dim3 gridDim, dim3 blockDim, void ** args, size_t sharedMem, cudaStream_t stream);
# 2497 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaFuncSetCacheConfig(const void * func, cudaFuncCache cacheConfig);
# 2551 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaFuncSetSharedMemConfig(const void * func, cudaSharedMemConfig config);
# 2585 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaFuncGetAttributes(cudaFuncAttributes * attr, const void * func);
# 2608 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaSetDoubleForDevice(double * d);
# 2631 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaSetDoubleForHost(double * d);
# 2687 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaOccupancyMaxActiveBlocksPerMultiprocessor(int * numBlocks, const void * func, int blockSize, size_t dynamicSMemSize);
# 2731 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(int * numBlocks, const void * func, int blockSize, size_t dynamicSMemSize, unsigned flags);
# 2782 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaConfigureCall(dim3 gridDim, dim3 blockDim, size_t sharedMem = 0, cudaStream_t stream = 0);
# 2811 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaSetupArgument(const void * arg, size_t size, size_t offset);
# 2849 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaLaunch(const void * func);
# 2938 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaMallocManaged(void ** devPtr, size_t size, unsigned flags);
# 2964 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaMalloc(void ** devPtr, size_t size);
# 2993 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaMallocHost(void ** ptr, size_t size);
# 3032 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaMallocPitch(void ** devPtr, size_t * pitch, size_t width, size_t height);
# 3074 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaMallocArray(cudaArray_t * array, const cudaChannelFormatDesc * desc, size_t width, size_t height = 0, unsigned flags = 0);
# 3101 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaFree(void * devPtr);
# 3121 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaFreeHost(void * ptr);
# 3143 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaFreeArray(cudaArray_t array);
# 3165 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaFreeMipmappedArray(cudaMipmappedArray_t mipmappedArray);
# 3224 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaHostAlloc(void ** pHost, size_t size, unsigned flags);
# 3286 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaHostRegister(void * ptr, size_t size, unsigned flags);
# 3305 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaHostUnregister(void * ptr);
# 3332 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaHostGetDevicePointer(void ** pDevice, void * pHost, unsigned flags);
# 3351 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaHostGetFlags(unsigned * pFlags, void * pHost);
# 3386 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaMalloc3D(cudaPitchedPtr * pitchedDevPtr, cudaExtent extent);
# 3521 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaMalloc3DArray(cudaArray_t * array, const cudaChannelFormatDesc * desc, cudaExtent extent, unsigned flags = 0);
# 3642 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaMallocMipmappedArray(cudaMipmappedArray_t * mipmappedArray, const cudaChannelFormatDesc * desc, cudaExtent extent, unsigned numLevels, unsigned flags = 0);
# 3668 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaGetMipmappedArrayLevel(cudaArray_t * levelArray, cudaMipmappedArray_const_t mipmappedArray, unsigned level);
# 3765 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaMemcpy3D(const cudaMemcpy3DParms * p);
# 3793 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaMemcpy3DPeer(const cudaMemcpy3DPeerParms * p);
# 3901 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaMemcpy3DAsync(const cudaMemcpy3DParms * p, cudaStream_t stream = 0);
# 3924 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaMemcpy3DPeerAsync(const cudaMemcpy3DPeerParms * p, cudaStream_t stream = 0);
# 3943 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaMemGetInfo(size_t * free, size_t * total);
# 3964 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaArrayGetInfo(cudaChannelFormatDesc * desc, cudaExtent * extent, unsigned * flags, cudaArray_t array);
# 3999 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaMemcpy(void * dst, const void * src, size_t count, cudaMemcpyKind kind);
# 4031 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaMemcpyPeer(void * dst, int dstDevice, const void * src, int srcDevice, size_t count);
# 4065 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaMemcpyToArray(cudaArray_t dst, size_t wOffset, size_t hOffset, const void * src, size_t count, cudaMemcpyKind kind);
# 4099 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaMemcpyFromArray(void * dst, cudaArray_const_t src, size_t wOffset, size_t hOffset, size_t count, cudaMemcpyKind kind);
# 4134 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaMemcpyArrayToArray(cudaArray_t dst, size_t wOffsetDst, size_t hOffsetDst, cudaArray_const_t src, size_t wOffsetSrc, size_t hOffsetSrc, size_t count, cudaMemcpyKind kind = cudaMemcpyDeviceToDevice);
# 4176 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaMemcpy2D(void * dst, size_t dpitch, const void * src, size_t spitch, size_t width, size_t height, cudaMemcpyKind kind);
# 4218 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaMemcpy2DToArray(cudaArray_t dst, size_t wOffset, size_t hOffset, const void * src, size_t spitch, size_t width, size_t height, cudaMemcpyKind kind);
# 4260 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaMemcpy2DFromArray(void * dst, size_t dpitch, cudaArray_const_t src, size_t wOffset, size_t hOffset, size_t width, size_t height, cudaMemcpyKind kind);
# 4300 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaMemcpy2DArrayToArray(cudaArray_t dst, size_t wOffsetDst, size_t hOffsetDst, cudaArray_const_t src, size_t wOffsetSrc, size_t hOffsetSrc, size_t width, size_t height, cudaMemcpyKind kind = cudaMemcpyDeviceToDevice);
# 4335 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaMemcpyToSymbol(const void * symbol, const void * src, size_t count, size_t offset = 0, cudaMemcpyKind kind = cudaMemcpyHostToDevice);
# 4370 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaMemcpyFromSymbol(void * dst, const void * symbol, size_t count, size_t offset = 0, cudaMemcpyKind kind = cudaMemcpyDeviceToHost);
# 4416 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaMemcpyAsync(void * dst, const void * src, size_t count, cudaMemcpyKind kind, cudaStream_t stream = 0);
# 4448 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaMemcpyPeerAsync(void * dst, int dstDevice, const void * src, int srcDevice, size_t count, cudaStream_t stream = 0);
# 4490 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaMemcpyToArrayAsync(cudaArray_t dst, size_t wOffset, size_t hOffset, const void * src, size_t count, cudaMemcpyKind kind, cudaStream_t stream = 0);
# 4532 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaMemcpyFromArrayAsync(void * dst, cudaArray_const_t src, size_t wOffset, size_t hOffset, size_t count, cudaMemcpyKind kind, cudaStream_t stream = 0);
# 4587 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaMemcpy2DAsync(void * dst, size_t dpitch, const void * src, size_t spitch, size_t width, size_t height, cudaMemcpyKind kind, cudaStream_t stream = 0);
# 4638 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaMemcpy2DToArrayAsync(cudaArray_t dst, size_t wOffset, size_t hOffset, const void * src, size_t spitch, size_t width, size_t height, cudaMemcpyKind kind, cudaStream_t stream = 0);
# 4688 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaMemcpy2DFromArrayAsync(void * dst, size_t dpitch, cudaArray_const_t src, size_t wOffset, size_t hOffset, size_t width, size_t height, cudaMemcpyKind kind, cudaStream_t stream = 0);
# 4731 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaMemcpyToSymbolAsync(const void * symbol, const void * src, size_t count, size_t offset, cudaMemcpyKind kind, cudaStream_t stream = 0);
# 4774 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaMemcpyFromSymbolAsync(void * dst, const void * symbol, size_t count, size_t offset, cudaMemcpyKind kind, cudaStream_t stream = 0);
# 4800 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaMemset(void * devPtr, int value, size_t count);
# 4830 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaMemset2D(void * devPtr, size_t pitch, int value, size_t width, size_t height);
# 4873 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaMemset3D(cudaPitchedPtr pitchedDevPtr, int value, cudaExtent extent);
# 4905 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaMemsetAsync(void * devPtr, int value, size_t count, cudaStream_t stream = 0);
# 4942 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaMemset2DAsync(void * devPtr, size_t pitch, int value, size_t width, size_t height, cudaStream_t stream = 0);
# 4992 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaMemset3DAsync(cudaPitchedPtr pitchedDevPtr, int value, cudaExtent extent, cudaStream_t stream = 0);
# 5015 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaGetSymbolAddress(void ** devPtr, const void * symbol);
# 5037 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaGetSymbolSize(size_t * size, const void * symbol);
# 5190 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaPointerGetAttributes(cudaPointerAttributes * attributes, const void * ptr);
# 5228 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaDeviceCanAccessPeer(int * canAccessPeer, int device, int peerDevice);
# 5267 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaDeviceEnablePeerAccess(int peerDevice, unsigned flags);
# 5286 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaDeviceDisablePeerAccess(int peerDevice);
# 5344 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaGraphicsUnregisterResource(cudaGraphicsResource_t resource);
# 5376 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaGraphicsResourceSetMapFlags(cudaGraphicsResource_t resource, unsigned flags);
# 5412 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaGraphicsMapResources(int count, cudaGraphicsResource_t * resources, cudaStream_t stream = 0);
# 5444 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaGraphicsUnmapResources(int count, cudaGraphicsResource_t * resources, cudaStream_t stream = 0);
# 5473 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaGraphicsResourceGetMappedPointer(void ** devPtr, size_t * size, cudaGraphicsResource_t resource);
# 5507 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaGraphicsSubResourceGetMappedArray(cudaArray_t * array, cudaGraphicsResource_t resource, unsigned arrayIndex, unsigned mipLevel);
# 5532 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaGraphicsResourceGetMappedMipmappedArray(cudaMipmappedArray_t * mipmappedArray, cudaGraphicsResource_t resource);
# 5572 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaGetChannelDesc(cudaChannelFormatDesc * desc, cudaArray_const_t array);
# 5607 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaChannelFormatDesc cudaCreateChannelDesc(int x, int y, int z, int w, cudaChannelFormatKind f);
# 5654 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaBindTexture(size_t * offset, const textureReference * texref, const void * devPtr, const cudaChannelFormatDesc * desc, size_t size = ((2147483647) * 2U) + 1U);
# 5705 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaBindTexture2D(size_t * offset, const textureReference * texref, const void * devPtr, const cudaChannelFormatDesc * desc, size_t width, size_t height, size_t pitch);
# 5733 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaBindTextureToArray(const textureReference * texref, cudaArray_const_t array, const cudaChannelFormatDesc * desc);
# 5761 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaBindTextureToMipmappedArray(const textureReference * texref, cudaMipmappedArray_const_t mipmappedArray, const cudaChannelFormatDesc * desc);
# 5782 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaUnbindTexture(const textureReference * texref);
# 5807 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaGetTextureAlignmentOffset(size_t * offset, const textureReference * texref);
# 5832 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaGetTextureReference(const textureReference ** texref, const void * symbol);
# 5872 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaBindSurfaceToArray(const surfaceReference * surfref, cudaArray_const_t array, const cudaChannelFormatDesc * desc);
# 5891 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaGetSurfaceReference(const surfaceReference ** surfref, const void * symbol);
# 6108 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaCreateTextureObject(cudaTextureObject_t * pTexObject, const cudaResourceDesc * pResDesc, const cudaTextureDesc * pTexDesc, const cudaResourceViewDesc * pResViewDesc);
# 6123 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaDestroyTextureObject(cudaTextureObject_t texObject);
# 6139 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaGetTextureObjectResourceDesc(cudaResourceDesc * pResDesc, cudaTextureObject_t texObject);
# 6155 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaGetTextureObjectTextureDesc(cudaTextureDesc * pTexDesc, cudaTextureObject_t texObject);
# 6172 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaGetTextureObjectResourceViewDesc(cudaResourceViewDesc * pResViewDesc, cudaTextureObject_t texObject);
# 6211 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaCreateSurfaceObject(cudaSurfaceObject_t * pSurfObject, const cudaResourceDesc * pResDesc);
# 6226 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaDestroySurfaceObject(cudaSurfaceObject_t surfObject);
# 6241 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaGetSurfaceObjectResourceDesc(cudaResourceDesc * pResDesc, cudaSurfaceObject_t surfObject);
# 6268 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaDriverGetVersion(int * driverVersion);
# 6285 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaRuntimeGetVersion(int * runtimeVersion);
# 6290 "/usr/include/cuda_runtime_api.h" 3
extern "C" cudaError_t cudaGetExportTable(const void ** ppExportTable, const cudaUUID_t * pExportTableId);
# 107 "/usr/include/channel_descriptor.h" 3
template< class T> inline cudaChannelFormatDesc cudaCreateChannelDesc()
# 108 "/usr/include/channel_descriptor.h" 3
{
# 109 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(0, 0, 0, 0, cudaChannelFormatKindNone);
# 110 "/usr/include/channel_descriptor.h" 3
}
# 112 "/usr/include/channel_descriptor.h" 3
static inline cudaChannelFormatDesc cudaCreateChannelDescHalf()
# 113 "/usr/include/channel_descriptor.h" 3
{
# 114 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned short)) * 8);
# 116 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat);
# 117 "/usr/include/channel_descriptor.h" 3
}
# 119 "/usr/include/channel_descriptor.h" 3
static inline cudaChannelFormatDesc cudaCreateChannelDescHalf1()
# 120 "/usr/include/channel_descriptor.h" 3
{
# 121 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned short)) * 8);
# 123 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat);
# 124 "/usr/include/channel_descriptor.h" 3
}
# 126 "/usr/include/channel_descriptor.h" 3
static inline cudaChannelFormatDesc cudaCreateChannelDescHalf2()
# 127 "/usr/include/channel_descriptor.h" 3
{
# 128 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned short)) * 8);
# 130 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindFloat);
# 131 "/usr/include/channel_descriptor.h" 3
}
# 133 "/usr/include/channel_descriptor.h" 3
static inline cudaChannelFormatDesc cudaCreateChannelDescHalf4()
# 134 "/usr/include/channel_descriptor.h" 3
{
# 135 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned short)) * 8);
# 137 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindFloat);
# 138 "/usr/include/channel_descriptor.h" 3
}
# 140 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char> ()
# 141 "/usr/include/channel_descriptor.h" 3
{
# 142 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(char)) * 8);
# 147 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 149 "/usr/include/channel_descriptor.h" 3
}
# 151 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< signed char> ()
# 152 "/usr/include/channel_descriptor.h" 3
{
# 153 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(signed char)) * 8);
# 155 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 156 "/usr/include/channel_descriptor.h" 3
}
# 158 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned char> ()
# 159 "/usr/include/channel_descriptor.h" 3
{
# 160 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned char)) * 8);
# 162 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 163 "/usr/include/channel_descriptor.h" 3
}
# 165 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char1> ()
# 166 "/usr/include/channel_descriptor.h" 3
{
# 167 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(signed char)) * 8);
# 169 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 170 "/usr/include/channel_descriptor.h" 3
}
# 172 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar1> ()
# 173 "/usr/include/channel_descriptor.h" 3
{
# 174 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned char)) * 8);
# 176 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 177 "/usr/include/channel_descriptor.h" 3
}
# 179 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char2> ()
# 180 "/usr/include/channel_descriptor.h" 3
{
# 181 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(signed char)) * 8);
# 183 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned);
# 184 "/usr/include/channel_descriptor.h" 3
}
# 186 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar2> ()
# 187 "/usr/include/channel_descriptor.h" 3
{
# 188 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned char)) * 8);
# 190 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned);
# 191 "/usr/include/channel_descriptor.h" 3
}
# 193 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char4> ()
# 194 "/usr/include/channel_descriptor.h" 3
{
# 195 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(signed char)) * 8);
# 197 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned);
# 198 "/usr/include/channel_descriptor.h" 3
}
# 200 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar4> ()
# 201 "/usr/include/channel_descriptor.h" 3
{
# 202 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned char)) * 8);
# 204 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned);
# 205 "/usr/include/channel_descriptor.h" 3
}
# 207 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short> ()
# 208 "/usr/include/channel_descriptor.h" 3
{
# 209 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(short)) * 8);
# 211 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 212 "/usr/include/channel_descriptor.h" 3
}
# 214 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned short> ()
# 215 "/usr/include/channel_descriptor.h" 3
{
# 216 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned short)) * 8);
# 218 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 219 "/usr/include/channel_descriptor.h" 3
}
# 221 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short1> ()
# 222 "/usr/include/channel_descriptor.h" 3
{
# 223 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(short)) * 8);
# 225 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 226 "/usr/include/channel_descriptor.h" 3
}
# 228 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort1> ()
# 229 "/usr/include/channel_descriptor.h" 3
{
# 230 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned short)) * 8);
# 232 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 233 "/usr/include/channel_descriptor.h" 3
}
# 235 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short2> ()
# 236 "/usr/include/channel_descriptor.h" 3
{
# 237 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(short)) * 8);
# 239 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned);
# 240 "/usr/include/channel_descriptor.h" 3
}
# 242 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort2> ()
# 243 "/usr/include/channel_descriptor.h" 3
{
# 244 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned short)) * 8);
# 246 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned);
# 247 "/usr/include/channel_descriptor.h" 3
}
# 249 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short4> ()
# 250 "/usr/include/channel_descriptor.h" 3
{
# 251 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(short)) * 8);
# 253 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned);
# 254 "/usr/include/channel_descriptor.h" 3
}
# 256 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort4> ()
# 257 "/usr/include/channel_descriptor.h" 3
{
# 258 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned short)) * 8);
# 260 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned);
# 261 "/usr/include/channel_descriptor.h" 3
}
# 263 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int> ()
# 264 "/usr/include/channel_descriptor.h" 3
{
# 265 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(int)) * 8);
# 267 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 268 "/usr/include/channel_descriptor.h" 3
}
# 270 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned> ()
# 271 "/usr/include/channel_descriptor.h" 3
{
# 272 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned)) * 8);
# 274 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 275 "/usr/include/channel_descriptor.h" 3
}
# 277 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int1> ()
# 278 "/usr/include/channel_descriptor.h" 3
{
# 279 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(int)) * 8);
# 281 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 282 "/usr/include/channel_descriptor.h" 3
}
# 284 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uint1> ()
# 285 "/usr/include/channel_descriptor.h" 3
{
# 286 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned)) * 8);
# 288 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 289 "/usr/include/channel_descriptor.h" 3
}
# 291 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int2> ()
# 292 "/usr/include/channel_descriptor.h" 3
{
# 293 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(int)) * 8);
# 295 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned);
# 296 "/usr/include/channel_descriptor.h" 3
}
# 298 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uint2> ()
# 299 "/usr/include/channel_descriptor.h" 3
{
# 300 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned)) * 8);
# 302 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned);
# 303 "/usr/include/channel_descriptor.h" 3
}
# 305 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int4> ()
# 306 "/usr/include/channel_descriptor.h" 3
{
# 307 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(int)) * 8);
# 309 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned);
# 310 "/usr/include/channel_descriptor.h" 3
}
# 312 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uint4> ()
# 313 "/usr/include/channel_descriptor.h" 3
{
# 314 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned)) * 8);
# 316 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned);
# 317 "/usr/include/channel_descriptor.h" 3
}
# 379 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float> ()
# 380 "/usr/include/channel_descriptor.h" 3
{
# 381 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(float)) * 8);
# 383 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat);
# 384 "/usr/include/channel_descriptor.h" 3
}
# 386 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float1> ()
# 387 "/usr/include/channel_descriptor.h" 3
{
# 388 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(float)) * 8);
# 390 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat);
# 391 "/usr/include/channel_descriptor.h" 3
}
# 393 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float2> ()
# 394 "/usr/include/channel_descriptor.h" 3
{
# 395 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(float)) * 8);
# 397 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindFloat);
# 398 "/usr/include/channel_descriptor.h" 3
}
# 400 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float4> ()
# 401 "/usr/include/channel_descriptor.h" 3
{
# 402 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(float)) * 8);
# 404 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindFloat);
# 405 "/usr/include/channel_descriptor.h" 3
}
# 79 "/usr/include/driver_functions.h" 3
static inline cudaPitchedPtr make_cudaPitchedPtr(void *d, size_t p, size_t xsz, size_t ysz)
# 80 "/usr/include/driver_functions.h" 3
{
# 81 "/usr/include/driver_functions.h" 3
cudaPitchedPtr s;
# 83 "/usr/include/driver_functions.h" 3
(s.ptr) = d;
# 84 "/usr/include/driver_functions.h" 3
(s.pitch) = p;
# 85 "/usr/include/driver_functions.h" 3
(s.xsize) = xsz;
# 86 "/usr/include/driver_functions.h" 3
(s.ysize) = ysz;
# 88 "/usr/include/driver_functions.h" 3
return s;
# 89 "/usr/include/driver_functions.h" 3
}
# 106 "/usr/include/driver_functions.h" 3
static inline cudaPos make_cudaPos(size_t x, size_t y, size_t z)
# 107 "/usr/include/driver_functions.h" 3
{
# 108 "/usr/include/driver_functions.h" 3
cudaPos p;
# 110 "/usr/include/driver_functions.h" 3
(p.x) = x;
# 111 "/usr/include/driver_functions.h" 3
(p.y) = y;
# 112 "/usr/include/driver_functions.h" 3
(p.z) = z;
# 114 "/usr/include/driver_functions.h" 3
return p;
# 115 "/usr/include/driver_functions.h" 3
}
# 132 "/usr/include/driver_functions.h" 3
static inline cudaExtent make_cudaExtent(size_t w, size_t h, size_t d)
# 133 "/usr/include/driver_functions.h" 3
{
# 134 "/usr/include/driver_functions.h" 3
cudaExtent e;
# 136 "/usr/include/driver_functions.h" 3
(e.width) = w;
# 137 "/usr/include/driver_functions.h" 3
(e.height) = h;
# 138 "/usr/include/driver_functions.h" 3
(e.depth) = d;
# 140 "/usr/include/driver_functions.h" 3
return e;
# 141 "/usr/include/driver_functions.h" 3
}
# 75 "/usr/include/vector_functions.h" 3
static inline char1 make_char1(signed char x);
# 77 "/usr/include/vector_functions.h" 3
static inline uchar1 make_uchar1(unsigned char x);
# 79 "/usr/include/vector_functions.h" 3
static inline char2 make_char2(signed char x, signed char y);
# 81 "/usr/include/vector_functions.h" 3
static inline uchar2 make_uchar2(unsigned char x, unsigned char y);
# 83 "/usr/include/vector_functions.h" 3
static inline char3 make_char3(signed char x, signed char y, signed char z);
# 85 "/usr/include/vector_functions.h" 3
static inline uchar3 make_uchar3(unsigned char x, unsigned char y, unsigned char z);
# 87 "/usr/include/vector_functions.h" 3
static inline char4 make_char4(signed char x, signed char y, signed char z, signed char w);
# 89 "/usr/include/vector_functions.h" 3
static inline uchar4 make_uchar4(unsigned char x, unsigned char y, unsigned char z, unsigned char w);
# 91 "/usr/include/vector_functions.h" 3
static inline short1 make_short1(short x);
# 93 "/usr/include/vector_functions.h" 3
static inline ushort1 make_ushort1(unsigned short x);
# 95 "/usr/include/vector_functions.h" 3
static inline short2 make_short2(short x, short y);
# 97 "/usr/include/vector_functions.h" 3
static inline ushort2 make_ushort2(unsigned short x, unsigned short y);
# 99 "/usr/include/vector_functions.h" 3
static inline short3 make_short3(short x, short y, short z);
# 101 "/usr/include/vector_functions.h" 3
static inline ushort3 make_ushort3(unsigned short x, unsigned short y, unsigned short z);
# 103 "/usr/include/vector_functions.h" 3
static inline short4 make_short4(short x, short y, short z, short w);
# 105 "/usr/include/vector_functions.h" 3
static inline ushort4 make_ushort4(unsigned short x, unsigned short y, unsigned short z, unsigned short w);
# 107 "/usr/include/vector_functions.h" 3
static inline int1 make_int1(int x);
# 109 "/usr/include/vector_functions.h" 3
static inline uint1 make_uint1(unsigned x);
# 111 "/usr/include/vector_functions.h" 3
static inline int2 make_int2(int x, int y);
# 113 "/usr/include/vector_functions.h" 3
static inline uint2 make_uint2(unsigned x, unsigned y);
# 115 "/usr/include/vector_functions.h" 3
static inline int3 make_int3(int x, int y, int z);
# 117 "/usr/include/vector_functions.h" 3
static inline uint3 make_uint3(unsigned x, unsigned y, unsigned z);
# 119 "/usr/include/vector_functions.h" 3
static inline int4 make_int4(int x, int y, int z, int w);
# 121 "/usr/include/vector_functions.h" 3
static inline uint4 make_uint4(unsigned x, unsigned y, unsigned z, unsigned w);
# 123 "/usr/include/vector_functions.h" 3
static inline long1 make_long1(long x);
# 125 "/usr/include/vector_functions.h" 3
static inline ulong1 make_ulong1(unsigned long x);
# 127 "/usr/include/vector_functions.h" 3
static inline long2 make_long2(long x, long y);
# 129 "/usr/include/vector_functions.h" 3
static inline ulong2 make_ulong2(unsigned long x, unsigned long y);
# 131 "/usr/include/vector_functions.h" 3
static inline long3 make_long3(long x, long y, long z);
# 133 "/usr/include/vector_functions.h" 3
static inline ulong3 make_ulong3(unsigned long x, unsigned long y, unsigned long z);
# 135 "/usr/include/vector_functions.h" 3
static inline long4 make_long4(long x, long y, long z, long w);
# 137 "/usr/include/vector_functions.h" 3
static inline ulong4 make_ulong4(unsigned long x, unsigned long y, unsigned long z, unsigned long w);
# 139 "/usr/include/vector_functions.h" 3
static inline float1 make_float1(float x);
# 141 "/usr/include/vector_functions.h" 3
static inline float2 make_float2(float x, float y);
# 143 "/usr/include/vector_functions.h" 3
static inline float3 make_float3(float x, float y, float z);
# 145 "/usr/include/vector_functions.h" 3
static inline float4 make_float4(float x, float y, float z, float w);
# 147 "/usr/include/vector_functions.h" 3
static inline longlong1 make_longlong1(long long x);
# 149 "/usr/include/vector_functions.h" 3
static inline ulonglong1 make_ulonglong1(unsigned long long x);
# 151 "/usr/include/vector_functions.h" 3
static inline longlong2 make_longlong2(long long x, long long y);
# 153 "/usr/include/vector_functions.h" 3
static inline ulonglong2 make_ulonglong2(unsigned long long x, unsigned long long y);
# 155 "/usr/include/vector_functions.h" 3
static inline longlong3 make_longlong3(long long x, long long y, long long z);
# 157 "/usr/include/vector_functions.h" 3
static inline ulonglong3 make_ulonglong3(unsigned long long x, unsigned long long y, unsigned long long z);
# 159 "/usr/include/vector_functions.h" 3
static inline longlong4 make_longlong4(long long x, long long y, long long z, long long w);
# 161 "/usr/include/vector_functions.h" 3
static inline ulonglong4 make_ulonglong4(unsigned long long x, unsigned long long y, unsigned long long z, unsigned long long w);
# 163 "/usr/include/vector_functions.h" 3
static inline double1 make_double1(double x);
# 165 "/usr/include/vector_functions.h" 3
static inline double2 make_double2(double x, double y);
# 167 "/usr/include/vector_functions.h" 3
static inline double3 make_double3(double x, double y, double z);
# 169 "/usr/include/vector_functions.h" 3
static inline double4 make_double4(double x, double y, double z, double w);
# 75 "/usr/include/vector_functions.hpp" 3
static inline char1 make_char1(signed char x)
# 76 "/usr/include/vector_functions.hpp" 3
{
# 77 "/usr/include/vector_functions.hpp" 3
char1 t; (t.x) = x; return t;
# 78 "/usr/include/vector_functions.hpp" 3
}
# 80 "/usr/include/vector_functions.hpp" 3
static inline uchar1 make_uchar1(unsigned char x)
# 81 "/usr/include/vector_functions.hpp" 3
{
# 82 "/usr/include/vector_functions.hpp" 3
uchar1 t; (t.x) = x; return t;
# 83 "/usr/include/vector_functions.hpp" 3
}
# 85 "/usr/include/vector_functions.hpp" 3
static inline char2 make_char2(signed char x, signed char y)
# 86 "/usr/include/vector_functions.hpp" 3
{
# 87 "/usr/include/vector_functions.hpp" 3
char2 t; (t.x) = x; (t.y) = y; return t;
# 88 "/usr/include/vector_functions.hpp" 3
}
# 90 "/usr/include/vector_functions.hpp" 3
static inline uchar2 make_uchar2(unsigned char x, unsigned char y)
# 91 "/usr/include/vector_functions.hpp" 3
{
# 92 "/usr/include/vector_functions.hpp" 3
uchar2 t; (t.x) = x; (t.y) = y; return t;
# 93 "/usr/include/vector_functions.hpp" 3
}
# 95 "/usr/include/vector_functions.hpp" 3
static inline char3 make_char3(signed char x, signed char y, signed char z)
# 96 "/usr/include/vector_functions.hpp" 3
{
# 97 "/usr/include/vector_functions.hpp" 3
char3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 98 "/usr/include/vector_functions.hpp" 3
}
# 100 "/usr/include/vector_functions.hpp" 3
static inline uchar3 make_uchar3(unsigned char x, unsigned char y, unsigned char z)
# 101 "/usr/include/vector_functions.hpp" 3
{
# 102 "/usr/include/vector_functions.hpp" 3
uchar3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 103 "/usr/include/vector_functions.hpp" 3
}
# 105 "/usr/include/vector_functions.hpp" 3
static inline char4 make_char4(signed char x, signed char y, signed char z, signed char w)
# 106 "/usr/include/vector_functions.hpp" 3
{
# 107 "/usr/include/vector_functions.hpp" 3
char4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 108 "/usr/include/vector_functions.hpp" 3
}
# 110 "/usr/include/vector_functions.hpp" 3
static inline uchar4 make_uchar4(unsigned char x, unsigned char y, unsigned char z, unsigned char w)
# 111 "/usr/include/vector_functions.hpp" 3
{
# 112 "/usr/include/vector_functions.hpp" 3
uchar4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 113 "/usr/include/vector_functions.hpp" 3
}
# 115 "/usr/include/vector_functions.hpp" 3
static inline short1 make_short1(short x)
# 116 "/usr/include/vector_functions.hpp" 3
{
# 117 "/usr/include/vector_functions.hpp" 3
short1 t; (t.x) = x; return t;
# 118 "/usr/include/vector_functions.hpp" 3
}
# 120 "/usr/include/vector_functions.hpp" 3
static inline ushort1 make_ushort1(unsigned short x)
# 121 "/usr/include/vector_functions.hpp" 3
{
# 122 "/usr/include/vector_functions.hpp" 3
ushort1 t; (t.x) = x; return t;
# 123 "/usr/include/vector_functions.hpp" 3
}
# 125 "/usr/include/vector_functions.hpp" 3
static inline short2 make_short2(short x, short y)
# 126 "/usr/include/vector_functions.hpp" 3
{
# 127 "/usr/include/vector_functions.hpp" 3
short2 t; (t.x) = x; (t.y) = y; return t;
# 128 "/usr/include/vector_functions.hpp" 3
}
# 130 "/usr/include/vector_functions.hpp" 3
static inline ushort2 make_ushort2(unsigned short x, unsigned short y)
# 131 "/usr/include/vector_functions.hpp" 3
{
# 132 "/usr/include/vector_functions.hpp" 3
ushort2 t; (t.x) = x; (t.y) = y; return t;
# 133 "/usr/include/vector_functions.hpp" 3
}
# 135 "/usr/include/vector_functions.hpp" 3
static inline short3 make_short3(short x, short y, short z)
# 136 "/usr/include/vector_functions.hpp" 3
{
# 137 "/usr/include/vector_functions.hpp" 3
short3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 138 "/usr/include/vector_functions.hpp" 3
}
# 140 "/usr/include/vector_functions.hpp" 3
static inline ushort3 make_ushort3(unsigned short x, unsigned short y, unsigned short z)
# 141 "/usr/include/vector_functions.hpp" 3
{
# 142 "/usr/include/vector_functions.hpp" 3
ushort3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 143 "/usr/include/vector_functions.hpp" 3
}
# 145 "/usr/include/vector_functions.hpp" 3
static inline short4 make_short4(short x, short y, short z, short w)
# 146 "/usr/include/vector_functions.hpp" 3
{
# 147 "/usr/include/vector_functions.hpp" 3
short4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 148 "/usr/include/vector_functions.hpp" 3
}
# 150 "/usr/include/vector_functions.hpp" 3
static inline ushort4 make_ushort4(unsigned short x, unsigned short y, unsigned short z, unsigned short w)
# 151 "/usr/include/vector_functions.hpp" 3
{
# 152 "/usr/include/vector_functions.hpp" 3
ushort4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 153 "/usr/include/vector_functions.hpp" 3
}
# 155 "/usr/include/vector_functions.hpp" 3
static inline int1 make_int1(int x)
# 156 "/usr/include/vector_functions.hpp" 3
{
# 157 "/usr/include/vector_functions.hpp" 3
int1 t; (t.x) = x; return t;
# 158 "/usr/include/vector_functions.hpp" 3
}
# 160 "/usr/include/vector_functions.hpp" 3
static inline uint1 make_uint1(unsigned x)
# 161 "/usr/include/vector_functions.hpp" 3
{
# 162 "/usr/include/vector_functions.hpp" 3
uint1 t; (t.x) = x; return t;
# 163 "/usr/include/vector_functions.hpp" 3
}
# 165 "/usr/include/vector_functions.hpp" 3
static inline int2 make_int2(int x, int y)
# 166 "/usr/include/vector_functions.hpp" 3
{
# 167 "/usr/include/vector_functions.hpp" 3
int2 t; (t.x) = x; (t.y) = y; return t;
# 168 "/usr/include/vector_functions.hpp" 3
}
# 170 "/usr/include/vector_functions.hpp" 3
static inline uint2 make_uint2(unsigned x, unsigned y)
# 171 "/usr/include/vector_functions.hpp" 3
{
# 172 "/usr/include/vector_functions.hpp" 3
uint2 t; (t.x) = x; (t.y) = y; return t;
# 173 "/usr/include/vector_functions.hpp" 3
}
# 175 "/usr/include/vector_functions.hpp" 3
static inline int3 make_int3(int x, int y, int z)
# 176 "/usr/include/vector_functions.hpp" 3
{
# 177 "/usr/include/vector_functions.hpp" 3
int3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 178 "/usr/include/vector_functions.hpp" 3
}
# 180 "/usr/include/vector_functions.hpp" 3
static inline uint3 make_uint3(unsigned x, unsigned y, unsigned z)
# 181 "/usr/include/vector_functions.hpp" 3
{
# 182 "/usr/include/vector_functions.hpp" 3
uint3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 183 "/usr/include/vector_functions.hpp" 3
}
# 185 "/usr/include/vector_functions.hpp" 3
static inline int4 make_int4(int x, int y, int z, int w)
# 186 "/usr/include/vector_functions.hpp" 3
{
# 187 "/usr/include/vector_functions.hpp" 3
int4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 188 "/usr/include/vector_functions.hpp" 3
}
# 190 "/usr/include/vector_functions.hpp" 3
static inline uint4 make_uint4(unsigned x, unsigned y, unsigned z, unsigned w)
# 191 "/usr/include/vector_functions.hpp" 3
{
# 192 "/usr/include/vector_functions.hpp" 3
uint4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 193 "/usr/include/vector_functions.hpp" 3
}
# 195 "/usr/include/vector_functions.hpp" 3
static inline long1 make_long1(long x)
# 196 "/usr/include/vector_functions.hpp" 3
{
# 197 "/usr/include/vector_functions.hpp" 3
long1 t; (t.x) = x; return t;
# 198 "/usr/include/vector_functions.hpp" 3
}
# 200 "/usr/include/vector_functions.hpp" 3
static inline ulong1 make_ulong1(unsigned long x)
# 201 "/usr/include/vector_functions.hpp" 3
{
# 202 "/usr/include/vector_functions.hpp" 3
ulong1 t; (t.x) = x; return t;
# 203 "/usr/include/vector_functions.hpp" 3
}
# 205 "/usr/include/vector_functions.hpp" 3
static inline long2 make_long2(long x, long y)
# 206 "/usr/include/vector_functions.hpp" 3
{
# 207 "/usr/include/vector_functions.hpp" 3
long2 t; (t.x) = x; (t.y) = y; return t;
# 208 "/usr/include/vector_functions.hpp" 3
}
# 210 "/usr/include/vector_functions.hpp" 3
static inline ulong2 make_ulong2(unsigned long x, unsigned long y)
# 211 "/usr/include/vector_functions.hpp" 3
{
# 212 "/usr/include/vector_functions.hpp" 3
ulong2 t; (t.x) = x; (t.y) = y; return t;
# 213 "/usr/include/vector_functions.hpp" 3
}
# 215 "/usr/include/vector_functions.hpp" 3
static inline long3 make_long3(long x, long y, long z)
# 216 "/usr/include/vector_functions.hpp" 3
{
# 217 "/usr/include/vector_functions.hpp" 3
long3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 218 "/usr/include/vector_functions.hpp" 3
}
# 220 "/usr/include/vector_functions.hpp" 3
static inline ulong3 make_ulong3(unsigned long x, unsigned long y, unsigned long z)
# 221 "/usr/include/vector_functions.hpp" 3
{
# 222 "/usr/include/vector_functions.hpp" 3
ulong3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 223 "/usr/include/vector_functions.hpp" 3
}
# 225 "/usr/include/vector_functions.hpp" 3
static inline long4 make_long4(long x, long y, long z, long w)
# 226 "/usr/include/vector_functions.hpp" 3
{
# 227 "/usr/include/vector_functions.hpp" 3
long4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 228 "/usr/include/vector_functions.hpp" 3
}
# 230 "/usr/include/vector_functions.hpp" 3
static inline ulong4 make_ulong4(unsigned long x, unsigned long y, unsigned long z, unsigned long w)
# 231 "/usr/include/vector_functions.hpp" 3
{
# 232 "/usr/include/vector_functions.hpp" 3
ulong4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 233 "/usr/include/vector_functions.hpp" 3
}
# 235 "/usr/include/vector_functions.hpp" 3
static inline float1 make_float1(float x)
# 236 "/usr/include/vector_functions.hpp" 3
{
# 237 "/usr/include/vector_functions.hpp" 3
float1 t; (t.x) = x; return t;
# 238 "/usr/include/vector_functions.hpp" 3
}
# 240 "/usr/include/vector_functions.hpp" 3
static inline float2 make_float2(float x, float y)
# 241 "/usr/include/vector_functions.hpp" 3
{
# 242 "/usr/include/vector_functions.hpp" 3
float2 t; (t.x) = x; (t.y) = y; return t;
# 243 "/usr/include/vector_functions.hpp" 3
}
# 245 "/usr/include/vector_functions.hpp" 3
static inline float3 make_float3(float x, float y, float z)
# 246 "/usr/include/vector_functions.hpp" 3
{
# 247 "/usr/include/vector_functions.hpp" 3
float3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 248 "/usr/include/vector_functions.hpp" 3
}
# 250 "/usr/include/vector_functions.hpp" 3
static inline float4 make_float4(float x, float y, float z, float w)
# 251 "/usr/include/vector_functions.hpp" 3
{
# 252 "/usr/include/vector_functions.hpp" 3
float4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 253 "/usr/include/vector_functions.hpp" 3
}
# 255 "/usr/include/vector_functions.hpp" 3
static inline longlong1 make_longlong1(long long x)
# 256 "/usr/include/vector_functions.hpp" 3
{
# 257 "/usr/include/vector_functions.hpp" 3
longlong1 t; (t.x) = x; return t;
# 258 "/usr/include/vector_functions.hpp" 3
}
# 260 "/usr/include/vector_functions.hpp" 3
static inline ulonglong1 make_ulonglong1(unsigned long long x)
# 261 "/usr/include/vector_functions.hpp" 3
{
# 262 "/usr/include/vector_functions.hpp" 3
ulonglong1 t; (t.x) = x; return t;
# 263 "/usr/include/vector_functions.hpp" 3
}
# 265 "/usr/include/vector_functions.hpp" 3
static inline longlong2 make_longlong2(long long x, long long y)
# 266 "/usr/include/vector_functions.hpp" 3
{
# 267 "/usr/include/vector_functions.hpp" 3
longlong2 t; (t.x) = x; (t.y) = y; return t;
# 268 "/usr/include/vector_functions.hpp" 3
}
# 270 "/usr/include/vector_functions.hpp" 3
static inline ulonglong2 make_ulonglong2(unsigned long long x, unsigned long long y)
# 271 "/usr/include/vector_functions.hpp" 3
{
# 272 "/usr/include/vector_functions.hpp" 3
ulonglong2 t; (t.x) = x; (t.y) = y; return t;
# 273 "/usr/include/vector_functions.hpp" 3
}
# 275 "/usr/include/vector_functions.hpp" 3
static inline longlong3 make_longlong3(long long x, long long y, long long z)
# 276 "/usr/include/vector_functions.hpp" 3
{
# 277 "/usr/include/vector_functions.hpp" 3
longlong3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 278 "/usr/include/vector_functions.hpp" 3
}
# 280 "/usr/include/vector_functions.hpp" 3
static inline ulonglong3 make_ulonglong3(unsigned long long x, unsigned long long y, unsigned long long z)
# 281 "/usr/include/vector_functions.hpp" 3
{
# 282 "/usr/include/vector_functions.hpp" 3
ulonglong3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 283 "/usr/include/vector_functions.hpp" 3
}
# 285 "/usr/include/vector_functions.hpp" 3
static inline longlong4 make_longlong4(long long x, long long y, long long z, long long w)
# 286 "/usr/include/vector_functions.hpp" 3
{
# 287 "/usr/include/vector_functions.hpp" 3
longlong4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 288 "/usr/include/vector_functions.hpp" 3
}
# 290 "/usr/include/vector_functions.hpp" 3
static inline ulonglong4 make_ulonglong4(unsigned long long x, unsigned long long y, unsigned long long z, unsigned long long w)
# 291 "/usr/include/vector_functions.hpp" 3
{
# 292 "/usr/include/vector_functions.hpp" 3
ulonglong4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 293 "/usr/include/vector_functions.hpp" 3
}
# 295 "/usr/include/vector_functions.hpp" 3
static inline double1 make_double1(double x)
# 296 "/usr/include/vector_functions.hpp" 3
{
# 297 "/usr/include/vector_functions.hpp" 3
double1 t; (t.x) = x; return t;
# 298 "/usr/include/vector_functions.hpp" 3
}
# 300 "/usr/include/vector_functions.hpp" 3
static inline double2 make_double2(double x, double y)
# 301 "/usr/include/vector_functions.hpp" 3
{
# 302 "/usr/include/vector_functions.hpp" 3
double2 t; (t.x) = x; (t.y) = y; return t;
# 303 "/usr/include/vector_functions.hpp" 3
}
# 305 "/usr/include/vector_functions.hpp" 3
static inline double3 make_double3(double x, double y, double z)
# 306 "/usr/include/vector_functions.hpp" 3
{
# 307 "/usr/include/vector_functions.hpp" 3
double3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 308 "/usr/include/vector_functions.hpp" 3
}
# 310 "/usr/include/vector_functions.hpp" 3
static inline double4 make_double4(double x, double y, double z, double w)
# 311 "/usr/include/vector_functions.hpp" 3
{
# 312 "/usr/include/vector_functions.hpp" 3
double4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 313 "/usr/include/vector_functions.hpp" 3
}
# 42 "/usr/include/string.h" 3
extern "C" void *memcpy(void *__restrict__ __dest, const void *__restrict__ __src, size_t __n) throw()
# 43 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 46 "/usr/include/string.h" 3
extern "C" void *memmove(void * __dest, const void * __src, size_t __n) throw()
# 47 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 54 "/usr/include/string.h" 3
extern "C" void *memccpy(void *__restrict__ __dest, const void *__restrict__ __src, int __c, size_t __n) throw()
# 56 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 62 "/usr/include/string.h" 3
extern "C" void *memset(void * __s, int __c, size_t __n) throw() __attribute((__nonnull__(1)));
# 65 "/usr/include/string.h" 3
extern "C" int memcmp(const void * __s1, const void * __s2, size_t __n) throw()
# 66 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 72 "/usr/include/string.h" 3
extern void *memchr(void * __s, int __c, size_t __n) throw() __asm__("memchr")
# 73 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 74 "/usr/include/string.h" 3
extern const void *memchr(const void * __s, int __c, size_t __n) throw() __asm__("memchr")
# 75 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 101 "/usr/include/string.h" 3
void *rawmemchr(void * __s, int __c) throw() __asm__("rawmemchr")
# 102 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 103 "/usr/include/string.h" 3
const void *rawmemchr(const void * __s, int __c) throw() __asm__("rawmemchr")
# 104 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 112 "/usr/include/string.h" 3
void *memrchr(void * __s, int __c, size_t __n) throw() __asm__("memrchr")
# 113 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 114 "/usr/include/string.h" 3
const void *memrchr(const void * __s, int __c, size_t __n) throw() __asm__("memrchr")
# 115 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 125 "/usr/include/string.h" 3
extern "C" char *strcpy(char *__restrict__ __dest, const char *__restrict__ __src) throw()
# 126 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 128 "/usr/include/string.h" 3
extern "C" char *strncpy(char *__restrict__ __dest, const char *__restrict__ __src, size_t __n) throw()
# 130 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 133 "/usr/include/string.h" 3
extern "C" char *strcat(char *__restrict__ __dest, const char *__restrict__ __src) throw()
# 134 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 136 "/usr/include/string.h" 3
extern "C" char *strncat(char *__restrict__ __dest, const char *__restrict__ __src, size_t __n) throw()
# 137 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 140 "/usr/include/string.h" 3
extern "C" int strcmp(const char * __s1, const char * __s2) throw()
# 141 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 143 "/usr/include/string.h" 3
extern "C" int strncmp(const char * __s1, const char * __s2, size_t __n) throw()
# 144 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 147 "/usr/include/string.h" 3
extern "C" int strcoll(const char * __s1, const char * __s2) throw()
# 148 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 150 "/usr/include/string.h" 3
extern "C" size_t strxfrm(char *__restrict__ __dest, const char *__restrict__ __src, size_t __n) throw()
# 152 "/usr/include/string.h" 3
 __attribute((__nonnull__(2)));
# 39 "/usr/include/xlocale.h" 3
extern "C" { typedef
# 27 "/usr/include/xlocale.h" 3
struct __locale_struct {
# 30 "/usr/include/xlocale.h" 3
struct __locale_data *__locales[13];
# 33 "/usr/include/xlocale.h" 3
const unsigned short *__ctype_b;
# 34 "/usr/include/xlocale.h" 3
const int *__ctype_tolower;
# 35 "/usr/include/xlocale.h" 3
const int *__ctype_toupper;
# 38 "/usr/include/xlocale.h" 3
const char *__names[13];
# 39 "/usr/include/xlocale.h" 3
} *__locale_t; }
# 42 "/usr/include/xlocale.h" 3
extern "C" { typedef __locale_t locale_t; }
# 162 "/usr/include/string.h" 3
extern "C" int strcoll_l(const char * __s1, const char * __s2, __locale_t __l) throw()
# 163 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2, 3)));
# 165 "/usr/include/string.h" 3
extern "C" size_t strxfrm_l(char * __dest, const char * __src, size_t __n, __locale_t __l) throw()
# 166 "/usr/include/string.h" 3
 __attribute((__nonnull__(2, 4)));
# 171 "/usr/include/string.h" 3
extern "C" char *strdup(const char * __s) throw()
# 172 "/usr/include/string.h" 3
 __attribute((__malloc__)) __attribute((__nonnull__(1)));
# 179 "/usr/include/string.h" 3
extern "C" char *strndup(const char * __string, size_t __n) throw()
# 180 "/usr/include/string.h" 3
 __attribute((__malloc__)) __attribute((__nonnull__(1)));
# 211 "/usr/include/string.h" 3
extern char *strchr(char * __s, int __c) throw() __asm__("strchr")
# 212 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 213 "/usr/include/string.h" 3
extern const char *strchr(const char * __s, int __c) throw() __asm__("strchr")
# 214 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 238 "/usr/include/string.h" 3
extern char *strrchr(char * __s, int __c) throw() __asm__("strrchr")
# 239 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 240 "/usr/include/string.h" 3
extern const char *strrchr(const char * __s, int __c) throw() __asm__("strrchr")
# 241 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 267 "/usr/include/string.h" 3
char *strchrnul(char * __s, int __c) throw() __asm__("strchrnul")
# 268 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 269 "/usr/include/string.h" 3
const char *strchrnul(const char * __s, int __c) throw() __asm__("strchrnul")
# 270 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 280 "/usr/include/string.h" 3
extern "C" size_t strcspn(const char * __s, const char * __reject) throw()
# 281 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 284 "/usr/include/string.h" 3
extern "C" size_t strspn(const char * __s, const char * __accept) throw()
# 285 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 290 "/usr/include/string.h" 3
extern char *strpbrk(char * __s, const char * __accept) throw() __asm__("strpbrk")
# 291 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 292 "/usr/include/string.h" 3
extern const char *strpbrk(const char * __s, const char * __accept) throw() __asm__("strpbrk")
# 293 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 317 "/usr/include/string.h" 3
extern char *strstr(char * __haystack, const char * __needle) throw() __asm__("strstr")
# 318 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 319 "/usr/include/string.h" 3
extern const char *strstr(const char * __haystack, const char * __needle) throw() __asm__("strstr")
# 320 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 343 "/usr/include/string.h" 3
extern "C" char *strtok(char *__restrict__ __s, const char *__restrict__ __delim) throw()
# 344 "/usr/include/string.h" 3
 __attribute((__nonnull__(2)));
# 349 "/usr/include/string.h" 3
extern "C" char *__strtok_r(char *__restrict__ __s, const char *__restrict__ __delim, char **__restrict__ __save_ptr) throw()
# 352 "/usr/include/string.h" 3
 __attribute((__nonnull__(2, 3)));
# 354 "/usr/include/string.h" 3
extern "C" char *strtok_r(char *__restrict__ __s, const char *__restrict__ __delim, char **__restrict__ __save_ptr) throw()
# 356 "/usr/include/string.h" 3
 __attribute((__nonnull__(2, 3)));
# 362 "/usr/include/string.h" 3
char *strcasestr(char * __haystack, const char * __needle) throw() __asm__("strcasestr")
# 363 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 364 "/usr/include/string.h" 3
const char *strcasestr(const char * __haystack, const char * __needle) throw() __asm__("strcasestr")
# 366 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 377 "/usr/include/string.h" 3
extern "C" void *memmem(const void * __haystack, size_t __haystacklen, const void * __needle, size_t __needlelen) throw()
# 379 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 3)));
# 383 "/usr/include/string.h" 3
extern "C" void *__mempcpy(void *__restrict__ __dest, const void *__restrict__ __src, size_t __n) throw()
# 385 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 386 "/usr/include/string.h" 3
extern "C" void *mempcpy(void *__restrict__ __dest, const void *__restrict__ __src, size_t __n) throw()
# 388 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 394 "/usr/include/string.h" 3
extern "C" size_t strlen(const char * __s) throw()
# 395 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 401 "/usr/include/string.h" 3
extern "C" size_t strnlen(const char * __string, size_t __maxlen) throw()
# 402 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 408 "/usr/include/string.h" 3
extern "C" char *strerror(int __errnum) throw();
# 433 "/usr/include/string.h" 3
extern "C" char *strerror_r(int __errnum, char * __buf, size_t __buflen) throw()
# 434 "/usr/include/string.h" 3
 __attribute((__nonnull__(2)));
# 440 "/usr/include/string.h" 3
extern "C" char *strerror_l(int __errnum, __locale_t __l) throw();
# 446 "/usr/include/string.h" 3
extern "C" void __bzero(void * __s, size_t __n) throw() __attribute((__nonnull__(1)));
# 450 "/usr/include/string.h" 3
extern "C" void bcopy(const void * __src, void * __dest, size_t __n) throw()
# 451 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 454 "/usr/include/string.h" 3
extern "C" void bzero(void * __s, size_t __n) throw() __attribute((__nonnull__(1)));
# 457 "/usr/include/string.h" 3
extern "C" int bcmp(const void * __s1, const void * __s2, size_t __n) throw()
# 458 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 464 "/usr/include/string.h" 3
extern char *index(char * __s, int __c) throw() __asm__("index")
# 465 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 466 "/usr/include/string.h" 3
extern const char *index(const char * __s, int __c) throw() __asm__("index")
# 467 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 492 "/usr/include/string.h" 3
extern char *rindex(char * __s, int __c) throw() __asm__("rindex")
# 493 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 494 "/usr/include/string.h" 3
extern const char *rindex(const char * __s, int __c) throw() __asm__("rindex")
# 495 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 518 "/usr/include/string.h" 3
extern "C" int ffs(int __i) throw() __attribute((const));
# 523 "/usr/include/string.h" 3
extern "C" int ffsl(long __l) throw() __attribute((const));
# 524 "/usr/include/string.h" 3
__extension__ extern "C" int ffsll(long long __ll) throw()
# 525 "/usr/include/string.h" 3
 __attribute((const));
# 529 "/usr/include/string.h" 3
extern "C" int strcasecmp(const char * __s1, const char * __s2) throw()
# 530 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 533 "/usr/include/string.h" 3
extern "C" int strncasecmp(const char * __s1, const char * __s2, size_t __n) throw()
# 534 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 540 "/usr/include/string.h" 3
extern "C" int strcasecmp_l(const char * __s1, const char * __s2, __locale_t __loc) throw()
# 542 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2, 3)));
# 544 "/usr/include/string.h" 3
extern "C" int strncasecmp_l(const char * __s1, const char * __s2, size_t __n, __locale_t __loc) throw()
# 546 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2, 4)));
# 552 "/usr/include/string.h" 3
extern "C" char *strsep(char **__restrict__ __stringp, const char *__restrict__ __delim) throw()
# 554 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 559 "/usr/include/string.h" 3
extern "C" char *strsignal(int __sig) throw();
# 562 "/usr/include/string.h" 3
extern "C" char *__stpcpy(char *__restrict__ __dest, const char *__restrict__ __src) throw()
# 563 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 564 "/usr/include/string.h" 3
extern "C" char *stpcpy(char *__restrict__ __dest, const char *__restrict__ __src) throw()
# 565 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 569 "/usr/include/string.h" 3
extern "C" char *__stpncpy(char *__restrict__ __dest, const char *__restrict__ __src, size_t __n) throw()
# 571 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 572 "/usr/include/string.h" 3
extern "C" char *stpncpy(char *__restrict__ __dest, const char *__restrict__ __src, size_t __n) throw()
# 574 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 579 "/usr/include/string.h" 3
extern "C" int strverscmp(const char * __s1, const char * __s2) throw()
# 580 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 583 "/usr/include/string.h" 3
extern "C" char *strfry(char * __string) throw() __attribute((__nonnull__(1)));
# 586 "/usr/include/string.h" 3
extern "C" void *memfrob(void * __s, size_t __n) throw() __attribute((__nonnull__(1)));
# 594 "/usr/include/string.h" 3
char *basename(char * __filename) throw() __asm__("basename")
# 595 "/usr/include/string.h" 3
 __attribute((__nonnull__(1)));
# 596 "/usr/include/string.h" 3
const char *basename(const char * __filename) throw() __asm__("basename")
# 597 "/usr/include/string.h" 3
 __attribute((__nonnull__(1)));
# 30 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
extern "C" { typedef unsigned char __u_char; }
# 31 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
extern "C" { typedef unsigned short __u_short; }
# 32 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
extern "C" { typedef unsigned __u_int; }
# 33 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
extern "C" { typedef unsigned long __u_long; }
# 36 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
extern "C" { typedef signed char __int8_t; }
# 37 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
extern "C" { typedef unsigned char __uint8_t; }
# 38 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
extern "C" { typedef signed short __int16_t; }
# 39 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
extern "C" { typedef unsigned short __uint16_t; }
# 40 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
extern "C" { typedef signed int __int32_t; }
# 41 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
extern "C" { typedef unsigned __uint32_t; }
# 43 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
extern "C" { typedef signed long __int64_t; }
# 44 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
extern "C" { typedef unsigned long __uint64_t; }
# 52 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
extern "C" { typedef long __quad_t; }
# 53 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
extern "C" { typedef unsigned long __u_quad_t; }
# 124 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
extern "C" { typedef unsigned long __dev_t; }
# 125 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
extern "C" { typedef unsigned __uid_t; }
# 126 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
extern "C" { typedef unsigned __gid_t; }
# 127 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
extern "C" { typedef unsigned long __ino_t; }
# 128 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
extern "C" { typedef unsigned long __ino64_t; }
# 129 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
extern "C" { typedef unsigned __mode_t; }
# 130 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
extern "C" { typedef unsigned long __nlink_t; }
# 131 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
extern "C" { typedef long __off_t; }
# 132 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
extern "C" { typedef long __off64_t; }
# 133 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
extern "C" { typedef int __pid_t; }
# 134 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
extern "C" { typedef struct { int __val[2]; } __fsid_t; }
# 135 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
extern "C" { typedef long __clock_t; }
# 136 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
extern "C" { typedef unsigned long __rlim_t; }
# 137 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
extern "C" { typedef unsigned long __rlim64_t; }
# 138 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
extern "C" { typedef unsigned __id_t; }
# 139 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
extern "C" { typedef long __time_t; }
# 140 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
extern "C" { typedef unsigned __useconds_t; }
# 141 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
extern "C" { typedef long __suseconds_t; }
# 143 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
extern "C" { typedef int __daddr_t; }
# 144 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
extern "C" { typedef int __key_t; }
# 147 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
extern "C" { typedef int __clockid_t; }
# 150 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
extern "C" { typedef void *__timer_t; }
# 153 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
extern "C" { typedef long __blksize_t; }
# 158 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
extern "C" { typedef long __blkcnt_t; }
# 159 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
extern "C" { typedef long __blkcnt64_t; }
# 162 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
extern "C" { typedef unsigned long __fsblkcnt_t; }
# 163 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
extern "C" { typedef unsigned long __fsblkcnt64_t; }
# 166 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
extern "C" { typedef unsigned long __fsfilcnt_t; }
# 167 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
extern "C" { typedef unsigned long __fsfilcnt64_t; }
# 170 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
extern "C" { typedef long __fsword_t; }
# 172 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
extern "C" { typedef long __ssize_t; }
# 175 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
extern "C" { typedef long __syscall_slong_t; }
# 177 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
extern "C" { typedef unsigned long __syscall_ulong_t; }
# 181 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
extern "C" { typedef __off64_t __loff_t; }
# 182 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
extern "C" { typedef __quad_t *__qaddr_t; }
# 183 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
extern "C" { typedef char *__caddr_t; }
# 186 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
extern "C" { typedef long __intptr_t; }
# 189 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
extern "C" { typedef unsigned __socklen_t; }
# 30 "/usr/include/x86_64-linux-gnu/bits/time.h" 3
extern "C" { struct timeval {
# 32 "/usr/include/x86_64-linux-gnu/bits/time.h" 3
__time_t tv_sec;
# 33 "/usr/include/x86_64-linux-gnu/bits/time.h" 3
__suseconds_t tv_usec;
# 34 "/usr/include/x86_64-linux-gnu/bits/time.h" 3
}; }
# 25 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
extern "C" { struct timex {
# 27 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
unsigned modes;
# 28 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t offset;
# 29 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t freq;
# 30 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t maxerror;
# 31 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t esterror;
# 32 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
int status;
# 33 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t constant;
# 34 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t precision;
# 35 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t tolerance;
# 36 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
timeval time;
# 37 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t tick;
# 38 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t ppsfreq;
# 39 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t jitter;
# 40 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
int shift;
# 41 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t stabil;
# 42 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t jitcnt;
# 43 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t calcnt;
# 44 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t errcnt;
# 45 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t stbcnt;
# 47 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
int tai;
# 50 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
int:32; int:32; int:32; int:32;
# 51 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
int:32; int:32; int:32; int:32;
# 52 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
int:32; int:32; int:32;
# 53 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
}; }
# 93 "/usr/include/x86_64-linux-gnu/bits/time.h" 3
extern "C" int clock_adjtime(__clockid_t __clock_id, timex * __utx) throw();
# 59 "/usr/include/time.h" 3
extern "C" { typedef __clock_t clock_t; }
# 75 "/usr/include/time.h" 3
extern "C" { typedef __time_t time_t; }
# 91 "/usr/include/time.h" 3
extern "C" { typedef __clockid_t clockid_t; }
# 103 "/usr/include/time.h" 3
extern "C" { typedef __timer_t timer_t; }
# 120 "/usr/include/time.h" 3
extern "C" { struct timespec {
# 122 "/usr/include/time.h" 3
__time_t tv_sec;
# 123 "/usr/include/time.h" 3
__syscall_slong_t tv_nsec;
# 124 "/usr/include/time.h" 3
}; }
# 133 "/usr/include/time.h" 3
extern "C" { struct tm {
# 135 "/usr/include/time.h" 3
int tm_sec;
# 136 "/usr/include/time.h" 3
int tm_min;
# 137 "/usr/include/time.h" 3
int tm_hour;
# 138 "/usr/include/time.h" 3
int tm_mday;
# 139 "/usr/include/time.h" 3
int tm_mon;
# 140 "/usr/include/time.h" 3
int tm_year;
# 141 "/usr/include/time.h" 3
int tm_wday;
# 142 "/usr/include/time.h" 3
int tm_yday;
# 143 "/usr/include/time.h" 3
int tm_isdst;
# 146 "/usr/include/time.h" 3
long tm_gmtoff;
# 147 "/usr/include/time.h" 3
const char *tm_zone;
# 152 "/usr/include/time.h" 3
}; }
# 161 "/usr/include/time.h" 3
extern "C" { struct itimerspec {
# 163 "/usr/include/time.h" 3
timespec it_interval;
# 164 "/usr/include/time.h" 3
timespec it_value;
# 165 "/usr/include/time.h" 3
}; }
# 168 "/usr/include/time.h" 3
struct sigevent;
# 174 "/usr/include/time.h" 3
extern "C" { typedef __pid_t pid_t; }
# 189 "/usr/include/time.h" 3
extern "C" clock_t clock() throw();
# 192 "/usr/include/time.h" 3
extern "C" time_t time(time_t * __timer) throw();
# 195 "/usr/include/time.h" 3
extern "C" double difftime(time_t __time1, time_t __time0) throw()
# 196 "/usr/include/time.h" 3
 __attribute((const));
# 199 "/usr/include/time.h" 3
extern "C" time_t mktime(tm * __tp) throw();
# 205 "/usr/include/time.h" 3
extern "C" size_t strftime(char *__restrict__ __s, size_t __maxsize, const char *__restrict__ __format, const tm *__restrict__ __tp) throw();
# 213 "/usr/include/time.h" 3
extern "C" char *strptime(const char *__restrict__ __s, const char *__restrict__ __fmt, tm * __tp) throw();
# 223 "/usr/include/time.h" 3
extern "C" size_t strftime_l(char *__restrict__ __s, size_t __maxsize, const char *__restrict__ __format, const tm *__restrict__ __tp, __locale_t __loc) throw();
# 230 "/usr/include/time.h" 3
extern "C" char *strptime_l(const char *__restrict__ __s, const char *__restrict__ __fmt, tm * __tp, __locale_t __loc) throw();
# 239 "/usr/include/time.h" 3
extern "C" tm *gmtime(const time_t * __timer) throw();
# 243 "/usr/include/time.h" 3
extern "C" tm *localtime(const time_t * __timer) throw();
# 249 "/usr/include/time.h" 3
extern "C" tm *gmtime_r(const time_t *__restrict__ __timer, tm *__restrict__ __tp) throw();
# 254 "/usr/include/time.h" 3
extern "C" tm *localtime_r(const time_t *__restrict__ __timer, tm *__restrict__ __tp) throw();
# 261 "/usr/include/time.h" 3
extern "C" char *asctime(const tm * __tp) throw();
# 264 "/usr/include/time.h" 3
extern "C" char *ctime(const time_t * __timer) throw();
# 272 "/usr/include/time.h" 3
extern "C" char *asctime_r(const tm *__restrict__ __tp, char *__restrict__ __buf) throw();
# 276 "/usr/include/time.h" 3
extern "C" char *ctime_r(const time_t *__restrict__ __timer, char *__restrict__ __buf) throw();
# 282 "/usr/include/time.h" 3
extern "C" { extern char *__tzname[2]; }
# 283 "/usr/include/time.h" 3
extern "C" { extern int __daylight; }
# 284 "/usr/include/time.h" 3
extern "C" { extern long __timezone; }
# 289 "/usr/include/time.h" 3
extern "C" { extern char *tzname[2]; }
# 293 "/usr/include/time.h" 3
extern "C" void tzset() throw();
# 297 "/usr/include/time.h" 3
extern "C" { extern int daylight; }
# 298 "/usr/include/time.h" 3
extern "C" { extern long timezone; }
# 304 "/usr/include/time.h" 3
extern "C" int stime(const time_t * __when) throw();
# 319 "/usr/include/time.h" 3
extern "C" time_t timegm(tm * __tp) throw();
# 322 "/usr/include/time.h" 3
extern "C" time_t timelocal(tm * __tp) throw();
# 325 "/usr/include/time.h" 3
extern "C" int dysize(int __year) throw() __attribute((const));
# 334 "/usr/include/time.h" 3
extern "C" int nanosleep(const timespec * __requested_time, timespec * __remaining);
# 339 "/usr/include/time.h" 3
extern "C" int clock_getres(clockid_t __clock_id, timespec * __res) throw();
# 342 "/usr/include/time.h" 3
extern "C" int clock_gettime(clockid_t __clock_id, timespec * __tp) throw();
# 345 "/usr/include/time.h" 3
extern "C" int clock_settime(clockid_t __clock_id, const timespec * __tp) throw();
# 353 "/usr/include/time.h" 3
extern "C" int clock_nanosleep(clockid_t __clock_id, int __flags, const timespec * __req, timespec * __rem);
# 358 "/usr/include/time.h" 3
extern "C" int clock_getcpuclockid(pid_t __pid, clockid_t * __clock_id) throw();
# 363 "/usr/include/time.h" 3
extern "C" int timer_create(clockid_t __clock_id, sigevent *__restrict__ __evp, timer_t *__restrict__ __timerid) throw();
# 368 "/usr/include/time.h" 3
extern "C" int timer_delete(timer_t __timerid) throw();
# 371 "/usr/include/time.h" 3
extern "C" int timer_settime(timer_t __timerid, int __flags, const itimerspec *__restrict__ __value, itimerspec *__restrict__ __ovalue) throw();
# 376 "/usr/include/time.h" 3
extern "C" int timer_gettime(timer_t __timerid, itimerspec * __value) throw();
# 380 "/usr/include/time.h" 3
extern "C" int timer_getoverrun(timer_t __timerid) throw();
# 386 "/usr/include/time.h" 3
extern "C" int timespec_get(timespec * __ts, int __base) throw()
# 387 "/usr/include/time.h" 3
 __attribute((__nonnull__(1)));
# 403 "/usr/include/time.h" 3
extern "C" { extern int getdate_err; }
# 412 "/usr/include/time.h" 3
extern "C" tm *getdate(const char * __string);
# 426 "/usr/include/time.h" 3
extern "C" int getdate_r(const char *__restrict__ __string, tm *__restrict__ __resbufp);
# 71 "/usr/include/common_functions.h" 3
extern "C" clock_t clock() throw();
# 72 "/usr/include/common_functions.h" 3
extern "C" void *memset(void *, int, size_t) throw();
# 73 "/usr/include/common_functions.h" 3
extern "C" void *memcpy(void *, const void *, size_t) throw();
# 154 "/usr/include/math_functions.h" 3
extern "C" int abs(int) throw();
# 155 "/usr/include/math_functions.h" 3
extern "C" long labs(long) throw();
# 156 "/usr/include/math_functions.h" 3
extern "C" long long llabs(long long) throw();
# 206 "/usr/include/math_functions.h" 3
extern "C" double fabs(double x) throw();
# 247 "/usr/include/math_functions.h" 3
extern "C" float fabsf(float x) throw();
# 251 "/usr/include/math_functions.h" 3
extern "C" { extern inline int min(int, int); }
# 253 "/usr/include/math_functions.h" 3
extern "C" { extern inline unsigned umin(unsigned, unsigned); }
# 254 "/usr/include/math_functions.h" 3
extern "C" { extern inline long long llmin(long long, long long); }
# 255 "/usr/include/math_functions.h" 3
extern "C" { extern inline unsigned long long ullmin(unsigned long long, unsigned long long); }
# 276 "/usr/include/math_functions.h" 3
extern "C" float fminf(float x, float y) throw();
# 296 "/usr/include/math_functions.h" 3
extern "C" double fmin(double x, double y) throw();
# 303 "/usr/include/math_functions.h" 3
extern "C" { extern inline int max(int, int); }
# 305 "/usr/include/math_functions.h" 3
extern "C" { extern inline unsigned umax(unsigned, unsigned); }
# 306 "/usr/include/math_functions.h" 3
extern "C" { extern inline long long llmax(long long, long long); }
# 307 "/usr/include/math_functions.h" 3
extern "C" { extern inline unsigned long long ullmax(unsigned long long, unsigned long long); }
# 328 "/usr/include/math_functions.h" 3
extern "C" float fmaxf(float x, float y) throw();
# 348 "/usr/include/math_functions.h" 3
extern "C" double fmax(double, double) throw();
# 392 "/usr/include/math_functions.h" 3
extern "C" double sin(double x) throw();
# 425 "/usr/include/math_functions.h" 3
extern "C" double cos(double x) throw();
# 444 "/usr/include/math_functions.h" 3
extern "C" void sincos(double x, double * sptr, double * cptr) throw();
# 460 "/usr/include/math_functions.h" 3
extern "C" void sincosf(float x, float * sptr, float * cptr) throw();
# 505 "/usr/include/math_functions.h" 3
extern "C" double tan(double x) throw();
# 574 "/usr/include/math_functions.h" 3
extern "C" double sqrt(double x) throw();
# 646 "/usr/include/math_functions.h" 3
extern "C" double rsqrt(double x);
# 716 "/usr/include/math_functions.h" 3
extern "C" float rsqrtf(float x);
# 772 "/usr/include/math_functions.h" 3
extern "C" double log2(double x) throw();
# 797 "/usr/include/math_functions.h" 3
extern "C" double exp2(double x) throw();
# 822 "/usr/include/math_functions.h" 3
extern "C" float exp2f(float x) throw();
# 849 "/usr/include/math_functions.h" 3
extern "C" double exp10(double x) throw();
# 872 "/usr/include/math_functions.h" 3
extern "C" float exp10f(float x) throw();
# 918 "/usr/include/math_functions.h" 3
extern "C" double expm1(double x) throw();
# 963 "/usr/include/math_functions.h" 3
extern "C" float expm1f(float x) throw();
# 1018 "/usr/include/math_functions.h" 3
extern "C" float log2f(float x) throw();
# 1072 "/usr/include/math_functions.h" 3
extern "C" double log10(double x) throw();
# 1143 "/usr/include/math_functions.h" 3
extern "C" double log(double x) throw();
# 1237 "/usr/include/math_functions.h" 3
extern "C" double log1p(double x) throw();
# 1334 "/usr/include/math_functions.h" 3
extern "C" float log1pf(float x) throw();
# 1409 "/usr/include/math_functions.h" 3
extern "C" double floor(double x) throw();
# 1448 "/usr/include/math_functions.h" 3
extern "C" double exp(double x) throw();
# 1479 "/usr/include/math_functions.h" 3
extern "C" double cosh(double x) throw();
# 1509 "/usr/include/math_functions.h" 3
extern "C" double sinh(double x) throw();
# 1539 "/usr/include/math_functions.h" 3
extern "C" double tanh(double x) throw();
# 1574 "/usr/include/math_functions.h" 3
extern "C" double acosh(double x) throw();
# 1612 "/usr/include/math_functions.h" 3
extern "C" float acoshf(float x) throw();
# 1628 "/usr/include/math_functions.h" 3
extern "C" double asinh(double x) throw();
# 1644 "/usr/include/math_functions.h" 3
extern "C" float asinhf(float x) throw();
# 1698 "/usr/include/math_functions.h" 3
extern "C" double atanh(double x) throw();
# 1752 "/usr/include/math_functions.h" 3
extern "C" float atanhf(float x) throw();
# 1811 "/usr/include/math_functions.h" 3
extern "C" double ldexp(double x, int exp) throw();
# 1867 "/usr/include/math_functions.h" 3
extern "C" float ldexpf(float x, int exp) throw();
# 1919 "/usr/include/math_functions.h" 3
extern "C" double logb(double x) throw();
# 1974 "/usr/include/math_functions.h" 3
extern "C" float logbf(float x) throw();
# 2004 "/usr/include/math_functions.h" 3
extern "C" int ilogb(double x) throw();
# 2034 "/usr/include/math_functions.h" 3
extern "C" int ilogbf(float x) throw();
# 2110 "/usr/include/math_functions.h" 3
extern "C" double scalbn(double x, int n) throw();
# 2186 "/usr/include/math_functions.h" 3
extern "C" float scalbnf(float x, int n) throw();
# 2262 "/usr/include/math_functions.h" 3
extern "C" double scalbln(double x, long n) throw();
# 2338 "/usr/include/math_functions.h" 3
extern "C" float scalblnf(float x, long n) throw();
# 2416 "/usr/include/math_functions.h" 3
extern "C" double frexp(double x, int * nptr) throw();
# 2491 "/usr/include/math_functions.h" 3
extern "C" float frexpf(float x, int * nptr) throw();
# 2505 "/usr/include/math_functions.h" 3
extern "C" double round(double x) throw();
# 2522 "/usr/include/math_functions.h" 3
extern "C" float roundf(float x) throw();
# 2540 "/usr/include/math_functions.h" 3
extern "C" long lround(double x) throw();
# 2558 "/usr/include/math_functions.h" 3
extern "C" long lroundf(float x) throw();
# 2576 "/usr/include/math_functions.h" 3
extern "C" long long llround(double x) throw();
# 2594 "/usr/include/math_functions.h" 3
extern "C" long long llroundf(float x) throw();
# 2609 "/usr/include/math_functions.h" 3
extern "C" double rint(double x) throw();
# 2624 "/usr/include/math_functions.h" 3
extern "C" float rintf(float x) throw();
# 2640 "/usr/include/math_functions.h" 3
extern "C" long lrint(double x) throw();
# 2656 "/usr/include/math_functions.h" 3
extern "C" long lrintf(float x) throw();
# 2672 "/usr/include/math_functions.h" 3
extern "C" long long llrint(double x) throw();
# 2688 "/usr/include/math_functions.h" 3
extern "C" long long llrintf(float x) throw();
# 2741 "/usr/include/math_functions.h" 3
extern "C" double nearbyint(double x) throw();
# 2794 "/usr/include/math_functions.h" 3
extern "C" float nearbyintf(float x) throw();
# 2856 "/usr/include/math_functions.h" 3
extern "C" double ceil(double x) throw();
# 2868 "/usr/include/math_functions.h" 3
extern "C" double trunc(double x) throw();
# 2883 "/usr/include/math_functions.h" 3
extern "C" float truncf(float x) throw();
# 2909 "/usr/include/math_functions.h" 3
extern "C" double fdim(double x, double y) throw();
# 2935 "/usr/include/math_functions.h" 3
extern "C" float fdimf(float x, float y) throw();
# 2971 "/usr/include/math_functions.h" 3
extern "C" double atan2(double y, double x) throw();
# 3002 "/usr/include/math_functions.h" 3
extern "C" double atan(double x) throw();
# 3025 "/usr/include/math_functions.h" 3
extern "C" double acos(double x) throw();
# 3057 "/usr/include/math_functions.h" 3
extern "C" double asin(double x) throw();
# 3099 "/usr/include/math_functions.h" 3
extern "C" double hypot(double x, double y) throw();
# 3151 "/usr/include/math_functions.h" 3
extern "C" double rhypot(double x, double y) throw();
# 3197 "/usr/include/math_functions.h" 3
extern "C" float hypotf(float x, float y) throw();
# 3249 "/usr/include/math_functions.h" 3
extern "C" float rhypotf(float x, float y) throw();
# 3296 "/usr/include/math_functions.h" 3
extern "C" double norm3d(double a, double b, double c) throw();
# 3347 "/usr/include/math_functions.h" 3
extern "C" double rnorm3d(double a, double b, double c) throw();
# 3396 "/usr/include/math_functions.h" 3
extern "C" double norm4d(double a, double b, double c, double d) throw();
# 3452 "/usr/include/math_functions.h" 3
extern "C" double rnorm4d(double a, double b, double c, double d) throw();
# 3497 "/usr/include/math_functions.h" 3
extern "C" double norm(int dim, const double * t) throw();
# 3548 "/usr/include/math_functions.h" 3
extern "C" double rnorm(int dim, const double * t) throw();
# 3600 "/usr/include/math_functions.h" 3
extern "C" float rnormf(int dim, const float * a) throw();
# 3644 "/usr/include/math_functions.h" 3
extern "C" float normf(int dim, const float * a) throw();
# 3689 "/usr/include/math_functions.h" 3
extern "C" float norm3df(float a, float b, float c) throw();
# 3740 "/usr/include/math_functions.h" 3
extern "C" float rnorm3df(float a, float b, float c) throw();
# 3789 "/usr/include/math_functions.h" 3
extern "C" float norm4df(float a, float b, float c, float d) throw();
# 3845 "/usr/include/math_functions.h" 3
extern "C" float rnorm4df(float a, float b, float c, float d) throw();
# 3929 "/usr/include/math_functions.h" 3
extern "C" double cbrt(double x) throw();
# 4015 "/usr/include/math_functions.h" 3
extern "C" float cbrtf(float x) throw();
# 4070 "/usr/include/math_functions.h" 3
extern "C" double rcbrt(double x);
# 4120 "/usr/include/math_functions.h" 3
extern "C" float rcbrtf(float x);
# 4180 "/usr/include/math_functions.h" 3
extern "C" double sinpi(double x);
# 4240 "/usr/include/math_functions.h" 3
extern "C" float sinpif(float x);
# 4292 "/usr/include/math_functions.h" 3
extern "C" double cospi(double x);
# 4344 "/usr/include/math_functions.h" 3
extern "C" float cospif(float x);
# 4374 "/usr/include/math_functions.h" 3
extern "C" void sincospi(double x, double * sptr, double * cptr);
# 4404 "/usr/include/math_functions.h" 3
extern "C" void sincospif(float x, float * sptr, float * cptr);
# 4716 "/usr/include/math_functions.h" 3
extern "C" double pow(double x, double y) throw();
# 4772 "/usr/include/math_functions.h" 3
extern "C" double modf(double x, double * iptr) throw();
# 4831 "/usr/include/math_functions.h" 3
extern "C" double fmod(double x, double y) throw();
# 4917 "/usr/include/math_functions.h" 3
extern "C" double remainder(double x, double y) throw();
# 5007 "/usr/include/math_functions.h" 3
extern "C" float remainderf(float x, float y) throw();
# 5061 "/usr/include/math_functions.h" 3
extern "C" double remquo(double x, double y, int * quo) throw();
# 5115 "/usr/include/math_functions.h" 3
extern "C" float remquof(float x, float y, int * quo) throw();
# 5156 "/usr/include/math_functions.h" 3
extern "C" double j0(double x) throw();
# 5198 "/usr/include/math_functions.h" 3
extern "C" float j0f(float x) throw();
# 5259 "/usr/include/math_functions.h" 3
extern "C" double j1(double x) throw();
# 5320 "/usr/include/math_functions.h" 3
extern "C" float j1f(float x) throw();
# 5363 "/usr/include/math_functions.h" 3
extern "C" double jn(int n, double x) throw();
# 5406 "/usr/include/math_functions.h" 3
extern "C" float jnf(int n, float x) throw();
# 5458 "/usr/include/math_functions.h" 3
extern "C" double y0(double x) throw();
# 5510 "/usr/include/math_functions.h" 3
extern "C" float y0f(float x) throw();
# 5562 "/usr/include/math_functions.h" 3
extern "C" double y1(double x) throw();
# 5614 "/usr/include/math_functions.h" 3
extern "C" float y1f(float x) throw();
# 5667 "/usr/include/math_functions.h" 3
extern "C" double yn(int n, double x) throw();
# 5720 "/usr/include/math_functions.h" 3
extern "C" float ynf(int n, float x) throw();
# 5747 "/usr/include/math_functions.h" 3
extern "C" double cyl_bessel_i0(double x) throw();
# 5773 "/usr/include/math_functions.h" 3
extern "C" float cyl_bessel_i0f(float x) throw();
# 5800 "/usr/include/math_functions.h" 3
extern "C" double cyl_bessel_i1(double x) throw();
# 5826 "/usr/include/math_functions.h" 3
extern "C" float cyl_bessel_i1f(float x) throw();
# 5909 "/usr/include/math_functions.h" 3
extern "C" double erf(double x) throw();
# 5991 "/usr/include/math_functions.h" 3
extern "C" float erff(float x) throw();
# 6055 "/usr/include/math_functions.h" 3
extern "C" double erfinv(double y);
# 6112 "/usr/include/math_functions.h" 3
extern "C" float erfinvf(float y);
# 6151 "/usr/include/math_functions.h" 3
extern "C" double erfc(double x) throw();
# 6189 "/usr/include/math_functions.h" 3
extern "C" float erfcf(float x) throw();
# 6317 "/usr/include/math_functions.h" 3
extern "C" double lgamma(double x) throw();
# 6380 "/usr/include/math_functions.h" 3
extern "C" double erfcinv(double y);
# 6436 "/usr/include/math_functions.h" 3
extern "C" float erfcinvf(float y);
# 6494 "/usr/include/math_functions.h" 3
extern "C" double normcdfinv(double y);
# 6552 "/usr/include/math_functions.h" 3
extern "C" float normcdfinvf(float y);
# 6595 "/usr/include/math_functions.h" 3
extern "C" double normcdf(double y);
# 6638 "/usr/include/math_functions.h" 3
extern "C" float normcdff(float y);
# 6713 "/usr/include/math_functions.h" 3
extern "C" double erfcx(double x);
# 6788 "/usr/include/math_functions.h" 3
extern "C" float erfcxf(float x);
# 6922 "/usr/include/math_functions.h" 3
extern "C" float lgammaf(float x) throw();
# 7031 "/usr/include/math_functions.h" 3
extern "C" double tgamma(double x) throw();
# 7140 "/usr/include/math_functions.h" 3
extern "C" float tgammaf(float x) throw();
# 7153 "/usr/include/math_functions.h" 3
extern "C" double copysign(double x, double y) throw();
# 7166 "/usr/include/math_functions.h" 3
extern "C" float copysignf(float x, float y) throw();
# 7203 "/usr/include/math_functions.h" 3
extern "C" double nextafter(double x, double y) throw();
# 7240 "/usr/include/math_functions.h" 3
extern "C" float nextafterf(float x, float y) throw();
# 7256 "/usr/include/math_functions.h" 3
extern "C" double nan(const char * tagp) throw();
# 7272 "/usr/include/math_functions.h" 3
extern "C" float nanf(const char * tagp) throw();
# 7279 "/usr/include/math_functions.h" 3
extern "C" int __isinff(float) throw();
# 7280 "/usr/include/math_functions.h" 3
extern "C" int __isnanf(float) throw();
# 7290 "/usr/include/math_functions.h" 3
extern "C" int __finite(double) throw();
# 7291 "/usr/include/math_functions.h" 3
extern "C" int __finitef(float) throw();
# 7292 "/usr/include/math_functions.h" 3
extern "C" int __signbit(double) throw();
# 7293 "/usr/include/math_functions.h" 3
extern "C" int __isnan(double) throw();
# 7294 "/usr/include/math_functions.h" 3
extern "C" int __isinf(double) throw();
# 7297 "/usr/include/math_functions.h" 3
extern "C" int __signbitf(float) throw();
# 7456 "/usr/include/math_functions.h" 3
extern "C" double fma(double x, double y, double z) throw();
# 7614 "/usr/include/math_functions.h" 3
extern "C" float fmaf(float x, float y, float z) throw();
# 7625 "/usr/include/math_functions.h" 3
extern "C" int __signbitl(long double) throw();
# 7631 "/usr/include/math_functions.h" 3
extern "C" int __finitel(long double) throw();
# 7632 "/usr/include/math_functions.h" 3
extern "C" int __isinfl(long double) throw();
# 7633 "/usr/include/math_functions.h" 3
extern "C" int __isnanl(long double) throw();
# 7683 "/usr/include/math_functions.h" 3
extern "C" float acosf(float x) throw();
# 7723 "/usr/include/math_functions.h" 3
extern "C" float asinf(float x) throw();
# 7763 "/usr/include/math_functions.h" 3
extern "C" float atanf(float x) throw();
# 7796 "/usr/include/math_functions.h" 3
extern "C" float atan2f(float y, float x) throw();
# 7820 "/usr/include/math_functions.h" 3
extern "C" float cosf(float x) throw();
# 7862 "/usr/include/math_functions.h" 3
extern "C" float sinf(float x) throw();
# 7904 "/usr/include/math_functions.h" 3
extern "C" float tanf(float x) throw();
# 7928 "/usr/include/math_functions.h" 3
extern "C" float coshf(float x) throw();
# 7969 "/usr/include/math_functions.h" 3
extern "C" float sinhf(float x) throw();
# 7999 "/usr/include/math_functions.h" 3
extern "C" float tanhf(float x) throw();
# 8050 "/usr/include/math_functions.h" 3
extern "C" float logf(float x) throw();
# 8100 "/usr/include/math_functions.h" 3
extern "C" float expf(float x) throw();
# 8151 "/usr/include/math_functions.h" 3
extern "C" float log10f(float x) throw();
# 8206 "/usr/include/math_functions.h" 3
extern "C" float modff(float x, float * iptr) throw();
# 8514 "/usr/include/math_functions.h" 3
extern "C" float powf(float x, float y) throw();
# 8583 "/usr/include/math_functions.h" 3
extern "C" float sqrtf(float x) throw();
# 8642 "/usr/include/math_functions.h" 3
extern "C" float ceilf(float x) throw();
# 8714 "/usr/include/math_functions.h" 3
extern "C" float floorf(float x) throw();
# 8773 "/usr/include/math_functions.h" 3
extern "C" float fmodf(float x, float y) throw();
# 28 "/usr/include/x86_64-linux-gnu/bits/mathdef.h" 3
extern "C" { typedef float float_t; }
# 29 "/usr/include/x86_64-linux-gnu/bits/mathdef.h" 3
extern "C" { typedef double double_t; }
# 54 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double acos(double __x) throw(); extern "C" double __acos(double __x) throw();
# 56 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double asin(double __x) throw(); extern "C" double __asin(double __x) throw();
# 58 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double atan(double __x) throw(); extern "C" double __atan(double __x) throw();
# 60 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double atan2(double __y, double __x) throw(); extern "C" double __atan2(double __y, double __x) throw();
# 63 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double cos(double __x) throw(); extern "C" double __cos(double __x) throw();
# 65 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double sin(double __x) throw(); extern "C" double __sin(double __x) throw();
# 67 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double tan(double __x) throw(); extern "C" double __tan(double __x) throw();
# 72 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double cosh(double __x) throw(); extern "C" double __cosh(double __x) throw();
# 74 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double sinh(double __x) throw(); extern "C" double __sinh(double __x) throw();
# 76 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double tanh(double __x) throw(); extern "C" double __tanh(double __x) throw();
# 81 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" void sincos(double __x, double * __sinx, double * __cosx) throw(); extern "C" void __sincos(double __x, double * __sinx, double * __cosx) throw();
# 88 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double acosh(double __x) throw(); extern "C" double __acosh(double __x) throw();
# 90 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double asinh(double __x) throw(); extern "C" double __asinh(double __x) throw();
# 92 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double atanh(double __x) throw(); extern "C" double __atanh(double __x) throw();
# 100 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double exp(double __x) throw(); extern "C" double __exp(double __x) throw();
# 103 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double frexp(double __x, int * __exponent) throw(); extern "C" double __frexp(double __x, int * __exponent) throw();
# 106 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double ldexp(double __x, int __exponent) throw(); extern "C" double __ldexp(double __x, int __exponent) throw();
# 109 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double log(double __x) throw(); extern "C" double __log(double __x) throw();
# 112 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double log10(double __x) throw(); extern "C" double __log10(double __x) throw();
# 115 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double modf(double __x, double * __iptr) throw(); extern "C" double __modf(double __x, double * __iptr) throw() __attribute((__nonnull__(2)));
# 120 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double exp10(double __x) throw(); extern "C" double __exp10(double __x) throw();
# 122 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double pow10(double __x) throw(); extern "C" double __pow10(double __x) throw();
# 128 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double expm1(double __x) throw(); extern "C" double __expm1(double __x) throw();
# 131 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double log1p(double __x) throw(); extern "C" double __log1p(double __x) throw();
# 134 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double logb(double __x) throw(); extern "C" double __logb(double __x) throw();
# 141 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double exp2(double __x) throw(); extern "C" double __exp2(double __x) throw();
# 144 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double log2(double __x) throw(); extern "C" double __log2(double __x) throw();
# 153 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double pow(double __x, double __y) throw(); extern "C" double __pow(double __x, double __y) throw();
# 156 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double sqrt(double __x) throw(); extern "C" double __sqrt(double __x) throw();
# 162 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double hypot(double __x, double __y) throw(); extern "C" double __hypot(double __x, double __y) throw();
# 169 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double cbrt(double __x) throw(); extern "C" double __cbrt(double __x) throw();
# 178 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double ceil(double __x) throw() __attribute((const)); extern "C" double __ceil(double __x) throw() __attribute((const));
# 181 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double fabs(double __x) throw() __attribute((const)); extern "C" double __fabs(double __x) throw() __attribute((const));
# 184 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double floor(double __x) throw() __attribute((const)); extern "C" double __floor(double __x) throw() __attribute((const));
# 187 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double fmod(double __x, double __y) throw(); extern "C" double __fmod(double __x, double __y) throw();
# 192 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int __isinf(double __value) throw() __attribute((const));
# 195 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int __finite(double __value) throw() __attribute((const));
# 204 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" { extern inline int isinf(double __value) throw() __attribute((const)); }
# 208 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int finite(double __value) throw() __attribute((const));
# 211 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double drem(double __x, double __y) throw(); extern "C" double __drem(double __x, double __y) throw();
# 215 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double significand(double __x) throw(); extern "C" double __significand(double __x) throw();
# 221 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double copysign(double __x, double __y) throw() __attribute((const)); extern "C" double __copysign(double __x, double __y) throw() __attribute((const));
# 228 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double nan(const char * __tagb) throw() __attribute((const)); extern "C" double __nan(const char * __tagb) throw() __attribute((const));
# 234 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int __isnan(double __value) throw() __attribute((const));
# 241 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" { extern inline int isnan(double __value) throw() __attribute((const)); }
# 247 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double j0(double) throw(); extern "C" double __j0(double) throw();
# 248 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double j1(double) throw(); extern "C" double __j1(double) throw();
# 249 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double jn(int, double) throw(); extern "C" double __jn(int, double) throw();
# 250 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double y0(double) throw(); extern "C" double __y0(double) throw();
# 251 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double y1(double) throw(); extern "C" double __y1(double) throw();
# 252 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double yn(int, double) throw(); extern "C" double __yn(int, double) throw();
# 259 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double erf(double) throw(); extern "C" double __erf(double) throw();
# 260 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double erfc(double) throw(); extern "C" double __erfc(double) throw();
# 261 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double lgamma(double) throw(); extern "C" double __lgamma(double) throw();
# 268 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double tgamma(double) throw(); extern "C" double __tgamma(double) throw();
# 274 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double gamma(double) throw(); extern "C" double __gamma(double) throw();
# 281 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double lgamma_r(double, int * __signgamp) throw(); extern "C" double __lgamma_r(double, int * __signgamp) throw();
# 289 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double rint(double __x) throw(); extern "C" double __rint(double __x) throw();
# 292 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double nextafter(double __x, double __y) throw() __attribute((const)); extern "C" double __nextafter(double __x, double __y) throw() __attribute((const));
# 294 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double nexttoward(double __x, long double __y) throw() __attribute((const)); extern "C" double __nexttoward(double __x, long double __y) throw() __attribute((const));
# 298 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double remainder(double __x, double __y) throw(); extern "C" double __remainder(double __x, double __y) throw();
# 302 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double scalbn(double __x, int __n) throw(); extern "C" double __scalbn(double __x, int __n) throw();
# 306 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int ilogb(double __x) throw(); extern "C" int __ilogb(double __x) throw();
# 311 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double scalbln(double __x, long __n) throw(); extern "C" double __scalbln(double __x, long __n) throw();
# 315 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double nearbyint(double __x) throw(); extern "C" double __nearbyint(double __x) throw();
# 319 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double round(double __x) throw() __attribute((const)); extern "C" double __round(double __x) throw() __attribute((const));
# 323 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double trunc(double __x) throw() __attribute((const)); extern "C" double __trunc(double __x) throw() __attribute((const));
# 328 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double remquo(double __x, double __y, int * __quo) throw(); extern "C" double __remquo(double __x, double __y, int * __quo) throw();
# 335 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long lrint(double __x) throw(); extern "C" long __lrint(double __x) throw();
# 337 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern "C" long long llrint(double __x) throw(); extern "C" long long __llrint(double __x) throw();
# 341 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long lround(double __x) throw(); extern "C" long __lround(double __x) throw();
# 343 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern "C" long long llround(double __x) throw(); extern "C" long long __llround(double __x) throw();
# 347 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double fdim(double __x, double __y) throw(); extern "C" double __fdim(double __x, double __y) throw();
# 350 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double fmax(double __x, double __y) throw() __attribute((const)); extern "C" double __fmax(double __x, double __y) throw() __attribute((const));
# 353 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double fmin(double __x, double __y) throw() __attribute((const)); extern "C" double __fmin(double __x, double __y) throw() __attribute((const));
# 357 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int __fpclassify(double __value) throw()
# 358 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((const));
# 361 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int __signbit(double __value) throw()
# 362 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((const));
# 366 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double fma(double __x, double __y, double __z) throw(); extern "C" double __fma(double __x, double __y, double __z) throw();
# 375 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int __issignaling(double __value) throw()
# 376 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((const));
# 383 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double scalb(double __x, double __n) throw(); extern "C" double __scalb(double __x, double __n) throw();
# 54 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float acosf(float __x) throw(); extern "C" float __acosf(float __x) throw();
# 56 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float asinf(float __x) throw(); extern "C" float __asinf(float __x) throw();
# 58 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float atanf(float __x) throw(); extern "C" float __atanf(float __x) throw();
# 60 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float atan2f(float __y, float __x) throw(); extern "C" float __atan2f(float __y, float __x) throw();
# 63 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float cosf(float __x) throw();
# 65 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float sinf(float __x) throw();
# 67 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float tanf(float __x) throw();
# 72 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float coshf(float __x) throw(); extern "C" float __coshf(float __x) throw();
# 74 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float sinhf(float __x) throw(); extern "C" float __sinhf(float __x) throw();
# 76 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float tanhf(float __x) throw(); extern "C" float __tanhf(float __x) throw();
# 81 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" void sincosf(float __x, float * __sinx, float * __cosx) throw();
# 88 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float acoshf(float __x) throw(); extern "C" float __acoshf(float __x) throw();
# 90 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float asinhf(float __x) throw(); extern "C" float __asinhf(float __x) throw();
# 92 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float atanhf(float __x) throw(); extern "C" float __atanhf(float __x) throw();
# 100 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float expf(float __x) throw();
# 103 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float frexpf(float __x, int * __exponent) throw(); extern "C" float __frexpf(float __x, int * __exponent) throw();
# 106 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float ldexpf(float __x, int __exponent) throw(); extern "C" float __ldexpf(float __x, int __exponent) throw();
# 109 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float logf(float __x) throw();
# 112 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float log10f(float __x) throw();
# 115 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float modff(float __x, float * __iptr) throw(); extern "C" float __modff(float __x, float * __iptr) throw() __attribute((__nonnull__(2)));
# 120 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float exp10f(float __x) throw();
# 122 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float pow10f(float __x) throw(); extern "C" float __pow10f(float __x) throw();
# 128 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float expm1f(float __x) throw(); extern "C" float __expm1f(float __x) throw();
# 131 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float log1pf(float __x) throw(); extern "C" float __log1pf(float __x) throw();
# 134 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float logbf(float __x) throw(); extern "C" float __logbf(float __x) throw();
# 141 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float exp2f(float __x) throw(); extern "C" float __exp2f(float __x) throw();
# 144 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float log2f(float __x) throw();
# 153 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float powf(float __x, float __y) throw();
# 156 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float sqrtf(float __x) throw(); extern "C" float __sqrtf(float __x) throw();
# 162 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float hypotf(float __x, float __y) throw(); extern "C" float __hypotf(float __x, float __y) throw();
# 169 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float cbrtf(float __x) throw(); extern "C" float __cbrtf(float __x) throw();
# 178 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float ceilf(float __x) throw() __attribute((const)); extern "C" float __ceilf(float __x) throw() __attribute((const));
# 181 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float fabsf(float __x) throw() __attribute((const)); extern "C" float __fabsf(float __x) throw() __attribute((const));
# 184 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float floorf(float __x) throw() __attribute((const)); extern "C" float __floorf(float __x) throw() __attribute((const));
# 187 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float fmodf(float __x, float __y) throw(); extern "C" float __fmodf(float __x, float __y) throw();
# 192 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int __isinff(float __value) throw() __attribute((const));
# 195 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int __finitef(float __value) throw() __attribute((const));
# 204 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int isinff(float __value) throw() __attribute((const));
# 208 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int finitef(float __value) throw() __attribute((const));
# 211 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float dremf(float __x, float __y) throw(); extern "C" float __dremf(float __x, float __y) throw();
# 215 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float significandf(float __x) throw(); extern "C" float __significandf(float __x) throw();
# 221 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float copysignf(float __x, float __y) throw() __attribute((const)); extern "C" float __copysignf(float __x, float __y) throw() __attribute((const));
# 228 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float nanf(const char * __tagb) throw() __attribute((const)); extern "C" float __nanf(const char * __tagb) throw() __attribute((const));
# 234 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int __isnanf(float __value) throw() __attribute((const));
# 241 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int isnanf(float __value) throw() __attribute((const));
# 247 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float j0f(float) throw(); extern "C" float __j0f(float) throw();
# 248 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float j1f(float) throw(); extern "C" float __j1f(float) throw();
# 249 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float jnf(int, float) throw(); extern "C" float __jnf(int, float) throw();
# 250 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float y0f(float) throw(); extern "C" float __y0f(float) throw();
# 251 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float y1f(float) throw(); extern "C" float __y1f(float) throw();
# 252 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float ynf(int, float) throw(); extern "C" float __ynf(int, float) throw();
# 259 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float erff(float) throw(); extern "C" float __erff(float) throw();
# 260 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float erfcf(float) throw(); extern "C" float __erfcf(float) throw();
# 261 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float lgammaf(float) throw(); extern "C" float __lgammaf(float) throw();
# 268 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float tgammaf(float) throw(); extern "C" float __tgammaf(float) throw();
# 274 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float gammaf(float) throw(); extern "C" float __gammaf(float) throw();
# 281 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float lgammaf_r(float, int * __signgamp) throw(); extern "C" float __lgammaf_r(float, int * __signgamp) throw();
# 289 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float rintf(float __x) throw(); extern "C" float __rintf(float __x) throw();
# 292 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float nextafterf(float __x, float __y) throw() __attribute((const)); extern "C" float __nextafterf(float __x, float __y) throw() __attribute((const));
# 294 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float nexttowardf(float __x, long double __y) throw() __attribute((const)); extern "C" float __nexttowardf(float __x, long double __y) throw() __attribute((const));
# 298 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float remainderf(float __x, float __y) throw(); extern "C" float __remainderf(float __x, float __y) throw();
# 302 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float scalbnf(float __x, int __n) throw(); extern "C" float __scalbnf(float __x, int __n) throw();
# 306 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int ilogbf(float __x) throw(); extern "C" int __ilogbf(float __x) throw();
# 311 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float scalblnf(float __x, long __n) throw(); extern "C" float __scalblnf(float __x, long __n) throw();
# 315 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float nearbyintf(float __x) throw(); extern "C" float __nearbyintf(float __x) throw();
# 319 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float roundf(float __x) throw() __attribute((const)); extern "C" float __roundf(float __x) throw() __attribute((const));
# 323 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float truncf(float __x) throw() __attribute((const)); extern "C" float __truncf(float __x) throw() __attribute((const));
# 328 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float remquof(float __x, float __y, int * __quo) throw(); extern "C" float __remquof(float __x, float __y, int * __quo) throw();
# 335 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long lrintf(float __x) throw(); extern "C" long __lrintf(float __x) throw();
# 337 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern "C" long long llrintf(float __x) throw(); extern "C" long long __llrintf(float __x) throw();
# 341 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long lroundf(float __x) throw(); extern "C" long __lroundf(float __x) throw();
# 343 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern "C" long long llroundf(float __x) throw(); extern "C" long long __llroundf(float __x) throw();
# 347 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float fdimf(float __x, float __y) throw(); extern "C" float __fdimf(float __x, float __y) throw();
# 350 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float fmaxf(float __x, float __y) throw() __attribute((const)); extern "C" float __fmaxf(float __x, float __y) throw() __attribute((const));
# 353 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float fminf(float __x, float __y) throw() __attribute((const)); extern "C" float __fminf(float __x, float __y) throw() __attribute((const));
# 357 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int __fpclassifyf(float __value) throw()
# 358 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((const));
# 361 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int __signbitf(float __value) throw()
# 362 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((const));
# 366 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float fmaf(float __x, float __y, float __z) throw(); extern "C" float __fmaf(float __x, float __y, float __z) throw();
# 375 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int __issignalingf(float __value) throw()
# 376 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((const));
# 383 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float scalbf(float __x, float __n) throw(); extern "C" float __scalbf(float __x, float __n) throw();
# 54 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double acosl(long double __x) throw(); extern "C" long double __acosl(long double __x) throw();
# 56 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double asinl(long double __x) throw(); extern "C" long double __asinl(long double __x) throw();
# 58 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double atanl(long double __x) throw(); extern "C" long double __atanl(long double __x) throw();
# 60 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double atan2l(long double __y, long double __x) throw(); extern "C" long double __atan2l(long double __y, long double __x) throw();
# 63 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double cosl(long double __x) throw(); extern "C" long double __cosl(long double __x) throw();
# 65 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double sinl(long double __x) throw(); extern "C" long double __sinl(long double __x) throw();
# 67 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double tanl(long double __x) throw(); extern "C" long double __tanl(long double __x) throw();
# 72 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double coshl(long double __x) throw(); extern "C" long double __coshl(long double __x) throw();
# 74 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double sinhl(long double __x) throw(); extern "C" long double __sinhl(long double __x) throw();
# 76 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double tanhl(long double __x) throw(); extern "C" long double __tanhl(long double __x) throw();
# 81 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" void sincosl(long double __x, long double * __sinx, long double * __cosx) throw(); extern "C" void __sincosl(long double __x, long double * __sinx, long double * __cosx) throw();
# 88 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double acoshl(long double __x) throw(); extern "C" long double __acoshl(long double __x) throw();
# 90 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double asinhl(long double __x) throw(); extern "C" long double __asinhl(long double __x) throw();
# 92 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double atanhl(long double __x) throw(); extern "C" long double __atanhl(long double __x) throw();
# 100 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double expl(long double __x) throw(); extern "C" long double __expl(long double __x) throw();
# 103 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double frexpl(long double __x, int * __exponent) throw(); extern "C" long double __frexpl(long double __x, int * __exponent) throw();
# 106 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double ldexpl(long double __x, int __exponent) throw(); extern "C" long double __ldexpl(long double __x, int __exponent) throw();
# 109 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double logl(long double __x) throw(); extern "C" long double __logl(long double __x) throw();
# 112 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double log10l(long double __x) throw(); extern "C" long double __log10l(long double __x) throw();
# 115 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double modfl(long double __x, long double * __iptr) throw(); extern "C" long double __modfl(long double __x, long double * __iptr) throw() __attribute((__nonnull__(2)));
# 120 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double exp10l(long double __x) throw(); extern "C" long double __exp10l(long double __x) throw();
# 122 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double pow10l(long double __x) throw(); extern "C" long double __pow10l(long double __x) throw();
# 128 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double expm1l(long double __x) throw(); extern "C" long double __expm1l(long double __x) throw();
# 131 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double log1pl(long double __x) throw(); extern "C" long double __log1pl(long double __x) throw();
# 134 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double logbl(long double __x) throw(); extern "C" long double __logbl(long double __x) throw();
# 141 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double exp2l(long double __x) throw(); extern "C" long double __exp2l(long double __x) throw();
# 144 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double log2l(long double __x) throw(); extern "C" long double __log2l(long double __x) throw();
# 153 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double powl(long double __x, long double __y) throw(); extern "C" long double __powl(long double __x, long double __y) throw();
# 156 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double sqrtl(long double __x) throw(); extern "C" long double __sqrtl(long double __x) throw();
# 162 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double hypotl(long double __x, long double __y) throw(); extern "C" long double __hypotl(long double __x, long double __y) throw();
# 169 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double cbrtl(long double __x) throw(); extern "C" long double __cbrtl(long double __x) throw();
# 178 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double ceill(long double __x) throw() __attribute((const)); extern "C" long double __ceill(long double __x) throw() __attribute((const));
# 181 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double fabsl(long double __x) throw() __attribute((const)); extern "C" long double __fabsl(long double __x) throw() __attribute((const));
# 184 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double floorl(long double __x) throw() __attribute((const)); extern "C" long double __floorl(long double __x) throw() __attribute((const));
# 187 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double fmodl(long double __x, long double __y) throw(); extern "C" long double __fmodl(long double __x, long double __y) throw();
# 192 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int __isinfl(long double __value) throw() __attribute((const));
# 195 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int __finitel(long double __value) throw() __attribute((const));
# 204 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int isinfl(long double __value) throw() __attribute((const));
# 208 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int finitel(long double __value) throw() __attribute((const));
# 211 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double dreml(long double __x, long double __y) throw(); extern "C" long double __dreml(long double __x, long double __y) throw();
# 215 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double significandl(long double __x) throw(); extern "C" long double __significandl(long double __x) throw();
# 221 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double copysignl(long double __x, long double __y) throw() __attribute((const)); extern "C" long double __copysignl(long double __x, long double __y) throw() __attribute((const));
# 228 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double nanl(const char * __tagb) throw() __attribute((const)); extern "C" long double __nanl(const char * __tagb) throw() __attribute((const));
# 234 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int __isnanl(long double __value) throw() __attribute((const));
# 241 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int isnanl(long double __value) throw() __attribute((const));
# 247 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double j0l(long double) throw(); extern "C" long double __j0l(long double) throw();
# 248 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double j1l(long double) throw(); extern "C" long double __j1l(long double) throw();
# 249 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double jnl(int, long double) throw(); extern "C" long double __jnl(int, long double) throw();
# 250 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double y0l(long double) throw(); extern "C" long double __y0l(long double) throw();
# 251 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double y1l(long double) throw(); extern "C" long double __y1l(long double) throw();
# 252 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double ynl(int, long double) throw(); extern "C" long double __ynl(int, long double) throw();
# 259 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double erfl(long double) throw(); extern "C" long double __erfl(long double) throw();
# 260 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double erfcl(long double) throw(); extern "C" long double __erfcl(long double) throw();
# 261 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double lgammal(long double) throw(); extern "C" long double __lgammal(long double) throw();
# 268 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double tgammal(long double) throw(); extern "C" long double __tgammal(long double) throw();
# 274 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double gammal(long double) throw(); extern "C" long double __gammal(long double) throw();
# 281 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double lgammal_r(long double, int * __signgamp) throw(); extern "C" long double __lgammal_r(long double, int * __signgamp) throw();
# 289 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double rintl(long double __x) throw(); extern "C" long double __rintl(long double __x) throw();
# 292 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double nextafterl(long double __x, long double __y) throw() __attribute((const)); extern "C" long double __nextafterl(long double __x, long double __y) throw() __attribute((const));
# 294 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double nexttowardl(long double __x, long double __y) throw() __attribute((const)); extern "C" long double __nexttowardl(long double __x, long double __y) throw() __attribute((const));
# 298 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double remainderl(long double __x, long double __y) throw(); extern "C" long double __remainderl(long double __x, long double __y) throw();
# 302 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double scalbnl(long double __x, int __n) throw(); extern "C" long double __scalbnl(long double __x, int __n) throw();
# 306 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int ilogbl(long double __x) throw(); extern "C" int __ilogbl(long double __x) throw();
# 311 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double scalblnl(long double __x, long __n) throw(); extern "C" long double __scalblnl(long double __x, long __n) throw();
# 315 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double nearbyintl(long double __x) throw(); extern "C" long double __nearbyintl(long double __x) throw();
# 319 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double roundl(long double __x) throw() __attribute((const)); extern "C" long double __roundl(long double __x) throw() __attribute((const));
# 323 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double truncl(long double __x) throw() __attribute((const)); extern "C" long double __truncl(long double __x) throw() __attribute((const));
# 328 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double remquol(long double __x, long double __y, int * __quo) throw(); extern "C" long double __remquol(long double __x, long double __y, int * __quo) throw();
# 335 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long lrintl(long double __x) throw(); extern "C" long __lrintl(long double __x) throw();
# 337 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern "C" long long llrintl(long double __x) throw(); extern "C" long long __llrintl(long double __x) throw();
# 341 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long lroundl(long double __x) throw(); extern "C" long __lroundl(long double __x) throw();
# 343 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern "C" long long llroundl(long double __x) throw(); extern "C" long long __llroundl(long double __x) throw();
# 347 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double fdiml(long double __x, long double __y) throw(); extern "C" long double __fdiml(long double __x, long double __y) throw();
# 350 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double fmaxl(long double __x, long double __y) throw() __attribute((const)); extern "C" long double __fmaxl(long double __x, long double __y) throw() __attribute((const));
# 353 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double fminl(long double __x, long double __y) throw() __attribute((const)); extern "C" long double __fminl(long double __x, long double __y) throw() __attribute((const));
# 357 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int __fpclassifyl(long double __value) throw()
# 358 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((const));
# 361 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int __signbitl(long double __value) throw()
# 362 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((const));
# 366 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double fmal(long double __x, long double __y, long double __z) throw(); extern "C" long double __fmal(long double __x, long double __y, long double __z) throw();
# 375 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int __issignalingl(long double __value) throw()
# 376 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((const));
# 383 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double scalbl(long double __x, long double __n) throw(); extern "C" long double __scalbl(long double __x, long double __n) throw();
# 168 "/usr/include/math.h" 3
extern "C" { extern int signgam; }
# 210 "/usr/include/math.h" 3
enum {
# 211 "/usr/include/math.h" 3
FP_NAN,
# 214 "/usr/include/math.h" 3
FP_INFINITE,
# 217 "/usr/include/math.h" 3
FP_ZERO,
# 220 "/usr/include/math.h" 3
FP_SUBNORMAL,
# 223 "/usr/include/math.h" 3
FP_NORMAL
# 226 "/usr/include/math.h" 3
};
# 354 "/usr/include/math.h" 3
extern "C" { typedef
# 348 "/usr/include/math.h" 3
enum {
# 349 "/usr/include/math.h" 3
_IEEE_ = (-1),
# 350 "/usr/include/math.h" 3
_SVID_ = 0,
# 351 "/usr/include/math.h" 3
_XOPEN_,
# 352 "/usr/include/math.h" 3
_POSIX_,
# 353 "/usr/include/math.h" 3
_ISOC_
# 354 "/usr/include/math.h" 3
} _LIB_VERSION_TYPE; }
# 359 "/usr/include/math.h" 3
extern "C" { extern _LIB_VERSION_TYPE _LIB_VERSION; }
# 370 "/usr/include/math.h" 3
extern "C" { struct __exception {
# 375 "/usr/include/math.h" 3
int type;
# 376 "/usr/include/math.h" 3
char *name;
# 377 "/usr/include/math.h" 3
double arg1;
# 378 "/usr/include/math.h" 3
double arg2;
# 379 "/usr/include/math.h" 3
double retval;
# 380 "/usr/include/math.h" 3
}; }
# 383 "/usr/include/math.h" 3
extern "C" int matherr(__exception * __exc) throw();
# 55 "/usr/include/x86_64-linux-gnu/bits/waitflags.h" 3
extern "C" { typedef
# 51 "/usr/include/x86_64-linux-gnu/bits/waitflags.h" 3
enum {
# 52 "/usr/include/x86_64-linux-gnu/bits/waitflags.h" 3
P_ALL,
# 53 "/usr/include/x86_64-linux-gnu/bits/waitflags.h" 3
P_PID,
# 54 "/usr/include/x86_64-linux-gnu/bits/waitflags.h" 3
P_PGID
# 55 "/usr/include/x86_64-linux-gnu/bits/waitflags.h" 3
} idtype_t; }
# 45 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
extern "C" { static inline unsigned __bswap_32(unsigned __bsx)
# 46 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
{
# 47 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
return __builtin_bswap32(__bsx);
# 48 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
} }
# 109 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
extern "C" { static inline __uint64_t __bswap_64(__uint64_t __bsx)
# 110 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
{
# 111 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
return __builtin_bswap64(__bsx);
# 112 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
} }
# 66 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 3
extern "C" { union wait {
# 68 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 3
int w_status;
# 70 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 3
struct {
# 72 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 3
unsigned __w_termsig:7;
# 73 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 3
unsigned __w_coredump:1;
# 74 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 3
unsigned __w_retcode:8;
# 75 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 3
unsigned:16;
# 83 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 3
} __wait_terminated;
# 85 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 3
struct {
# 87 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 3
unsigned __w_stopval:8;
# 88 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 3
unsigned __w_stopsig:8;
# 89 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 3
unsigned:16;
# 96 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 3
} __wait_stopped;
# 97 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 3
}; }
# 101 "/usr/include/stdlib.h" 3
extern "C" { typedef
# 98 "/usr/include/stdlib.h" 3
struct {
# 99 "/usr/include/stdlib.h" 3
int quot;
# 100 "/usr/include/stdlib.h" 3
int rem;
# 101 "/usr/include/stdlib.h" 3
} div_t; }
# 109 "/usr/include/stdlib.h" 3
extern "C" { typedef
# 106 "/usr/include/stdlib.h" 3
struct {
# 107 "/usr/include/stdlib.h" 3
long quot;
# 108 "/usr/include/stdlib.h" 3
long rem;
# 109 "/usr/include/stdlib.h" 3
} ldiv_t; }
# 121 "/usr/include/stdlib.h" 3
__extension__ extern "C" { typedef
# 118 "/usr/include/stdlib.h" 3
struct {
# 119 "/usr/include/stdlib.h" 3
long long quot;
# 120 "/usr/include/stdlib.h" 3
long long rem;
# 121 "/usr/include/stdlib.h" 3
} lldiv_t; }
# 139 "/usr/include/stdlib.h" 3
extern "C" size_t __ctype_get_mb_cur_max() throw();
# 144 "/usr/include/stdlib.h" 3
extern "C" double atof(const char * __nptr) throw()
# 145 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 147 "/usr/include/stdlib.h" 3
extern "C" int atoi(const char * __nptr) throw()
# 148 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 150 "/usr/include/stdlib.h" 3
extern "C" long atol(const char * __nptr) throw()
# 151 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 157 "/usr/include/stdlib.h" 3
__extension__ extern "C" long long atoll(const char * __nptr) throw()
# 158 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 164 "/usr/include/stdlib.h" 3
extern "C" double strtod(const char *__restrict__ __nptr, char **__restrict__ __endptr) throw()
# 166 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 172 "/usr/include/stdlib.h" 3
extern "C" float strtof(const char *__restrict__ __nptr, char **__restrict__ __endptr) throw()
# 173 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 175 "/usr/include/stdlib.h" 3
extern "C" long double strtold(const char *__restrict__ __nptr, char **__restrict__ __endptr) throw()
# 177 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 183 "/usr/include/stdlib.h" 3
extern "C" long strtol(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base) throw()
# 185 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 187 "/usr/include/stdlib.h" 3
extern "C" unsigned long strtoul(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base) throw()
# 189 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 195 "/usr/include/stdlib.h" 3
__extension__ extern "C" long long strtoq(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base) throw()
# 197 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 200 "/usr/include/stdlib.h" 3
__extension__ extern "C" unsigned long long strtouq(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base) throw()
# 202 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 209 "/usr/include/stdlib.h" 3
__extension__ extern "C" long long strtoll(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base) throw()
# 211 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 214 "/usr/include/stdlib.h" 3
__extension__ extern "C" unsigned long long strtoull(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base) throw()
# 216 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 239 "/usr/include/stdlib.h" 3
extern "C" long strtol_l(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base, __locale_t __loc) throw()
# 241 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 243 "/usr/include/stdlib.h" 3
extern "C" unsigned long strtoul_l(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base, __locale_t __loc) throw()
# 246 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 249 "/usr/include/stdlib.h" 3
__extension__ extern "C" long long strtoll_l(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base, __locale_t __loc) throw()
# 252 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 255 "/usr/include/stdlib.h" 3
__extension__ extern "C" unsigned long long strtoull_l(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base, __locale_t __loc) throw()
# 258 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 260 "/usr/include/stdlib.h" 3
extern "C" double strtod_l(const char *__restrict__ __nptr, char **__restrict__ __endptr, __locale_t __loc) throw()
# 262 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 3)));
# 264 "/usr/include/stdlib.h" 3
extern "C" float strtof_l(const char *__restrict__ __nptr, char **__restrict__ __endptr, __locale_t __loc) throw()
# 266 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 3)));
# 268 "/usr/include/stdlib.h" 3
extern "C" long double strtold_l(const char *__restrict__ __nptr, char **__restrict__ __endptr, __locale_t __loc) throw()
# 271 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 3)));
# 305 "/usr/include/stdlib.h" 3
extern "C" char *l64a(long __n) throw();
# 308 "/usr/include/stdlib.h" 3
extern "C" long a64l(const char * __s) throw()
# 309 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 33 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __u_char u_char; }
# 34 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __u_short u_short; }
# 35 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __u_int u_int; }
# 36 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __u_long u_long; }
# 37 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __quad_t quad_t; }
# 38 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __u_quad_t u_quad_t; }
# 39 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __fsid_t fsid_t; }
# 44 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __loff_t loff_t; }
# 48 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __ino_t ino_t; }
# 55 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __ino64_t ino64_t; }
# 60 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __dev_t dev_t; }
# 65 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __gid_t gid_t; }
# 70 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __mode_t mode_t; }
# 75 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __nlink_t nlink_t; }
# 80 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __uid_t uid_t; }
# 86 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __off_t off_t; }
# 93 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __off64_t off64_t; }
# 104 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __id_t id_t; }
# 109 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __ssize_t ssize_t; }
# 115 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __daddr_t daddr_t; }
# 116 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __caddr_t caddr_t; }
# 122 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __key_t key_t; }
# 136 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __useconds_t useconds_t; }
# 140 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __suseconds_t suseconds_t; }
# 150 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef unsigned long ulong; }
# 151 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef unsigned short ushort; }
# 152 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef unsigned uint; }
# 194 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef signed char int8_t __attribute((__mode__(__QI__))); }
# 195 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef short int16_t __attribute((__mode__(__HI__))); }
# 196 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef int int32_t __attribute((__mode__(__SI__))); }
# 197 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef long int64_t __attribute((__mode__(__DI__))); }
# 200 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef unsigned char u_int8_t __attribute((__mode__(__QI__))); }
# 201 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef unsigned short u_int16_t __attribute((__mode__(__HI__))); }
# 202 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef unsigned u_int32_t __attribute((__mode__(__SI__))); }
# 203 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef unsigned long u_int64_t __attribute((__mode__(__DI__))); }
# 205 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef long register_t __attribute((__mode__(__word__))); }
# 22 "/usr/include/x86_64-linux-gnu/bits/sigset.h" 3
extern "C" { typedef int __sig_atomic_t; }
# 30 "/usr/include/x86_64-linux-gnu/bits/sigset.h" 3
extern "C" { typedef
# 28 "/usr/include/x86_64-linux-gnu/bits/sigset.h" 3
struct {
# 29 "/usr/include/x86_64-linux-gnu/bits/sigset.h" 3
unsigned long __val[(1024) / ((8) * sizeof(unsigned long))];
# 30 "/usr/include/x86_64-linux-gnu/bits/sigset.h" 3
} __sigset_t; }
# 37 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
extern "C" { typedef __sigset_t sigset_t; }
# 54 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
extern "C" { typedef long __fd_mask; }
# 75 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
extern "C" { typedef
# 65 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
struct {
# 69 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
__fd_mask fds_bits[1024 / (8 * ((int)sizeof(__fd_mask)))];
# 75 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
} fd_set; }
# 82 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
extern "C" { typedef __fd_mask fd_mask; }
# 106 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
extern "C" int select(int __nfds, fd_set *__restrict__ __readfds, fd_set *__restrict__ __writefds, fd_set *__restrict__ __exceptfds, timeval *__restrict__ __timeout);
# 118 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
extern "C" int pselect(int __nfds, fd_set *__restrict__ __readfds, fd_set *__restrict__ __writefds, fd_set *__restrict__ __exceptfds, const timespec *__restrict__ __timeout, const __sigset_t *__restrict__ __sigmask);
# 27 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
__extension__ extern "C" unsigned gnu_dev_major(unsigned long long __dev) throw()
# 28 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
 __attribute((const));
# 30 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
__extension__ extern "C" unsigned gnu_dev_minor(unsigned long long __dev) throw()
# 31 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
 __attribute((const));
# 33 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
__extension__ extern "C" unsigned long long gnu_dev_makedev(unsigned __major, unsigned __minor) throw()
# 35 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
 __attribute((const));
# 228 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __blksize_t blksize_t; }
# 235 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __blkcnt_t blkcnt_t; }
# 239 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __fsblkcnt_t fsblkcnt_t; }
# 243 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __fsfilcnt_t fsfilcnt_t; }
# 262 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __blkcnt64_t blkcnt64_t; }
# 263 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __fsblkcnt64_t fsblkcnt64_t; }
# 264 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __fsfilcnt64_t fsfilcnt64_t; }
# 60 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
extern "C" { typedef unsigned long pthread_t; }
# 63 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
extern "C" { union pthread_attr_t {
# 65 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[56];
# 66 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
long __align;
# 67 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
}; }
# 69 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
extern "C" { typedef pthread_attr_t pthread_attr_t; }
# 79 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
extern "C" { typedef
# 75 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
struct __pthread_internal_list {
# 77 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
__pthread_internal_list *__prev;
# 78 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
__pthread_internal_list *__next;
# 79 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} __pthread_list_t; }
# 128 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
extern "C" { typedef
# 91 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 92 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
struct __pthread_mutex_s {
# 94 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
int __lock;
# 95 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
unsigned __count;
# 96 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
int __owner;
# 98 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
unsigned __nusers;
# 102 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
int __kind;
# 104 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
short __spins;
# 105 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
short __elision;
# 106 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
__pthread_list_t __list;
# 125 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} __data;
# 126 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[40];
# 127 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
long __align;
# 128 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_mutex_t; }
# 134 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
extern "C" { typedef
# 131 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 132 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[4];
# 133 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
int __align;
# 134 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_mutexattr_t; }
# 154 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
extern "C" { typedef
# 140 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 142 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
struct {
# 143 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
int __lock;
# 144 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
unsigned __futex;
# 145 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
__extension__ unsigned long long __total_seq;
# 146 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
__extension__ unsigned long long __wakeup_seq;
# 147 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
__extension__ unsigned long long __woken_seq;
# 148 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
void *__mutex;
# 149 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
unsigned __nwaiters;
# 150 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
unsigned __broadcast_seq;
# 151 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} __data;
# 152 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[48];
# 153 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
__extension__ long long __align;
# 154 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_cond_t; }
# 160 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
extern "C" { typedef
# 157 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 158 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[4];
# 159 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
int __align;
# 160 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_condattr_t; }
# 164 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
extern "C" { typedef unsigned pthread_key_t; }
# 168 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
extern "C" { typedef int pthread_once_t; }
# 222 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
extern "C" { typedef
# 175 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 178 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
struct {
# 179 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
int __lock;
# 180 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
unsigned __nr_readers;
# 181 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
unsigned __readers_wakeup;
# 182 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
unsigned __writer_wakeup;
# 183 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
unsigned __nr_readers_queued;
# 184 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
unsigned __nr_writers_queued;
# 185 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
int __writer;
# 186 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
int __shared;
# 187 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
signed char __rwelision;
# 192 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
unsigned char __pad1[7];
# 195 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
unsigned long __pad2;
# 198 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
unsigned __flags;
# 200 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} __data;
# 220 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[56];
# 221 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
long __align;
# 222 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_rwlock_t; }
# 228 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
extern "C" { typedef
# 225 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 226 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[8];
# 227 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
long __align;
# 228 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_rwlockattr_t; }
# 234 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
extern "C" { typedef volatile int pthread_spinlock_t; }
# 243 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
extern "C" { typedef
# 240 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 241 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[32];
# 242 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
long __align;
# 243 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_barrier_t; }
# 249 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
extern "C" { typedef
# 246 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 247 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[4];
# 248 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
int __align;
# 249 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_barrierattr_t; }
# 321 "/usr/include/stdlib.h" 3
extern "C" long random() throw();
# 324 "/usr/include/stdlib.h" 3
extern "C" void srandom(unsigned __seed) throw();
# 330 "/usr/include/stdlib.h" 3
extern "C" char *initstate(unsigned __seed, char * __statebuf, size_t __statelen) throw()
# 331 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 335 "/usr/include/stdlib.h" 3
extern "C" char *setstate(char * __statebuf) throw() __attribute((__nonnull__(1)));
# 343 "/usr/include/stdlib.h" 3
extern "C" { struct random_data {
# 345 "/usr/include/stdlib.h" 3
int32_t *fptr;
# 346 "/usr/include/stdlib.h" 3
int32_t *rptr;
# 347 "/usr/include/stdlib.h" 3
int32_t *state;
# 348 "/usr/include/stdlib.h" 3
int rand_type;
# 349 "/usr/include/stdlib.h" 3
int rand_deg;
# 350 "/usr/include/stdlib.h" 3
int rand_sep;
# 351 "/usr/include/stdlib.h" 3
int32_t *end_ptr;
# 352 "/usr/include/stdlib.h" 3
}; }
# 354 "/usr/include/stdlib.h" 3
extern "C" int random_r(random_data *__restrict__ __buf, int32_t *__restrict__ __result) throw()
# 355 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 357 "/usr/include/stdlib.h" 3
extern "C" int srandom_r(unsigned __seed, random_data * __buf) throw()
# 358 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 360 "/usr/include/stdlib.h" 3
extern "C" int initstate_r(unsigned __seed, char *__restrict__ __statebuf, size_t __statelen, random_data *__restrict__ __buf) throw()
# 363 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2, 4)));
# 365 "/usr/include/stdlib.h" 3
extern "C" int setstate_r(char *__restrict__ __statebuf, random_data *__restrict__ __buf) throw()
# 367 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 374 "/usr/include/stdlib.h" 3
extern "C" int rand() throw();
# 376 "/usr/include/stdlib.h" 3
extern "C" void srand(unsigned __seed) throw();
# 381 "/usr/include/stdlib.h" 3
extern "C" int rand_r(unsigned * __seed) throw();
# 389 "/usr/include/stdlib.h" 3
extern "C" double drand48() throw();
# 390 "/usr/include/stdlib.h" 3
extern "C" double erand48(unsigned short __xsubi[3]) throw() __attribute((__nonnull__(1)));
# 393 "/usr/include/stdlib.h" 3
extern "C" long lrand48() throw();
# 394 "/usr/include/stdlib.h" 3
extern "C" long nrand48(unsigned short __xsubi[3]) throw()
# 395 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 398 "/usr/include/stdlib.h" 3
extern "C" long mrand48() throw();
# 399 "/usr/include/stdlib.h" 3
extern "C" long jrand48(unsigned short __xsubi[3]) throw()
# 400 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 403 "/usr/include/stdlib.h" 3
extern "C" void srand48(long __seedval) throw();
# 404 "/usr/include/stdlib.h" 3
extern "C" unsigned short *seed48(unsigned short __seed16v[3]) throw()
# 405 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 406 "/usr/include/stdlib.h" 3
extern "C" void lcong48(unsigned short __param[7]) throw() __attribute((__nonnull__(1)));
# 412 "/usr/include/stdlib.h" 3
extern "C" { struct drand48_data {
# 414 "/usr/include/stdlib.h" 3
unsigned short __x[3];
# 415 "/usr/include/stdlib.h" 3
unsigned short __old_x[3];
# 416 "/usr/include/stdlib.h" 3
unsigned short __c;
# 417 "/usr/include/stdlib.h" 3
unsigned short __init;
# 418 "/usr/include/stdlib.h" 3
__extension__ unsigned long long __a;
# 420 "/usr/include/stdlib.h" 3
}; }
# 423 "/usr/include/stdlib.h" 3
extern "C" int drand48_r(drand48_data *__restrict__ __buffer, double *__restrict__ __result) throw()
# 424 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 425 "/usr/include/stdlib.h" 3
extern "C" int erand48_r(unsigned short __xsubi[3], drand48_data *__restrict__ __buffer, double *__restrict__ __result) throw()
# 427 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 430 "/usr/include/stdlib.h" 3
extern "C" int lrand48_r(drand48_data *__restrict__ __buffer, long *__restrict__ __result) throw()
# 432 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 433 "/usr/include/stdlib.h" 3
extern "C" int nrand48_r(unsigned short __xsubi[3], drand48_data *__restrict__ __buffer, long *__restrict__ __result) throw()
# 436 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 439 "/usr/include/stdlib.h" 3
extern "C" int mrand48_r(drand48_data *__restrict__ __buffer, long *__restrict__ __result) throw()
# 441 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 442 "/usr/include/stdlib.h" 3
extern "C" int jrand48_r(unsigned short __xsubi[3], drand48_data *__restrict__ __buffer, long *__restrict__ __result) throw()
# 445 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 448 "/usr/include/stdlib.h" 3
extern "C" int srand48_r(long __seedval, drand48_data * __buffer) throw()
# 449 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 451 "/usr/include/stdlib.h" 3
extern "C" int seed48_r(unsigned short __seed16v[3], drand48_data * __buffer) throw()
# 452 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 454 "/usr/include/stdlib.h" 3
extern "C" int lcong48_r(unsigned short __param[7], drand48_data * __buffer) throw()
# 456 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 466 "/usr/include/stdlib.h" 3
extern "C" void *malloc(size_t __size) throw() __attribute((__malloc__));
# 468 "/usr/include/stdlib.h" 3
extern "C" void *calloc(size_t __nmemb, size_t __size) throw()
# 469 "/usr/include/stdlib.h" 3
 __attribute((__malloc__));
# 480 "/usr/include/stdlib.h" 3
extern "C" void *realloc(void * __ptr, size_t __size) throw()
# 481 "/usr/include/stdlib.h" 3
 __attribute((__warn_unused_result__));
# 483 "/usr/include/stdlib.h" 3
extern "C" void free(void * __ptr) throw();
# 488 "/usr/include/stdlib.h" 3
extern "C" void cfree(void * __ptr) throw();
# 32 "/usr/include/alloca.h" 3
extern "C" void *alloca(size_t __size) throw();
# 498 "/usr/include/stdlib.h" 3
extern "C" void *valloc(size_t __size) throw() __attribute((__malloc__));
# 503 "/usr/include/stdlib.h" 3
extern "C" int posix_memalign(void ** __memptr, size_t __alignment, size_t __size) throw()
# 504 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 509 "/usr/include/stdlib.h" 3
extern "C" void *aligned_alloc(size_t __alignment, size_t __size) throw()
# 510 "/usr/include/stdlib.h" 3
 __attribute((__malloc__)) __attribute((__alloc_size__(2)));
# 515 "/usr/include/stdlib.h" 3
extern "C" void abort() throw() __attribute((__noreturn__));
# 519 "/usr/include/stdlib.h" 3
extern "C" int atexit(void (* __func)(void)) throw() __attribute((__nonnull__(1)));
# 524 "/usr/include/stdlib.h" 3
int at_quick_exit(void (* __func)(void)) throw() __asm__("at_quick_exit")
# 525 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 535 "/usr/include/stdlib.h" 3
extern "C" int on_exit(void (* __func)(int __status, void * __arg), void * __arg) throw()
# 536 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 543 "/usr/include/stdlib.h" 3
extern "C" void exit(int __status) throw() __attribute((__noreturn__));
# 549 "/usr/include/stdlib.h" 3
extern "C" void quick_exit(int __status) throw() __attribute((__noreturn__));
# 557 "/usr/include/stdlib.h" 3
extern "C" void _Exit(int __status) throw() __attribute((__noreturn__));
# 564 "/usr/include/stdlib.h" 3
extern "C" char *getenv(const char * __name) throw() __attribute((__nonnull__(1)));
# 570 "/usr/include/stdlib.h" 3
extern "C" char *secure_getenv(const char * __name) throw()
# 571 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 578 "/usr/include/stdlib.h" 3
extern "C" int putenv(char * __string) throw() __attribute((__nonnull__(1)));
# 584 "/usr/include/stdlib.h" 3
extern "C" int setenv(const char * __name, const char * __value, int __replace) throw()
# 585 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 588 "/usr/include/stdlib.h" 3
extern "C" int unsetenv(const char * __name) throw() __attribute((__nonnull__(1)));
# 595 "/usr/include/stdlib.h" 3
extern "C" int clearenv() throw();
# 606 "/usr/include/stdlib.h" 3
extern "C" char *mktemp(char * __template) throw() __attribute((__nonnull__(1)));
# 619 "/usr/include/stdlib.h" 3
extern "C" int mkstemp(char * __template) __attribute((__nonnull__(1)));
# 629 "/usr/include/stdlib.h" 3
extern "C" int mkstemp64(char * __template) __attribute((__nonnull__(1)));
# 641 "/usr/include/stdlib.h" 3
extern "C" int mkstemps(char * __template, int __suffixlen) __attribute((__nonnull__(1)));
# 651 "/usr/include/stdlib.h" 3
extern "C" int mkstemps64(char * __template, int __suffixlen)
# 652 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 662 "/usr/include/stdlib.h" 3
extern "C" char *mkdtemp(char * __template) throw() __attribute((__nonnull__(1)));
# 673 "/usr/include/stdlib.h" 3
extern "C" int mkostemp(char * __template, int __flags) __attribute((__nonnull__(1)));
# 683 "/usr/include/stdlib.h" 3
extern "C" int mkostemp64(char * __template, int __flags) __attribute((__nonnull__(1)));
# 693 "/usr/include/stdlib.h" 3
extern "C" int mkostemps(char * __template, int __suffixlen, int __flags)
# 694 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 705 "/usr/include/stdlib.h" 3
extern "C" int mkostemps64(char * __template, int __suffixlen, int __flags)
# 706 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 716 "/usr/include/stdlib.h" 3
extern "C" int system(const char * __command);
# 723 "/usr/include/stdlib.h" 3
extern "C" char *canonicalize_file_name(const char * __name) throw()
# 724 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 733 "/usr/include/stdlib.h" 3
extern "C" char *realpath(const char *__restrict__ __name, char *__restrict__ __resolved) throw();
# 741 "/usr/include/stdlib.h" 3
extern "C" { typedef int (*__compar_fn_t)(const void *, const void *); }
# 744 "/usr/include/stdlib.h" 3
extern "C" { typedef __compar_fn_t comparison_fn_t; }
# 748 "/usr/include/stdlib.h" 3
extern "C" { typedef int (*__compar_d_fn_t)(const void *, const void *, void *); }
# 754 "/usr/include/stdlib.h" 3
extern "C" void *bsearch(const void * __key, const void * __base, size_t __nmemb, size_t __size, __compar_fn_t __compar)
# 756 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2, 5)));
# 764 "/usr/include/stdlib.h" 3
extern "C" void qsort(void * __base, size_t __nmemb, size_t __size, __compar_fn_t __compar)
# 765 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 767 "/usr/include/stdlib.h" 3
extern "C" void qsort_r(void * __base, size_t __nmemb, size_t __size, __compar_d_fn_t __compar, void * __arg)
# 769 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 774 "/usr/include/stdlib.h" 3
extern "C" int abs(int __x) throw() __attribute((const));
# 775 "/usr/include/stdlib.h" 3
extern "C" long labs(long __x) throw() __attribute((const));
# 779 "/usr/include/stdlib.h" 3
__extension__ extern "C" long long llabs(long long __x) throw()
# 780 "/usr/include/stdlib.h" 3
 __attribute((const));
# 788 "/usr/include/stdlib.h" 3
extern "C" div_t div(int __numer, int __denom) throw()
# 789 "/usr/include/stdlib.h" 3
 __attribute((const));
# 790 "/usr/include/stdlib.h" 3
extern "C" ldiv_t ldiv(long __numer, long __denom) throw()
# 791 "/usr/include/stdlib.h" 3
 __attribute((const));
# 796 "/usr/include/stdlib.h" 3
__extension__ extern "C" lldiv_t lldiv(long long __numer, long long __denom) throw()
# 798 "/usr/include/stdlib.h" 3
 __attribute((const));
# 811 "/usr/include/stdlib.h" 3
extern "C" char *ecvt(double __value, int __ndigit, int *__restrict__ __decpt, int *__restrict__ __sign) throw()
# 812 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4)));
# 817 "/usr/include/stdlib.h" 3
extern "C" char *fcvt(double __value, int __ndigit, int *__restrict__ __decpt, int *__restrict__ __sign) throw()
# 818 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4)));
# 823 "/usr/include/stdlib.h" 3
extern "C" char *gcvt(double __value, int __ndigit, char * __buf) throw()
# 824 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3)));
# 829 "/usr/include/stdlib.h" 3
extern "C" char *qecvt(long double __value, int __ndigit, int *__restrict__ __decpt, int *__restrict__ __sign) throw()
# 831 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4)));
# 832 "/usr/include/stdlib.h" 3
extern "C" char *qfcvt(long double __value, int __ndigit, int *__restrict__ __decpt, int *__restrict__ __sign) throw()
# 834 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4)));
# 835 "/usr/include/stdlib.h" 3
extern "C" char *qgcvt(long double __value, int __ndigit, char * __buf) throw()
# 836 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3)));
# 841 "/usr/include/stdlib.h" 3
extern "C" int ecvt_r(double __value, int __ndigit, int *__restrict__ __decpt, int *__restrict__ __sign, char *__restrict__ __buf, size_t __len) throw()
# 843 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4, 5)));
# 844 "/usr/include/stdlib.h" 3
extern "C" int fcvt_r(double __value, int __ndigit, int *__restrict__ __decpt, int *__restrict__ __sign, char *__restrict__ __buf, size_t __len) throw()
# 846 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4, 5)));
# 848 "/usr/include/stdlib.h" 3
extern "C" int qecvt_r(long double __value, int __ndigit, int *__restrict__ __decpt, int *__restrict__ __sign, char *__restrict__ __buf, size_t __len) throw()
# 851 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4, 5)));
# 852 "/usr/include/stdlib.h" 3
extern "C" int qfcvt_r(long double __value, int __ndigit, int *__restrict__ __decpt, int *__restrict__ __sign, char *__restrict__ __buf, size_t __len) throw()
# 855 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4, 5)));
# 862 "/usr/include/stdlib.h" 3
extern "C" int mblen(const char * __s, size_t __n) throw();
# 865 "/usr/include/stdlib.h" 3
extern "C" int mbtowc(wchar_t *__restrict__ __pwc, const char *__restrict__ __s, size_t __n) throw();
# 869 "/usr/include/stdlib.h" 3
extern "C" int wctomb(char * __s, wchar_t __wchar) throw();
# 873 "/usr/include/stdlib.h" 3
extern "C" size_t mbstowcs(wchar_t *__restrict__ __pwcs, const char *__restrict__ __s, size_t __n) throw();
# 876 "/usr/include/stdlib.h" 3
extern "C" size_t wcstombs(char *__restrict__ __s, const wchar_t *__restrict__ __pwcs, size_t __n) throw();
# 887 "/usr/include/stdlib.h" 3
extern "C" int rpmatch(const char * __response) throw() __attribute((__nonnull__(1)));
# 898 "/usr/include/stdlib.h" 3
extern "C" int getsubopt(char **__restrict__ __optionp, char *const *__restrict__ __tokens, char **__restrict__ __valuep) throw()
# 901 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2, 3)));
# 907 "/usr/include/stdlib.h" 3
extern "C" void setkey(const char * __key) throw() __attribute((__nonnull__(1)));
# 915 "/usr/include/stdlib.h" 3
extern "C" int posix_openpt(int __oflag);
# 923 "/usr/include/stdlib.h" 3
extern "C" int grantpt(int __fd) throw();
# 927 "/usr/include/stdlib.h" 3
extern "C" int unlockpt(int __fd) throw();
# 932 "/usr/include/stdlib.h" 3
extern "C" char *ptsname(int __fd) throw();
# 939 "/usr/include/stdlib.h" 3
extern "C" int ptsname_r(int __fd, char * __buf, size_t __buflen) throw()
# 940 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 943 "/usr/include/stdlib.h" 3
extern "C" int getpt();
# 950 "/usr/include/stdlib.h" 3
extern "C" int getloadavg(double __loadavg[], int __nelem) throw()
# 951 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 197 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h" 3
namespace std {
# 199 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h" 3
typedef unsigned long size_t;
# 200 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h" 3
typedef long ptrdiff_t;
# 205 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h" 3
}
# 219 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h" 3
namespace std {
# 221 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h" 3
inline namespace __cxx11 __attribute((__abi_tag__("cxx11" ))) { }
# 222 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h" 3
}
# 223 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h" 3
namespace __gnu_cxx {
# 225 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h" 3
inline namespace __cxx11 __attribute((__abi_tag__("cxx11" ))) { }
# 226 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h" 3
}
# 68 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 72 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Iterator, class _Container> class __normal_iterator;
# 76 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
}
# 78 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
namespace std __attribute((__visibility__("default"))) {
# 82 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __true_type { };
# 83 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __false_type { };
# 85 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< bool >
# 86 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __truth_type {
# 87 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __false_type __type; };
# 90 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __truth_type< true> {
# 91 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type; };
# 95 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Sp, class _Tp>
# 96 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __traitor {
# 98 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = ((bool)_Sp::__value) || ((bool)_Tp::__value)};
# 99 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef typename __truth_type< __value> ::__type __type;
# 100 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 103 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class , class >
# 104 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __are_same {
# 106 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value};
# 107 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 108 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 110 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 111 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __are_same< _Tp, _Tp> {
# 113 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 114 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 115 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 118 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 119 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_void {
# 121 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value};
# 122 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 123 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 126 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_void< void> {
# 128 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 129 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 130 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 135 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 136 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_integer {
# 138 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value};
# 139 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 140 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 147 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< bool> {
# 149 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 150 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 151 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 154 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< char> {
# 156 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 157 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 158 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 161 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< signed char> {
# 163 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 164 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 165 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 168 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned char> {
# 170 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 171 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 172 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 176 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< wchar_t> {
# 178 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 179 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 180 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 200 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< short> {
# 202 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 203 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 204 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 207 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned short> {
# 209 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 210 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 211 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 214 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< int> {
# 216 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 217 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 218 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 221 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned> {
# 223 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 224 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 225 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 228 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< long> {
# 230 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 231 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 232 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 235 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned long> {
# 237 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 238 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 239 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 242 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< long long> {
# 244 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 245 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 246 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 249 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned long long> {
# 251 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 252 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 253 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 270 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< __int128_t> { enum { __value = 1}; typedef __true_type __type; }; template<> struct __is_integer< __uint128_t> { enum { __value = 1}; typedef __true_type __type; };
# 287 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 288 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_floating {
# 290 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value};
# 291 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 292 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 296 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_floating< float> {
# 298 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 299 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 300 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 303 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_floating< double> {
# 305 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 306 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 307 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 310 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_floating< long double> {
# 312 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 313 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 314 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 319 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 320 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_pointer {
# 322 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value};
# 323 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 324 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 326 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 327 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_pointer< _Tp *> {
# 329 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 330 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 331 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 336 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 337 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_normal_iterator {
# 339 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value};
# 340 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 341 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 343 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Iterator, class _Container>
# 344 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_normal_iterator< __gnu_cxx::__normal_iterator< _Iterator, _Container> > {
# 347 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 348 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 349 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 354 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 355 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_arithmetic : public __traitor< __is_integer< _Tp> , __is_floating< _Tp> > {
# 357 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 362 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 363 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_scalar : public __traitor< __is_arithmetic< _Tp> , __is_pointer< _Tp> > {
# 365 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 370 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 371 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_char {
# 373 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value};
# 374 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 375 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 378 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_char< char> {
# 380 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 381 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 382 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 386 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_char< wchar_t> {
# 388 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 389 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 390 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 393 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 394 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_byte {
# 396 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value};
# 397 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 398 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 401 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_byte< char> {
# 403 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 404 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 405 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 408 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_byte< signed char> {
# 410 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 411 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 412 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 415 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_byte< unsigned char> {
# 417 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 418 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 419 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 424 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 425 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_move_iterator {
# 427 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value};
# 428 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 429 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 444 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
}
# 37 "/usr/include/c++/5/ext/type_traits.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 42 "/usr/include/c++/5/ext/type_traits.h" 3
template< bool , class >
# 43 "/usr/include/c++/5/ext/type_traits.h" 3
struct __enable_if {
# 44 "/usr/include/c++/5/ext/type_traits.h" 3
};
# 46 "/usr/include/c++/5/ext/type_traits.h" 3
template< class _Tp>
# 47 "/usr/include/c++/5/ext/type_traits.h" 3
struct __enable_if< true, _Tp> {
# 48 "/usr/include/c++/5/ext/type_traits.h" 3
typedef _Tp __type; };
# 52 "/usr/include/c++/5/ext/type_traits.h" 3
template< bool _Cond, class _Iftrue, class _Iffalse>
# 53 "/usr/include/c++/5/ext/type_traits.h" 3
struct __conditional_type {
# 54 "/usr/include/c++/5/ext/type_traits.h" 3
typedef _Iftrue __type; };
# 56 "/usr/include/c++/5/ext/type_traits.h" 3
template< class _Iftrue, class _Iffalse>
# 57 "/usr/include/c++/5/ext/type_traits.h" 3
struct __conditional_type< false, _Iftrue, _Iffalse> {
# 58 "/usr/include/c++/5/ext/type_traits.h" 3
typedef _Iffalse __type; };
# 62 "/usr/include/c++/5/ext/type_traits.h" 3
template< class _Tp>
# 63 "/usr/include/c++/5/ext/type_traits.h" 3
struct __add_unsigned {
# 66 "/usr/include/c++/5/ext/type_traits.h" 3
private: typedef __enable_if< std::__is_integer< _Tp> ::__value, _Tp> __if_type;
# 69 "/usr/include/c++/5/ext/type_traits.h" 3
public: typedef typename __enable_if< std::__is_integer< _Tp> ::__value, _Tp> ::__type __type;
# 70 "/usr/include/c++/5/ext/type_traits.h" 3
};
# 73 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __add_unsigned< char> {
# 74 "/usr/include/c++/5/ext/type_traits.h" 3
typedef unsigned char __type; };
# 77 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __add_unsigned< signed char> {
# 78 "/usr/include/c++/5/ext/type_traits.h" 3
typedef unsigned char __type; };
# 81 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __add_unsigned< short> {
# 82 "/usr/include/c++/5/ext/type_traits.h" 3
typedef unsigned short __type; };
# 85 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __add_unsigned< int> {
# 86 "/usr/include/c++/5/ext/type_traits.h" 3
typedef unsigned __type; };
# 89 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __add_unsigned< long> {
# 90 "/usr/include/c++/5/ext/type_traits.h" 3
typedef unsigned long __type; };
# 93 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __add_unsigned< long long> {
# 94 "/usr/include/c++/5/ext/type_traits.h" 3
typedef unsigned long long __type; };
# 98 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __add_unsigned< bool> ;
# 101 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __add_unsigned< wchar_t> ;
# 105 "/usr/include/c++/5/ext/type_traits.h" 3
template< class _Tp>
# 106 "/usr/include/c++/5/ext/type_traits.h" 3
struct __remove_unsigned {
# 109 "/usr/include/c++/5/ext/type_traits.h" 3
private: typedef __enable_if< std::__is_integer< _Tp> ::__value, _Tp> __if_type;
# 112 "/usr/include/c++/5/ext/type_traits.h" 3
public: typedef typename __enable_if< std::__is_integer< _Tp> ::__value, _Tp> ::__type __type;
# 113 "/usr/include/c++/5/ext/type_traits.h" 3
};
# 116 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __remove_unsigned< char> {
# 117 "/usr/include/c++/5/ext/type_traits.h" 3
typedef signed char __type; };
# 120 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned char> {
# 121 "/usr/include/c++/5/ext/type_traits.h" 3
typedef signed char __type; };
# 124 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned short> {
# 125 "/usr/include/c++/5/ext/type_traits.h" 3
typedef short __type; };
# 128 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned> {
# 129 "/usr/include/c++/5/ext/type_traits.h" 3
typedef int __type; };
# 132 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned long> {
# 133 "/usr/include/c++/5/ext/type_traits.h" 3
typedef long __type; };
# 136 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned long long> {
# 137 "/usr/include/c++/5/ext/type_traits.h" 3
typedef long long __type; };
# 141 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __remove_unsigned< bool> ;
# 144 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __remove_unsigned< wchar_t> ;
# 148 "/usr/include/c++/5/ext/type_traits.h" 3
template< class _Type> inline bool
# 150 "/usr/include/c++/5/ext/type_traits.h" 3
__is_null_pointer(_Type *__ptr)
# 151 "/usr/include/c++/5/ext/type_traits.h" 3
{ return __ptr == 0; }
# 153 "/usr/include/c++/5/ext/type_traits.h" 3
template< class _Type> inline bool
# 155 "/usr/include/c++/5/ext/type_traits.h" 3
__is_null_pointer(_Type)
# 156 "/usr/include/c++/5/ext/type_traits.h" 3
{ return false; }
# 165 "/usr/include/c++/5/ext/type_traits.h" 3
template< class _Tp, bool = std::__is_integer< _Tp> ::__value>
# 166 "/usr/include/c++/5/ext/type_traits.h" 3
struct __promote {
# 167 "/usr/include/c++/5/ext/type_traits.h" 3
typedef double __type; };
# 172 "/usr/include/c++/5/ext/type_traits.h" 3
template< class _Tp>
# 173 "/usr/include/c++/5/ext/type_traits.h" 3
struct __promote< _Tp, false> {
# 174 "/usr/include/c++/5/ext/type_traits.h" 3
};
# 177 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __promote< long double> {
# 178 "/usr/include/c++/5/ext/type_traits.h" 3
typedef long double __type; };
# 181 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __promote< double> {
# 182 "/usr/include/c++/5/ext/type_traits.h" 3
typedef double __type; };
# 185 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __promote< float> {
# 186 "/usr/include/c++/5/ext/type_traits.h" 3
typedef float __type; };
# 188 "/usr/include/c++/5/ext/type_traits.h" 3
template< class _Tp, class _Up, class
# 189 "/usr/include/c++/5/ext/type_traits.h" 3
_Tp2 = typename __promote< _Tp> ::__type, class
# 190 "/usr/include/c++/5/ext/type_traits.h" 3
_Up2 = typename __promote< _Up> ::__type>
# 191 "/usr/include/c++/5/ext/type_traits.h" 3
struct __promote_2 {
# 193 "/usr/include/c++/5/ext/type_traits.h" 3
typedef __typeof__(_Tp2() + _Up2()) __type;
# 194 "/usr/include/c++/5/ext/type_traits.h" 3
};
# 196 "/usr/include/c++/5/ext/type_traits.h" 3
template< class _Tp, class _Up, class _Vp, class
# 197 "/usr/include/c++/5/ext/type_traits.h" 3
_Tp2 = typename __promote< _Tp> ::__type, class
# 198 "/usr/include/c++/5/ext/type_traits.h" 3
_Up2 = typename __promote< _Up> ::__type, class
# 199 "/usr/include/c++/5/ext/type_traits.h" 3
_Vp2 = typename __promote< _Vp> ::__type>
# 200 "/usr/include/c++/5/ext/type_traits.h" 3
struct __promote_3 {
# 202 "/usr/include/c++/5/ext/type_traits.h" 3
typedef __typeof__((_Tp2() + _Up2()) + _Vp2()) __type;
# 203 "/usr/include/c++/5/ext/type_traits.h" 3
};
# 205 "/usr/include/c++/5/ext/type_traits.h" 3
template< class _Tp, class _Up, class _Vp, class _Wp, class
# 206 "/usr/include/c++/5/ext/type_traits.h" 3
_Tp2 = typename __promote< _Tp> ::__type, class
# 207 "/usr/include/c++/5/ext/type_traits.h" 3
_Up2 = typename __promote< _Up> ::__type, class
# 208 "/usr/include/c++/5/ext/type_traits.h" 3
_Vp2 = typename __promote< _Vp> ::__type, class
# 209 "/usr/include/c++/5/ext/type_traits.h" 3
_Wp2 = typename __promote< _Wp> ::__type>
# 210 "/usr/include/c++/5/ext/type_traits.h" 3
struct __promote_4 {
# 212 "/usr/include/c++/5/ext/type_traits.h" 3
typedef __typeof__(((_Tp2() + _Up2()) + _Vp2()) + _Wp2()) __type;
# 213 "/usr/include/c++/5/ext/type_traits.h" 3
};
# 216 "/usr/include/c++/5/ext/type_traits.h" 3
}
# 75 "/usr/include/c++/5/cmath" 3
namespace std __attribute((__visibility__("default"))) {
# 81 "/usr/include/c++/5/cmath" 3
inline double abs(double __x)
# 82 "/usr/include/c++/5/cmath" 3
{ return __builtin_fabs(__x); }
# 87 "/usr/include/c++/5/cmath" 3
inline float abs(float __x)
# 88 "/usr/include/c++/5/cmath" 3
{ return __builtin_fabsf(__x); }
# 91 "/usr/include/c++/5/cmath" 3
inline long double abs(long double __x)
# 92 "/usr/include/c++/5/cmath" 3
{ return __builtin_fabsl(__x); }
# 95 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 99 "/usr/include/c++/5/cmath" 3
abs(_Tp __x)
# 100 "/usr/include/c++/5/cmath" 3
{ return __builtin_fabs(__x); }
# 102 "/usr/include/c++/5/cmath" 3
using ::acos;
# 106 "/usr/include/c++/5/cmath" 3
inline float acos(float __x)
# 107 "/usr/include/c++/5/cmath" 3
{ return __builtin_acosf(__x); }
# 110 "/usr/include/c++/5/cmath" 3
inline long double acos(long double __x)
# 111 "/usr/include/c++/5/cmath" 3
{ return __builtin_acosl(__x); }
# 114 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 118 "/usr/include/c++/5/cmath" 3
acos(_Tp __x)
# 119 "/usr/include/c++/5/cmath" 3
{ return __builtin_acos(__x); }
# 121 "/usr/include/c++/5/cmath" 3
using ::asin;
# 125 "/usr/include/c++/5/cmath" 3
inline float asin(float __x)
# 126 "/usr/include/c++/5/cmath" 3
{ return __builtin_asinf(__x); }
# 129 "/usr/include/c++/5/cmath" 3
inline long double asin(long double __x)
# 130 "/usr/include/c++/5/cmath" 3
{ return __builtin_asinl(__x); }
# 133 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 137 "/usr/include/c++/5/cmath" 3
asin(_Tp __x)
# 138 "/usr/include/c++/5/cmath" 3
{ return __builtin_asin(__x); }
# 140 "/usr/include/c++/5/cmath" 3
using ::atan;
# 144 "/usr/include/c++/5/cmath" 3
inline float atan(float __x)
# 145 "/usr/include/c++/5/cmath" 3
{ return __builtin_atanf(__x); }
# 148 "/usr/include/c++/5/cmath" 3
inline long double atan(long double __x)
# 149 "/usr/include/c++/5/cmath" 3
{ return __builtin_atanl(__x); }
# 152 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 156 "/usr/include/c++/5/cmath" 3
atan(_Tp __x)
# 157 "/usr/include/c++/5/cmath" 3
{ return __builtin_atan(__x); }
# 159 "/usr/include/c++/5/cmath" 3
using ::atan2;
# 163 "/usr/include/c++/5/cmath" 3
inline float atan2(float __y, float __x)
# 164 "/usr/include/c++/5/cmath" 3
{ return __builtin_atan2f(__y, __x); }
# 167 "/usr/include/c++/5/cmath" 3
inline long double atan2(long double __y, long double __x)
# 168 "/usr/include/c++/5/cmath" 3
{ return __builtin_atan2l(__y, __x); }
# 171 "/usr/include/c++/5/cmath" 3
template< class _Tp, class _Up> inline typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type
# 174 "/usr/include/c++/5/cmath" 3
atan2(_Tp __y, _Up __x)
# 175 "/usr/include/c++/5/cmath" 3
{
# 176 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 177 "/usr/include/c++/5/cmath" 3
return atan2((__type)__y, (__type)__x);
# 178 "/usr/include/c++/5/cmath" 3
}
# 180 "/usr/include/c++/5/cmath" 3
using ::ceil;
# 184 "/usr/include/c++/5/cmath" 3
inline float ceil(float __x)
# 185 "/usr/include/c++/5/cmath" 3
{ return __builtin_ceilf(__x); }
# 188 "/usr/include/c++/5/cmath" 3
inline long double ceil(long double __x)
# 189 "/usr/include/c++/5/cmath" 3
{ return __builtin_ceill(__x); }
# 192 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 196 "/usr/include/c++/5/cmath" 3
ceil(_Tp __x)
# 197 "/usr/include/c++/5/cmath" 3
{ return __builtin_ceil(__x); }
# 199 "/usr/include/c++/5/cmath" 3
using ::cos;
# 203 "/usr/include/c++/5/cmath" 3
inline float cos(float __x)
# 204 "/usr/include/c++/5/cmath" 3
{ return __builtin_cosf(__x); }
# 207 "/usr/include/c++/5/cmath" 3
inline long double cos(long double __x)
# 208 "/usr/include/c++/5/cmath" 3
{ return __builtin_cosl(__x); }
# 211 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 215 "/usr/include/c++/5/cmath" 3
cos(_Tp __x)
# 216 "/usr/include/c++/5/cmath" 3
{ return __builtin_cos(__x); }
# 218 "/usr/include/c++/5/cmath" 3
using ::cosh;
# 222 "/usr/include/c++/5/cmath" 3
inline float cosh(float __x)
# 223 "/usr/include/c++/5/cmath" 3
{ return __builtin_coshf(__x); }
# 226 "/usr/include/c++/5/cmath" 3
inline long double cosh(long double __x)
# 227 "/usr/include/c++/5/cmath" 3
{ return __builtin_coshl(__x); }
# 230 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 234 "/usr/include/c++/5/cmath" 3
cosh(_Tp __x)
# 235 "/usr/include/c++/5/cmath" 3
{ return __builtin_cosh(__x); }
# 237 "/usr/include/c++/5/cmath" 3
using ::exp;
# 241 "/usr/include/c++/5/cmath" 3
inline float exp(float __x)
# 242 "/usr/include/c++/5/cmath" 3
{ return __builtin_expf(__x); }
# 245 "/usr/include/c++/5/cmath" 3
inline long double exp(long double __x)
# 246 "/usr/include/c++/5/cmath" 3
{ return __builtin_expl(__x); }
# 249 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 253 "/usr/include/c++/5/cmath" 3
exp(_Tp __x)
# 254 "/usr/include/c++/5/cmath" 3
{ return __builtin_exp(__x); }
# 256 "/usr/include/c++/5/cmath" 3
using ::fabs;
# 260 "/usr/include/c++/5/cmath" 3
inline float fabs(float __x)
# 261 "/usr/include/c++/5/cmath" 3
{ return __builtin_fabsf(__x); }
# 264 "/usr/include/c++/5/cmath" 3
inline long double fabs(long double __x)
# 265 "/usr/include/c++/5/cmath" 3
{ return __builtin_fabsl(__x); }
# 268 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 272 "/usr/include/c++/5/cmath" 3
fabs(_Tp __x)
# 273 "/usr/include/c++/5/cmath" 3
{ return __builtin_fabs(__x); }
# 275 "/usr/include/c++/5/cmath" 3
using ::floor;
# 279 "/usr/include/c++/5/cmath" 3
inline float floor(float __x)
# 280 "/usr/include/c++/5/cmath" 3
{ return __builtin_floorf(__x); }
# 283 "/usr/include/c++/5/cmath" 3
inline long double floor(long double __x)
# 284 "/usr/include/c++/5/cmath" 3
{ return __builtin_floorl(__x); }
# 287 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 291 "/usr/include/c++/5/cmath" 3
floor(_Tp __x)
# 292 "/usr/include/c++/5/cmath" 3
{ return __builtin_floor(__x); }
# 294 "/usr/include/c++/5/cmath" 3
using ::fmod;
# 298 "/usr/include/c++/5/cmath" 3
inline float fmod(float __x, float __y)
# 299 "/usr/include/c++/5/cmath" 3
{ return __builtin_fmodf(__x, __y); }
# 302 "/usr/include/c++/5/cmath" 3
inline long double fmod(long double __x, long double __y)
# 303 "/usr/include/c++/5/cmath" 3
{ return __builtin_fmodl(__x, __y); }
# 306 "/usr/include/c++/5/cmath" 3
template< class _Tp, class _Up> inline typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type
# 309 "/usr/include/c++/5/cmath" 3
fmod(_Tp __x, _Up __y)
# 310 "/usr/include/c++/5/cmath" 3
{
# 311 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 312 "/usr/include/c++/5/cmath" 3
return fmod((__type)__x, (__type)__y);
# 313 "/usr/include/c++/5/cmath" 3
}
# 315 "/usr/include/c++/5/cmath" 3
using ::frexp;
# 319 "/usr/include/c++/5/cmath" 3
inline float frexp(float __x, int *__exp)
# 320 "/usr/include/c++/5/cmath" 3
{ return __builtin_frexpf(__x, __exp); }
# 323 "/usr/include/c++/5/cmath" 3
inline long double frexp(long double __x, int *__exp)
# 324 "/usr/include/c++/5/cmath" 3
{ return __builtin_frexpl(__x, __exp); }
# 327 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 331 "/usr/include/c++/5/cmath" 3
frexp(_Tp __x, int *__exp)
# 332 "/usr/include/c++/5/cmath" 3
{ return __builtin_frexp(__x, __exp); }
# 334 "/usr/include/c++/5/cmath" 3
using ::ldexp;
# 338 "/usr/include/c++/5/cmath" 3
inline float ldexp(float __x, int __exp)
# 339 "/usr/include/c++/5/cmath" 3
{ return __builtin_ldexpf(__x, __exp); }
# 342 "/usr/include/c++/5/cmath" 3
inline long double ldexp(long double __x, int __exp)
# 343 "/usr/include/c++/5/cmath" 3
{ return __builtin_ldexpl(__x, __exp); }
# 346 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 350 "/usr/include/c++/5/cmath" 3
ldexp(_Tp __x, int __exp)
# 351 "/usr/include/c++/5/cmath" 3
{ return __builtin_ldexp(__x, __exp); }
# 353 "/usr/include/c++/5/cmath" 3
using ::log;
# 357 "/usr/include/c++/5/cmath" 3
inline float log(float __x)
# 358 "/usr/include/c++/5/cmath" 3
{ return __builtin_logf(__x); }
# 361 "/usr/include/c++/5/cmath" 3
inline long double log(long double __x)
# 362 "/usr/include/c++/5/cmath" 3
{ return __builtin_logl(__x); }
# 365 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 369 "/usr/include/c++/5/cmath" 3
log(_Tp __x)
# 370 "/usr/include/c++/5/cmath" 3
{ return __builtin_log(__x); }
# 372 "/usr/include/c++/5/cmath" 3
using ::log10;
# 376 "/usr/include/c++/5/cmath" 3
inline float log10(float __x)
# 377 "/usr/include/c++/5/cmath" 3
{ return __builtin_log10f(__x); }
# 380 "/usr/include/c++/5/cmath" 3
inline long double log10(long double __x)
# 381 "/usr/include/c++/5/cmath" 3
{ return __builtin_log10l(__x); }
# 384 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 388 "/usr/include/c++/5/cmath" 3
log10(_Tp __x)
# 389 "/usr/include/c++/5/cmath" 3
{ return __builtin_log10(__x); }
# 391 "/usr/include/c++/5/cmath" 3
using ::modf;
# 395 "/usr/include/c++/5/cmath" 3
inline float modf(float __x, float *__iptr)
# 396 "/usr/include/c++/5/cmath" 3
{ return __builtin_modff(__x, __iptr); }
# 399 "/usr/include/c++/5/cmath" 3
inline long double modf(long double __x, long double *__iptr)
# 400 "/usr/include/c++/5/cmath" 3
{ return __builtin_modfl(__x, __iptr); }
# 403 "/usr/include/c++/5/cmath" 3
using ::pow;
# 407 "/usr/include/c++/5/cmath" 3
inline float pow(float __x, float __y)
# 408 "/usr/include/c++/5/cmath" 3
{ return __builtin_powf(__x, __y); }
# 411 "/usr/include/c++/5/cmath" 3
inline long double pow(long double __x, long double __y)
# 412 "/usr/include/c++/5/cmath" 3
{ return __builtin_powl(__x, __y); }
# 418 "/usr/include/c++/5/cmath" 3
inline double pow(double __x, int __i)
# 419 "/usr/include/c++/5/cmath" 3
{ return __builtin_powi(__x, __i); }
# 422 "/usr/include/c++/5/cmath" 3
inline float pow(float __x, int __n)
# 423 "/usr/include/c++/5/cmath" 3
{ return __builtin_powif(__x, __n); }
# 426 "/usr/include/c++/5/cmath" 3
inline long double pow(long double __x, int __n)
# 427 "/usr/include/c++/5/cmath" 3
{ return __builtin_powil(__x, __n); }
# 431 "/usr/include/c++/5/cmath" 3
template< class _Tp, class _Up> inline typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type
# 434 "/usr/include/c++/5/cmath" 3
pow(_Tp __x, _Up __y)
# 435 "/usr/include/c++/5/cmath" 3
{
# 436 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 437 "/usr/include/c++/5/cmath" 3
return pow((__type)__x, (__type)__y);
# 438 "/usr/include/c++/5/cmath" 3
}
# 440 "/usr/include/c++/5/cmath" 3
using ::sin;
# 444 "/usr/include/c++/5/cmath" 3
inline float sin(float __x)
# 445 "/usr/include/c++/5/cmath" 3
{ return __builtin_sinf(__x); }
# 448 "/usr/include/c++/5/cmath" 3
inline long double sin(long double __x)
# 449 "/usr/include/c++/5/cmath" 3
{ return __builtin_sinl(__x); }
# 452 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 456 "/usr/include/c++/5/cmath" 3
sin(_Tp __x)
# 457 "/usr/include/c++/5/cmath" 3
{ return __builtin_sin(__x); }
# 459 "/usr/include/c++/5/cmath" 3
using ::sinh;
# 463 "/usr/include/c++/5/cmath" 3
inline float sinh(float __x)
# 464 "/usr/include/c++/5/cmath" 3
{ return __builtin_sinhf(__x); }
# 467 "/usr/include/c++/5/cmath" 3
inline long double sinh(long double __x)
# 468 "/usr/include/c++/5/cmath" 3
{ return __builtin_sinhl(__x); }
# 471 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 475 "/usr/include/c++/5/cmath" 3
sinh(_Tp __x)
# 476 "/usr/include/c++/5/cmath" 3
{ return __builtin_sinh(__x); }
# 478 "/usr/include/c++/5/cmath" 3
using ::sqrt;
# 482 "/usr/include/c++/5/cmath" 3
inline float sqrt(float __x)
# 483 "/usr/include/c++/5/cmath" 3
{ return __builtin_sqrtf(__x); }
# 486 "/usr/include/c++/5/cmath" 3
inline long double sqrt(long double __x)
# 487 "/usr/include/c++/5/cmath" 3
{ return __builtin_sqrtl(__x); }
# 490 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 494 "/usr/include/c++/5/cmath" 3
sqrt(_Tp __x)
# 495 "/usr/include/c++/5/cmath" 3
{ return __builtin_sqrt(__x); }
# 497 "/usr/include/c++/5/cmath" 3
using ::tan;
# 501 "/usr/include/c++/5/cmath" 3
inline float tan(float __x)
# 502 "/usr/include/c++/5/cmath" 3
{ return __builtin_tanf(__x); }
# 505 "/usr/include/c++/5/cmath" 3
inline long double tan(long double __x)
# 506 "/usr/include/c++/5/cmath" 3
{ return __builtin_tanl(__x); }
# 509 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 513 "/usr/include/c++/5/cmath" 3
tan(_Tp __x)
# 514 "/usr/include/c++/5/cmath" 3
{ return __builtin_tan(__x); }
# 516 "/usr/include/c++/5/cmath" 3
using ::tanh;
# 520 "/usr/include/c++/5/cmath" 3
inline float tanh(float __x)
# 521 "/usr/include/c++/5/cmath" 3
{ return __builtin_tanhf(__x); }
# 524 "/usr/include/c++/5/cmath" 3
inline long double tanh(long double __x)
# 525 "/usr/include/c++/5/cmath" 3
{ return __builtin_tanhl(__x); }
# 528 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 532 "/usr/include/c++/5/cmath" 3
tanh(_Tp __x)
# 533 "/usr/include/c++/5/cmath" 3
{ return __builtin_tanh(__x); }
# 536 "/usr/include/c++/5/cmath" 3
}
# 555 "/usr/include/c++/5/cmath" 3
namespace std __attribute((__visibility__("default"))) {
# 855 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_arithmetic< _Tp> ::__value, int> ::__type
# 858 "/usr/include/c++/5/cmath" 3
fpclassify(_Tp __f)
# 859 "/usr/include/c++/5/cmath" 3
{
# 860 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote< _Tp> ::__type __type;
# 861 "/usr/include/c++/5/cmath" 3
return __builtin_fpclassify(0, 1, 4, 3, 2, (__type)__f);
# 863 "/usr/include/c++/5/cmath" 3
}
# 865 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_arithmetic< _Tp> ::__value, int> ::__type
# 868 "/usr/include/c++/5/cmath" 3
isfinite(_Tp __f)
# 869 "/usr/include/c++/5/cmath" 3
{
# 870 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote< _Tp> ::__type __type;
# 871 "/usr/include/c++/5/cmath" 3
return __builtin_isfinite((__type)__f);
# 872 "/usr/include/c++/5/cmath" 3
}
# 874 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_arithmetic< _Tp> ::__value, int> ::__type
# 877 "/usr/include/c++/5/cmath" 3
isinf(_Tp __f)
# 878 "/usr/include/c++/5/cmath" 3
{
# 879 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote< _Tp> ::__type __type;
# 880 "/usr/include/c++/5/cmath" 3
return __builtin_isinf((__type)__f);
# 881 "/usr/include/c++/5/cmath" 3
}
# 883 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_arithmetic< _Tp> ::__value, int> ::__type
# 886 "/usr/include/c++/5/cmath" 3
isnan(_Tp __f)
# 887 "/usr/include/c++/5/cmath" 3
{
# 888 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote< _Tp> ::__type __type;
# 889 "/usr/include/c++/5/cmath" 3
return __builtin_isnan((__type)__f);
# 890 "/usr/include/c++/5/cmath" 3
}
# 892 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_arithmetic< _Tp> ::__value, int> ::__type
# 895 "/usr/include/c++/5/cmath" 3
isnormal(_Tp __f)
# 896 "/usr/include/c++/5/cmath" 3
{
# 897 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote< _Tp> ::__type __type;
# 898 "/usr/include/c++/5/cmath" 3
return __builtin_isnormal((__type)__f);
# 899 "/usr/include/c++/5/cmath" 3
}
# 901 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_arithmetic< _Tp> ::__value, int> ::__type
# 904 "/usr/include/c++/5/cmath" 3
signbit(_Tp __f)
# 905 "/usr/include/c++/5/cmath" 3
{
# 906 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote< _Tp> ::__type __type;
# 907 "/usr/include/c++/5/cmath" 3
return (sizeof(__type) == sizeof(float)) ? __builtin_signbitf((__type)__f) : ((sizeof(__type) == sizeof(double)) ? __builtin_signbit((__type)__f) : __builtin_signbitl((__type)__f));
# 912 "/usr/include/c++/5/cmath" 3
}
# 914 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_arithmetic< _Tp> ::__value, int> ::__type
# 917 "/usr/include/c++/5/cmath" 3
isgreater(_Tp __f1, _Tp __f2)
# 918 "/usr/include/c++/5/cmath" 3
{
# 919 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote< _Tp> ::__type __type;
# 920 "/usr/include/c++/5/cmath" 3
return __builtin_isgreater((__type)__f1, (__type)__f2);
# 921 "/usr/include/c++/5/cmath" 3
}
# 923 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_arithmetic< _Tp> ::__value, int> ::__type
# 926 "/usr/include/c++/5/cmath" 3
isgreaterequal(_Tp __f1, _Tp __f2)
# 927 "/usr/include/c++/5/cmath" 3
{
# 928 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote< _Tp> ::__type __type;
# 929 "/usr/include/c++/5/cmath" 3
return __builtin_isgreaterequal((__type)__f1, (__type)__f2);
# 930 "/usr/include/c++/5/cmath" 3
}
# 932 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_arithmetic< _Tp> ::__value, int> ::__type
# 935 "/usr/include/c++/5/cmath" 3
isless(_Tp __f1, _Tp __f2)
# 936 "/usr/include/c++/5/cmath" 3
{
# 937 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote< _Tp> ::__type __type;
# 938 "/usr/include/c++/5/cmath" 3
return __builtin_isless((__type)__f1, (__type)__f2);
# 939 "/usr/include/c++/5/cmath" 3
}
# 941 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_arithmetic< _Tp> ::__value, int> ::__type
# 944 "/usr/include/c++/5/cmath" 3
islessequal(_Tp __f1, _Tp __f2)
# 945 "/usr/include/c++/5/cmath" 3
{
# 946 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote< _Tp> ::__type __type;
# 947 "/usr/include/c++/5/cmath" 3
return __builtin_islessequal((__type)__f1, (__type)__f2);
# 948 "/usr/include/c++/5/cmath" 3
}
# 950 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_arithmetic< _Tp> ::__value, int> ::__type
# 953 "/usr/include/c++/5/cmath" 3
islessgreater(_Tp __f1, _Tp __f2)
# 954 "/usr/include/c++/5/cmath" 3
{
# 955 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote< _Tp> ::__type __type;
# 956 "/usr/include/c++/5/cmath" 3
return __builtin_islessgreater((__type)__f1, (__type)__f2);
# 957 "/usr/include/c++/5/cmath" 3
}
# 959 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_arithmetic< _Tp> ::__value, int> ::__type
# 962 "/usr/include/c++/5/cmath" 3
isunordered(_Tp __f1, _Tp __f2)
# 963 "/usr/include/c++/5/cmath" 3
{
# 964 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote< _Tp> ::__type __type;
# 965 "/usr/include/c++/5/cmath" 3
return __builtin_isunordered((__type)__f1, (__type)__f2);
# 966 "/usr/include/c++/5/cmath" 3
}
# 971 "/usr/include/c++/5/cmath" 3
}
# 114 "/usr/include/c++/5/cstdlib" 3
namespace std __attribute((__visibility__("default"))) {
# 118 "/usr/include/c++/5/cstdlib" 3
using ::div_t;
# 119 "/usr/include/c++/5/cstdlib" 3
using ::ldiv_t;
# 121 "/usr/include/c++/5/cstdlib" 3
using ::abort;
# 122 "/usr/include/c++/5/cstdlib" 3
using ::abs;
# 123 "/usr/include/c++/5/cstdlib" 3
using ::atexit;
# 129 "/usr/include/c++/5/cstdlib" 3
using ::atof;
# 130 "/usr/include/c++/5/cstdlib" 3
using ::atoi;
# 131 "/usr/include/c++/5/cstdlib" 3
using ::atol;
# 132 "/usr/include/c++/5/cstdlib" 3
using ::bsearch;
# 133 "/usr/include/c++/5/cstdlib" 3
using ::calloc;
# 134 "/usr/include/c++/5/cstdlib" 3
using ::div;
# 135 "/usr/include/c++/5/cstdlib" 3
using ::exit;
# 136 "/usr/include/c++/5/cstdlib" 3
using ::free;
# 137 "/usr/include/c++/5/cstdlib" 3
using ::getenv;
# 138 "/usr/include/c++/5/cstdlib" 3
using ::labs;
# 139 "/usr/include/c++/5/cstdlib" 3
using ::ldiv;
# 140 "/usr/include/c++/5/cstdlib" 3
using ::malloc;
# 142 "/usr/include/c++/5/cstdlib" 3
using ::mblen;
# 143 "/usr/include/c++/5/cstdlib" 3
using ::mbstowcs;
# 144 "/usr/include/c++/5/cstdlib" 3
using ::mbtowc;
# 146 "/usr/include/c++/5/cstdlib" 3
using ::qsort;
# 152 "/usr/include/c++/5/cstdlib" 3
using ::rand;
# 153 "/usr/include/c++/5/cstdlib" 3
using ::realloc;
# 154 "/usr/include/c++/5/cstdlib" 3
using ::srand;
# 155 "/usr/include/c++/5/cstdlib" 3
using ::strtod;
# 156 "/usr/include/c++/5/cstdlib" 3
using ::strtol;
# 157 "/usr/include/c++/5/cstdlib" 3
using ::strtoul;
# 158 "/usr/include/c++/5/cstdlib" 3
using ::system;
# 160 "/usr/include/c++/5/cstdlib" 3
using ::wcstombs;
# 161 "/usr/include/c++/5/cstdlib" 3
using ::wctomb;
# 166 "/usr/include/c++/5/cstdlib" 3
inline long abs(long __i) { return __builtin_labs(__i); }
# 169 "/usr/include/c++/5/cstdlib" 3
inline ldiv_t div(long __i, long __j) { return ldiv(__i, __j); }
# 174 "/usr/include/c++/5/cstdlib" 3
inline long long abs(long long __x) { return __builtin_llabs(__x); }
# 179 "/usr/include/c++/5/cstdlib" 3
inline __int128_t abs(__int128_t __x) { return (__x >= (0)) ? __x : (-__x); }
# 196 "/usr/include/c++/5/cstdlib" 3
}
# 209 "/usr/include/c++/5/cstdlib" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 214 "/usr/include/c++/5/cstdlib" 3
using ::lldiv_t;
# 220 "/usr/include/c++/5/cstdlib" 3
using ::_Exit;
# 224 "/usr/include/c++/5/cstdlib" 3
using ::llabs;
# 227 "/usr/include/c++/5/cstdlib" 3
inline lldiv_t div(long long __n, long long __d)
# 228 "/usr/include/c++/5/cstdlib" 3
{ lldiv_t __q; (__q.quot) = (__n / __d); (__q.rem) = (__n % __d); return __q; }
# 230 "/usr/include/c++/5/cstdlib" 3
using ::lldiv;
# 241 "/usr/include/c++/5/cstdlib" 3
using ::atoll;
# 242 "/usr/include/c++/5/cstdlib" 3
using ::strtoll;
# 243 "/usr/include/c++/5/cstdlib" 3
using ::strtoull;
# 245 "/usr/include/c++/5/cstdlib" 3
using ::strtof;
# 246 "/usr/include/c++/5/cstdlib" 3
using ::strtold;
# 249 "/usr/include/c++/5/cstdlib" 3
}
# 251 "/usr/include/c++/5/cstdlib" 3
namespace std {
# 254 "/usr/include/c++/5/cstdlib" 3
using __gnu_cxx::lldiv_t;
# 256 "/usr/include/c++/5/cstdlib" 3
using __gnu_cxx::_Exit;
# 258 "/usr/include/c++/5/cstdlib" 3
using __gnu_cxx::llabs;
# 259 "/usr/include/c++/5/cstdlib" 3
using __gnu_cxx::div;
# 260 "/usr/include/c++/5/cstdlib" 3
using __gnu_cxx::lldiv;
# 262 "/usr/include/c++/5/cstdlib" 3
using __gnu_cxx::atoll;
# 263 "/usr/include/c++/5/cstdlib" 3
using __gnu_cxx::strtof;
# 264 "/usr/include/c++/5/cstdlib" 3
using __gnu_cxx::strtoll;
# 265 "/usr/include/c++/5/cstdlib" 3
using __gnu_cxx::strtoull;
# 266 "/usr/include/c++/5/cstdlib" 3
using __gnu_cxx::strtold;
# 267 "/usr/include/c++/5/cstdlib" 3
}
# 8860 "/usr/include/math_functions.h" 3
__attribute((always_inline)) inline int signbit(float x);
# 8864 "/usr/include/math_functions.h" 3
__attribute((always_inline)) inline int signbit(double x);
# 8866 "/usr/include/math_functions.h" 3
__attribute((always_inline)) inline int signbit(long double x);
# 8868 "/usr/include/math_functions.h" 3
__attribute((always_inline)) inline int isfinite(float x);
# 8872 "/usr/include/math_functions.h" 3
__attribute((always_inline)) inline int isfinite(double x);
# 8874 "/usr/include/math_functions.h" 3
__attribute((always_inline)) inline int isfinite(long double x);
# 8876 "/usr/include/math_functions.h" 3
__attribute((always_inline)) inline int isnan(float x);
# 8880 "/usr/include/math_functions.h" 3
extern "C" { __attribute((always_inline)) inline int isnan(double x) throw(); }
# 8882 "/usr/include/math_functions.h" 3
__attribute((always_inline)) inline int isnan(long double x);
# 8884 "/usr/include/math_functions.h" 3
__attribute((always_inline)) inline int isinf(float x);
# 8888 "/usr/include/math_functions.h" 3
extern "C" { __attribute((always_inline)) inline int isinf(double x) throw(); }
# 8890 "/usr/include/math_functions.h" 3
__attribute((always_inline)) inline int isinf(long double x);
# 8936 "/usr/include/math_functions.h" 3
namespace std {
# 8938 "/usr/include/math_functions.h" 3
template< class T> extern T __pow_helper(T, int);
# 8939 "/usr/include/math_functions.h" 3
template< class T> extern T __cmath_power(T, unsigned);
# 8940 "/usr/include/math_functions.h" 3
}
# 8942 "/usr/include/math_functions.h" 3
using std::abs;
# 8943 "/usr/include/math_functions.h" 3
using std::fabs;
# 8944 "/usr/include/math_functions.h" 3
using std::ceil;
# 8945 "/usr/include/math_functions.h" 3
using std::floor;
# 8946 "/usr/include/math_functions.h" 3
using std::sqrt;
# 8947 "/usr/include/math_functions.h" 3
using std::pow;
# 8948 "/usr/include/math_functions.h" 3
using std::log;
# 8949 "/usr/include/math_functions.h" 3
using std::log10;
# 8950 "/usr/include/math_functions.h" 3
using std::fmod;
# 8951 "/usr/include/math_functions.h" 3
using std::modf;
# 8952 "/usr/include/math_functions.h" 3
using std::exp;
# 8953 "/usr/include/math_functions.h" 3
using std::frexp;
# 8954 "/usr/include/math_functions.h" 3
using std::ldexp;
# 8955 "/usr/include/math_functions.h" 3
using std::asin;
# 8956 "/usr/include/math_functions.h" 3
using std::sin;
# 8957 "/usr/include/math_functions.h" 3
using std::sinh;
# 8958 "/usr/include/math_functions.h" 3
using std::acos;
# 8959 "/usr/include/math_functions.h" 3
using std::cos;
# 8960 "/usr/include/math_functions.h" 3
using std::cosh;
# 8961 "/usr/include/math_functions.h" 3
using std::atan;
# 8962 "/usr/include/math_functions.h" 3
using std::atan2;
# 8963 "/usr/include/math_functions.h" 3
using std::tan;
# 8964 "/usr/include/math_functions.h" 3
using std::tanh;
# 9327 "/usr/include/math_functions.h" 3
namespace std {
# 9340 "/usr/include/math_functions.h" 3
extern inline long long abs(long long);
# 9346 "/usr/include/math_functions.h" 3
extern inline long abs(long);
# 9347 "/usr/include/math_functions.h" 3
extern inline float abs(float);
# 9348 "/usr/include/math_functions.h" 3
extern inline double abs(double);
# 9349 "/usr/include/math_functions.h" 3
extern inline float fabs(float);
# 9350 "/usr/include/math_functions.h" 3
extern inline float ceil(float);
# 9351 "/usr/include/math_functions.h" 3
extern inline float floor(float);
# 9352 "/usr/include/math_functions.h" 3
extern inline float sqrt(float);
# 9353 "/usr/include/math_functions.h" 3
extern inline float pow(float, float);
# 9362 "/usr/include/math_functions.h" 3
extern inline float pow(float, int);
# 9363 "/usr/include/math_functions.h" 3
extern inline double pow(double, int);
# 9368 "/usr/include/math_functions.h" 3
extern inline float log(float);
# 9369 "/usr/include/math_functions.h" 3
extern inline float log10(float);
# 9370 "/usr/include/math_functions.h" 3
extern inline float fmod(float, float);
# 9371 "/usr/include/math_functions.h" 3
extern inline float modf(float, float *);
# 9372 "/usr/include/math_functions.h" 3
extern inline float exp(float);
# 9373 "/usr/include/math_functions.h" 3
extern inline float frexp(float, int *);
# 9374 "/usr/include/math_functions.h" 3
extern inline float ldexp(float, int);
# 9375 "/usr/include/math_functions.h" 3
extern inline float asin(float);
# 9376 "/usr/include/math_functions.h" 3
extern inline float sin(float);
# 9377 "/usr/include/math_functions.h" 3
extern inline float sinh(float);
# 9378 "/usr/include/math_functions.h" 3
extern inline float acos(float);
# 9379 "/usr/include/math_functions.h" 3
extern inline float cos(float);
# 9380 "/usr/include/math_functions.h" 3
extern inline float cosh(float);
# 9381 "/usr/include/math_functions.h" 3
extern inline float atan(float);
# 9382 "/usr/include/math_functions.h" 3
extern inline float atan2(float, float);
# 9383 "/usr/include/math_functions.h" 3
extern inline float tan(float);
# 9384 "/usr/include/math_functions.h" 3
extern inline float tanh(float);
# 9441 "/usr/include/math_functions.h" 3
}
# 9493 "/usr/include/math_functions.h" 3
static inline float logb(float a);
# 9495 "/usr/include/math_functions.h" 3
static inline int ilogb(float a);
# 9497 "/usr/include/math_functions.h" 3
static inline float scalbn(float a, int b);
# 9499 "/usr/include/math_functions.h" 3
static inline float scalbln(float a, long b);
# 9501 "/usr/include/math_functions.h" 3
static inline float exp2(float a);
# 9503 "/usr/include/math_functions.h" 3
static inline float expm1(float a);
# 9505 "/usr/include/math_functions.h" 3
static inline float log2(float a);
# 9507 "/usr/include/math_functions.h" 3
static inline float log1p(float a);
# 9509 "/usr/include/math_functions.h" 3
static inline float acosh(float a);
# 9511 "/usr/include/math_functions.h" 3
static inline float asinh(float a);
# 9513 "/usr/include/math_functions.h" 3
static inline float atanh(float a);
# 9515 "/usr/include/math_functions.h" 3
static inline float hypot(float a, float b);
# 9517 "/usr/include/math_functions.h" 3
static inline float norm3d(float a, float b, float c);
# 9519 "/usr/include/math_functions.h" 3
static inline float norm4d(float a, float b, float c, float d);
# 9521 "/usr/include/math_functions.h" 3
static inline float cbrt(float a);
# 9523 "/usr/include/math_functions.h" 3
static inline float erf(float a);
# 9525 "/usr/include/math_functions.h" 3
static inline float erfc(float a);
# 9527 "/usr/include/math_functions.h" 3
static inline float lgamma(float a);
# 9529 "/usr/include/math_functions.h" 3
static inline float tgamma(float a);
# 9531 "/usr/include/math_functions.h" 3
static inline float copysign(float a, float b);
# 9533 "/usr/include/math_functions.h" 3
static inline float nextafter(float a, float b);
# 9535 "/usr/include/math_functions.h" 3
static inline float remainder(float a, float b);
# 9537 "/usr/include/math_functions.h" 3
static inline float remquo(float a, float b, int * quo);
# 9539 "/usr/include/math_functions.h" 3
static inline float round(float a);
# 9541 "/usr/include/math_functions.h" 3
static inline long lround(float a);
# 9543 "/usr/include/math_functions.h" 3
static inline long long llround(float a);
# 9545 "/usr/include/math_functions.h" 3
static inline float trunc(float a);
# 9547 "/usr/include/math_functions.h" 3
static inline float rint(float a);
# 9549 "/usr/include/math_functions.h" 3
static inline long lrint(float a);
# 9551 "/usr/include/math_functions.h" 3
static inline long long llrint(float a);
# 9553 "/usr/include/math_functions.h" 3
static inline float nearbyint(float a);
# 9555 "/usr/include/math_functions.h" 3
static inline float fdim(float a, float b);
# 9557 "/usr/include/math_functions.h" 3
static inline float fma(float a, float b, float c);
# 9559 "/usr/include/math_functions.h" 3
static inline float fmax(float a, float b);
# 9561 "/usr/include/math_functions.h" 3
static inline float fmin(float a, float b);
# 9601 "/usr/include/math_functions.h" 3
static inline float exp10(float a);
# 9603 "/usr/include/math_functions.h" 3
static inline float rsqrt(float a);
# 9605 "/usr/include/math_functions.h" 3
static inline float rcbrt(float a);
# 9607 "/usr/include/math_functions.h" 3
static inline float sinpi(float a);
# 9609 "/usr/include/math_functions.h" 3
static inline float cospi(float a);
# 9611 "/usr/include/math_functions.h" 3
static inline void sincospi(float a, float * sptr, float * cptr);
# 9613 "/usr/include/math_functions.h" 3
static inline void sincos(float a, float * sptr, float * cptr);
# 9615 "/usr/include/math_functions.h" 3
static inline float j0(float a);
# 9617 "/usr/include/math_functions.h" 3
static inline float j1(float a);
# 9619 "/usr/include/math_functions.h" 3
static inline float jn(int n, float a);
# 9621 "/usr/include/math_functions.h" 3
static inline float y0(float a);
# 9623 "/usr/include/math_functions.h" 3
static inline float y1(float a);
# 9625 "/usr/include/math_functions.h" 3
static inline float yn(int n, float a);
# 9627 "/usr/include/math_functions.h" 3
static inline float cyl_bessel_i0(float a);
# 9629 "/usr/include/math_functions.h" 3
static inline float cyl_bessel_i1(float a);
# 9631 "/usr/include/math_functions.h" 3
static inline float erfinv(float a);
# 9633 "/usr/include/math_functions.h" 3
static inline float erfcinv(float a);
# 9635 "/usr/include/math_functions.h" 3
static inline float normcdfinv(float a);
# 9637 "/usr/include/math_functions.h" 3
static inline float normcdf(float a);
# 9639 "/usr/include/math_functions.h" 3
static inline float erfcx(float a);
# 9641 "/usr/include/math_functions.h" 3
static inline double copysign(double a, float b);
# 9643 "/usr/include/math_functions.h" 3
static inline float copysign(float a, double b);
# 9645 "/usr/include/math_functions.h" 3
static inline unsigned min(unsigned a, unsigned b);
# 9647 "/usr/include/math_functions.h" 3
static inline unsigned min(int a, unsigned b);
# 9649 "/usr/include/math_functions.h" 3
static inline unsigned min(unsigned a, int b);
# 9651 "/usr/include/math_functions.h" 3
static inline long min(long a, long b);
# 9653 "/usr/include/math_functions.h" 3
static inline unsigned long min(unsigned long a, unsigned long b);
# 9655 "/usr/include/math_functions.h" 3
static inline unsigned long min(long a, unsigned long b);
# 9657 "/usr/include/math_functions.h" 3
static inline unsigned long min(unsigned long a, long b);
# 9659 "/usr/include/math_functions.h" 3
static inline long long min(long long a, long long b);
# 9661 "/usr/include/math_functions.h" 3
static inline unsigned long long min(unsigned long long a, unsigned long long b);
# 9663 "/usr/include/math_functions.h" 3
static inline unsigned long long min(long long a, unsigned long long b);
# 9665 "/usr/include/math_functions.h" 3
static inline unsigned long long min(unsigned long long a, long long b);
# 9667 "/usr/include/math_functions.h" 3
static inline float min(float a, float b);
# 9669 "/usr/include/math_functions.h" 3
static inline double min(double a, double b);
# 9671 "/usr/include/math_functions.h" 3
static inline double min(float a, double b);
# 9673 "/usr/include/math_functions.h" 3
static inline double min(double a, float b);
# 9675 "/usr/include/math_functions.h" 3
static inline unsigned max(unsigned a, unsigned b);
# 9677 "/usr/include/math_functions.h" 3
static inline unsigned max(int a, unsigned b);
# 9679 "/usr/include/math_functions.h" 3
static inline unsigned max(unsigned a, int b);
# 9681 "/usr/include/math_functions.h" 3
static inline long max(long a, long b);
# 9683 "/usr/include/math_functions.h" 3
static inline unsigned long max(unsigned long a, unsigned long b);
# 9685 "/usr/include/math_functions.h" 3
static inline unsigned long max(long a, unsigned long b);
# 9687 "/usr/include/math_functions.h" 3
static inline unsigned long max(unsigned long a, long b);
# 9689 "/usr/include/math_functions.h" 3
static inline long long max(long long a, long long b);
# 9691 "/usr/include/math_functions.h" 3
static inline unsigned long long max(unsigned long long a, unsigned long long b);
# 9693 "/usr/include/math_functions.h" 3
static inline unsigned long long max(long long a, unsigned long long b);
# 9695 "/usr/include/math_functions.h" 3
static inline unsigned long long max(unsigned long long a, long long b);
# 9697 "/usr/include/math_functions.h" 3
static inline float max(float a, float b);
# 9699 "/usr/include/math_functions.h" 3
static inline double max(double a, double b);
# 9701 "/usr/include/math_functions.h" 3
static inline double max(float a, double b);
# 9703 "/usr/include/math_functions.h" 3
static inline double max(double a, float b);
# 240 "/usr/include/math_functions.hpp" 3
__attribute((always_inline)) inline int signbit(float x) { return __signbitf(x); }
# 244 "/usr/include/math_functions.hpp" 3
__attribute((always_inline)) inline int signbit(double x) { return __signbit(x); }
# 246 "/usr/include/math_functions.hpp" 3
__attribute((always_inline)) inline int signbit(long double x) { return __signbitl(x); }
# 248 "/usr/include/math_functions.hpp" 3
__attribute((always_inline)) inline int isfinite(float x) { return __finitef(x); }
# 252 "/usr/include/math_functions.hpp" 3
__attribute((always_inline)) inline int isfinite(double x) { return __finite(x); }
# 254 "/usr/include/math_functions.hpp" 3
__attribute((always_inline)) inline int isfinite(long double x) { return __finitel(x); }
# 257 "/usr/include/math_functions.hpp" 3
__attribute((always_inline)) inline int isnan(float x) { return __isnanf(x); }
# 261 "/usr/include/math_functions.hpp" 3
__attribute((always_inline)) inline int isnan(double x) throw() { return __isnan(x); }
# 263 "/usr/include/math_functions.hpp" 3
__attribute((always_inline)) inline int isnan(long double x) { return __isnanl(x); }
# 265 "/usr/include/math_functions.hpp" 3
__attribute((always_inline)) inline int isinf(float x) { return __isinff(x); }
# 269 "/usr/include/math_functions.hpp" 3
__attribute((always_inline)) inline int isinf(double x) throw() { return __isinf(x); }
# 271 "/usr/include/math_functions.hpp" 3
__attribute((always_inline)) inline int isinf(long double x) { return __isinfl(x); }
# 462 "/usr/include/math_functions.hpp" 3
static inline float logb(float a)
# 463 "/usr/include/math_functions.hpp" 3
{
# 464 "/usr/include/math_functions.hpp" 3
return logbf(a);
# 465 "/usr/include/math_functions.hpp" 3
}
# 467 "/usr/include/math_functions.hpp" 3
static inline int ilogb(float a)
# 468 "/usr/include/math_functions.hpp" 3
{
# 469 "/usr/include/math_functions.hpp" 3
return ilogbf(a);
# 470 "/usr/include/math_functions.hpp" 3
}
# 472 "/usr/include/math_functions.hpp" 3
static inline float scalbn(float a, int b)
# 473 "/usr/include/math_functions.hpp" 3
{
# 474 "/usr/include/math_functions.hpp" 3
return scalbnf(a, b);
# 475 "/usr/include/math_functions.hpp" 3
}
# 477 "/usr/include/math_functions.hpp" 3
static inline float scalbln(float a, long b)
# 478 "/usr/include/math_functions.hpp" 3
{
# 479 "/usr/include/math_functions.hpp" 3
return scalblnf(a, b);
# 480 "/usr/include/math_functions.hpp" 3
}
# 482 "/usr/include/math_functions.hpp" 3
static inline float exp2(float a)
# 483 "/usr/include/math_functions.hpp" 3
{
# 484 "/usr/include/math_functions.hpp" 3
return exp2f(a);
# 485 "/usr/include/math_functions.hpp" 3
}
# 487 "/usr/include/math_functions.hpp" 3
static inline float expm1(float a)
# 488 "/usr/include/math_functions.hpp" 3
{
# 489 "/usr/include/math_functions.hpp" 3
return expm1f(a);
# 490 "/usr/include/math_functions.hpp" 3
}
# 492 "/usr/include/math_functions.hpp" 3
static inline float log2(float a)
# 493 "/usr/include/math_functions.hpp" 3
{
# 494 "/usr/include/math_functions.hpp" 3
return log2f(a);
# 495 "/usr/include/math_functions.hpp" 3
}
# 497 "/usr/include/math_functions.hpp" 3
static inline float log1p(float a)
# 498 "/usr/include/math_functions.hpp" 3
{
# 499 "/usr/include/math_functions.hpp" 3
return log1pf(a);
# 500 "/usr/include/math_functions.hpp" 3
}
# 502 "/usr/include/math_functions.hpp" 3
static inline float acosh(float a)
# 503 "/usr/include/math_functions.hpp" 3
{
# 504 "/usr/include/math_functions.hpp" 3
return acoshf(a);
# 505 "/usr/include/math_functions.hpp" 3
}
# 507 "/usr/include/math_functions.hpp" 3
static inline float asinh(float a)
# 508 "/usr/include/math_functions.hpp" 3
{
# 509 "/usr/include/math_functions.hpp" 3
return asinhf(a);
# 510 "/usr/include/math_functions.hpp" 3
}
# 512 "/usr/include/math_functions.hpp" 3
static inline float atanh(float a)
# 513 "/usr/include/math_functions.hpp" 3
{
# 514 "/usr/include/math_functions.hpp" 3
return atanhf(a);
# 515 "/usr/include/math_functions.hpp" 3
}
# 517 "/usr/include/math_functions.hpp" 3
static inline float hypot(float a, float b)
# 518 "/usr/include/math_functions.hpp" 3
{
# 519 "/usr/include/math_functions.hpp" 3
return hypotf(a, b);
# 520 "/usr/include/math_functions.hpp" 3
}
# 522 "/usr/include/math_functions.hpp" 3
static inline float norm3d(float a, float b, float c)
# 523 "/usr/include/math_functions.hpp" 3
{
# 524 "/usr/include/math_functions.hpp" 3
return norm3df(a, b, c);
# 525 "/usr/include/math_functions.hpp" 3
}
# 527 "/usr/include/math_functions.hpp" 3
static inline float norm4d(float a, float b, float c, float d)
# 528 "/usr/include/math_functions.hpp" 3
{
# 529 "/usr/include/math_functions.hpp" 3
return norm4df(a, b, c, d);
# 530 "/usr/include/math_functions.hpp" 3
}
# 532 "/usr/include/math_functions.hpp" 3
static inline float cbrt(float a)
# 533 "/usr/include/math_functions.hpp" 3
{
# 534 "/usr/include/math_functions.hpp" 3
return cbrtf(a);
# 535 "/usr/include/math_functions.hpp" 3
}
# 537 "/usr/include/math_functions.hpp" 3
static inline float erf(float a)
# 538 "/usr/include/math_functions.hpp" 3
{
# 539 "/usr/include/math_functions.hpp" 3
return erff(a);
# 540 "/usr/include/math_functions.hpp" 3
}
# 542 "/usr/include/math_functions.hpp" 3
static inline float erfc(float a)
# 543 "/usr/include/math_functions.hpp" 3
{
# 544 "/usr/include/math_functions.hpp" 3
return erfcf(a);
# 545 "/usr/include/math_functions.hpp" 3
}
# 547 "/usr/include/math_functions.hpp" 3
static inline float lgamma(float a)
# 548 "/usr/include/math_functions.hpp" 3
{
# 549 "/usr/include/math_functions.hpp" 3
return lgammaf(a);
# 550 "/usr/include/math_functions.hpp" 3
}
# 552 "/usr/include/math_functions.hpp" 3
static inline float tgamma(float a)
# 553 "/usr/include/math_functions.hpp" 3
{
# 554 "/usr/include/math_functions.hpp" 3
return tgammaf(a);
# 555 "/usr/include/math_functions.hpp" 3
}
# 557 "/usr/include/math_functions.hpp" 3
static inline float copysign(float a, float b)
# 558 "/usr/include/math_functions.hpp" 3
{
# 559 "/usr/include/math_functions.hpp" 3
return copysignf(a, b);
# 560 "/usr/include/math_functions.hpp" 3
}
# 562 "/usr/include/math_functions.hpp" 3
static inline float nextafter(float a, float b)
# 563 "/usr/include/math_functions.hpp" 3
{
# 564 "/usr/include/math_functions.hpp" 3
return nextafterf(a, b);
# 565 "/usr/include/math_functions.hpp" 3
}
# 567 "/usr/include/math_functions.hpp" 3
static inline float remainder(float a, float b)
# 568 "/usr/include/math_functions.hpp" 3
{
# 569 "/usr/include/math_functions.hpp" 3
return remainderf(a, b);
# 570 "/usr/include/math_functions.hpp" 3
}
# 572 "/usr/include/math_functions.hpp" 3
static inline float remquo(float a, float b, int *quo)
# 573 "/usr/include/math_functions.hpp" 3
{
# 574 "/usr/include/math_functions.hpp" 3
return remquof(a, b, quo);
# 575 "/usr/include/math_functions.hpp" 3
}
# 577 "/usr/include/math_functions.hpp" 3
static inline float round(float a)
# 578 "/usr/include/math_functions.hpp" 3
{
# 579 "/usr/include/math_functions.hpp" 3
return roundf(a);
# 580 "/usr/include/math_functions.hpp" 3
}
# 582 "/usr/include/math_functions.hpp" 3
static inline long lround(float a)
# 583 "/usr/include/math_functions.hpp" 3
{
# 584 "/usr/include/math_functions.hpp" 3
return lroundf(a);
# 585 "/usr/include/math_functions.hpp" 3
}
# 587 "/usr/include/math_functions.hpp" 3
static inline long long llround(float a)
# 588 "/usr/include/math_functions.hpp" 3
{
# 589 "/usr/include/math_functions.hpp" 3
return llroundf(a);
# 590 "/usr/include/math_functions.hpp" 3
}
# 592 "/usr/include/math_functions.hpp" 3
static inline float trunc(float a)
# 593 "/usr/include/math_functions.hpp" 3
{
# 594 "/usr/include/math_functions.hpp" 3
return truncf(a);
# 595 "/usr/include/math_functions.hpp" 3
}
# 597 "/usr/include/math_functions.hpp" 3
static inline float rint(float a)
# 598 "/usr/include/math_functions.hpp" 3
{
# 599 "/usr/include/math_functions.hpp" 3
return rintf(a);
# 600 "/usr/include/math_functions.hpp" 3
}
# 602 "/usr/include/math_functions.hpp" 3
static inline long lrint(float a)
# 603 "/usr/include/math_functions.hpp" 3
{
# 604 "/usr/include/math_functions.hpp" 3
return lrintf(a);
# 605 "/usr/include/math_functions.hpp" 3
}
# 607 "/usr/include/math_functions.hpp" 3
static inline long long llrint(float a)
# 608 "/usr/include/math_functions.hpp" 3
{
# 609 "/usr/include/math_functions.hpp" 3
return llrintf(a);
# 610 "/usr/include/math_functions.hpp" 3
}
# 612 "/usr/include/math_functions.hpp" 3
static inline float nearbyint(float a)
# 613 "/usr/include/math_functions.hpp" 3
{
# 614 "/usr/include/math_functions.hpp" 3
return nearbyintf(a);
# 615 "/usr/include/math_functions.hpp" 3
}
# 617 "/usr/include/math_functions.hpp" 3
static inline float fdim(float a, float b)
# 618 "/usr/include/math_functions.hpp" 3
{
# 619 "/usr/include/math_functions.hpp" 3
return fdimf(a, b);
# 620 "/usr/include/math_functions.hpp" 3
}
# 622 "/usr/include/math_functions.hpp" 3
static inline float fma(float a, float b, float c)
# 623 "/usr/include/math_functions.hpp" 3
{
# 624 "/usr/include/math_functions.hpp" 3
return fmaf(a, b, c);
# 625 "/usr/include/math_functions.hpp" 3
}
# 627 "/usr/include/math_functions.hpp" 3
static inline float fmax(float a, float b)
# 628 "/usr/include/math_functions.hpp" 3
{
# 629 "/usr/include/math_functions.hpp" 3
return fmaxf(a, b);
# 630 "/usr/include/math_functions.hpp" 3
}
# 632 "/usr/include/math_functions.hpp" 3
static inline float fmin(float a, float b)
# 633 "/usr/include/math_functions.hpp" 3
{
# 634 "/usr/include/math_functions.hpp" 3
return fminf(a, b);
# 635 "/usr/include/math_functions.hpp" 3
}
# 639 "/usr/include/math_functions.hpp" 3
static inline float exp10(float a)
# 640 "/usr/include/math_functions.hpp" 3
{
# 641 "/usr/include/math_functions.hpp" 3
return exp10f(a);
# 642 "/usr/include/math_functions.hpp" 3
}
# 644 "/usr/include/math_functions.hpp" 3
static inline float rsqrt(float a)
# 645 "/usr/include/math_functions.hpp" 3
{
# 646 "/usr/include/math_functions.hpp" 3
return rsqrtf(a);
# 647 "/usr/include/math_functions.hpp" 3
}
# 649 "/usr/include/math_functions.hpp" 3
static inline float rcbrt(float a)
# 650 "/usr/include/math_functions.hpp" 3
{
# 651 "/usr/include/math_functions.hpp" 3
return rcbrtf(a);
# 652 "/usr/include/math_functions.hpp" 3
}
# 654 "/usr/include/math_functions.hpp" 3
static inline float sinpi(float a)
# 655 "/usr/include/math_functions.hpp" 3
{
# 656 "/usr/include/math_functions.hpp" 3
return sinpif(a);
# 657 "/usr/include/math_functions.hpp" 3
}
# 659 "/usr/include/math_functions.hpp" 3
static inline float cospi(float a)
# 660 "/usr/include/math_functions.hpp" 3
{
# 661 "/usr/include/math_functions.hpp" 3
return cospif(a);
# 662 "/usr/include/math_functions.hpp" 3
}
# 664 "/usr/include/math_functions.hpp" 3
static inline void sincospi(float a, float *sptr, float *cptr)
# 665 "/usr/include/math_functions.hpp" 3
{
# 666 "/usr/include/math_functions.hpp" 3
sincospif(a, sptr, cptr);
# 667 "/usr/include/math_functions.hpp" 3
}
# 669 "/usr/include/math_functions.hpp" 3
static inline void sincos(float a, float *sptr, float *cptr)
# 670 "/usr/include/math_functions.hpp" 3
{
# 671 "/usr/include/math_functions.hpp" 3
sincosf(a, sptr, cptr);
# 672 "/usr/include/math_functions.hpp" 3
}
# 674 "/usr/include/math_functions.hpp" 3
static inline float j0(float a)
# 675 "/usr/include/math_functions.hpp" 3
{
# 676 "/usr/include/math_functions.hpp" 3
return j0f(a);
# 677 "/usr/include/math_functions.hpp" 3
}
# 679 "/usr/include/math_functions.hpp" 3
static inline float j1(float a)
# 680 "/usr/include/math_functions.hpp" 3
{
# 681 "/usr/include/math_functions.hpp" 3
return j1f(a);
# 682 "/usr/include/math_functions.hpp" 3
}
# 684 "/usr/include/math_functions.hpp" 3
static inline float jn(int n, float a)
# 685 "/usr/include/math_functions.hpp" 3
{
# 686 "/usr/include/math_functions.hpp" 3
return jnf(n, a);
# 687 "/usr/include/math_functions.hpp" 3
}
# 689 "/usr/include/math_functions.hpp" 3
static inline float y0(float a)
# 690 "/usr/include/math_functions.hpp" 3
{
# 691 "/usr/include/math_functions.hpp" 3
return y0f(a);
# 692 "/usr/include/math_functions.hpp" 3
}
# 694 "/usr/include/math_functions.hpp" 3
static inline float y1(float a)
# 695 "/usr/include/math_functions.hpp" 3
{
# 696 "/usr/include/math_functions.hpp" 3
return y1f(a);
# 697 "/usr/include/math_functions.hpp" 3
}
# 699 "/usr/include/math_functions.hpp" 3
static inline float yn(int n, float a)
# 700 "/usr/include/math_functions.hpp" 3
{
# 701 "/usr/include/math_functions.hpp" 3
return ynf(n, a);
# 702 "/usr/include/math_functions.hpp" 3
}
# 704 "/usr/include/math_functions.hpp" 3
static inline float cyl_bessel_i0(float a)
# 705 "/usr/include/math_functions.hpp" 3
{
# 706 "/usr/include/math_functions.hpp" 3
return cyl_bessel_i0f(a);
# 707 "/usr/include/math_functions.hpp" 3
}
# 709 "/usr/include/math_functions.hpp" 3
static inline float cyl_bessel_i1(float a)
# 710 "/usr/include/math_functions.hpp" 3
{
# 711 "/usr/include/math_functions.hpp" 3
return cyl_bessel_i1f(a);
# 712 "/usr/include/math_functions.hpp" 3
}
# 714 "/usr/include/math_functions.hpp" 3
static inline float erfinv(float a)
# 715 "/usr/include/math_functions.hpp" 3
{
# 716 "/usr/include/math_functions.hpp" 3
return erfinvf(a);
# 717 "/usr/include/math_functions.hpp" 3
}
# 719 "/usr/include/math_functions.hpp" 3
static inline float erfcinv(float a)
# 720 "/usr/include/math_functions.hpp" 3
{
# 721 "/usr/include/math_functions.hpp" 3
return erfcinvf(a);
# 722 "/usr/include/math_functions.hpp" 3
}
# 724 "/usr/include/math_functions.hpp" 3
static inline float normcdfinv(float a)
# 725 "/usr/include/math_functions.hpp" 3
{
# 726 "/usr/include/math_functions.hpp" 3
return normcdfinvf(a);
# 727 "/usr/include/math_functions.hpp" 3
}
# 729 "/usr/include/math_functions.hpp" 3
static inline float normcdf(float a)
# 730 "/usr/include/math_functions.hpp" 3
{
# 731 "/usr/include/math_functions.hpp" 3
return normcdff(a);
# 732 "/usr/include/math_functions.hpp" 3
}
# 734 "/usr/include/math_functions.hpp" 3
static inline float erfcx(float a)
# 735 "/usr/include/math_functions.hpp" 3
{
# 736 "/usr/include/math_functions.hpp" 3
return erfcxf(a);
# 737 "/usr/include/math_functions.hpp" 3
}
# 739 "/usr/include/math_functions.hpp" 3
static inline double copysign(double a, float b)
# 740 "/usr/include/math_functions.hpp" 3
{
# 741 "/usr/include/math_functions.hpp" 3
return copysign(a, (double)b);
# 742 "/usr/include/math_functions.hpp" 3
}
# 744 "/usr/include/math_functions.hpp" 3
static inline float copysign(float a, double b)
# 745 "/usr/include/math_functions.hpp" 3
{
# 746 "/usr/include/math_functions.hpp" 3
return copysignf(a, (float)b);
# 747 "/usr/include/math_functions.hpp" 3
}
# 749 "/usr/include/math_functions.hpp" 3
static inline unsigned min(unsigned a, unsigned b)
# 750 "/usr/include/math_functions.hpp" 3
{
# 751 "/usr/include/math_functions.hpp" 3
return umin(a, b);
# 752 "/usr/include/math_functions.hpp" 3
}
# 754 "/usr/include/math_functions.hpp" 3
static inline unsigned min(int a, unsigned b)
# 755 "/usr/include/math_functions.hpp" 3
{
# 756 "/usr/include/math_functions.hpp" 3
return umin((unsigned)a, b);
# 757 "/usr/include/math_functions.hpp" 3
}
# 759 "/usr/include/math_functions.hpp" 3
static inline unsigned min(unsigned a, int b)
# 760 "/usr/include/math_functions.hpp" 3
{
# 761 "/usr/include/math_functions.hpp" 3
return umin(a, (unsigned)b);
# 762 "/usr/include/math_functions.hpp" 3
}
# 764 "/usr/include/math_functions.hpp" 3
static inline long min(long a, long b)
# 765 "/usr/include/math_functions.hpp" 3
{
# 771 "/usr/include/math_functions.hpp" 3
if (sizeof(long) == sizeof(int)) {
# 775 "/usr/include/math_functions.hpp" 3
return (long)min((int)a, (int)b);
# 776 "/usr/include/math_functions.hpp" 3
} else {
# 777 "/usr/include/math_functions.hpp" 3
return (long)llmin((long long)a, (long long)b);
# 778 "/usr/include/math_functions.hpp" 3
}
# 779 "/usr/include/math_functions.hpp" 3
}
# 781 "/usr/include/math_functions.hpp" 3
static inline unsigned long min(unsigned long a, unsigned long b)
# 782 "/usr/include/math_functions.hpp" 3
{
# 786 "/usr/include/math_functions.hpp" 3
if (sizeof(unsigned long) == sizeof(unsigned)) {
# 790 "/usr/include/math_functions.hpp" 3
return (unsigned long)umin((unsigned)a, (unsigned)b);
# 791 "/usr/include/math_functions.hpp" 3
} else {
# 792 "/usr/include/math_functions.hpp" 3
return (unsigned long)ullmin((unsigned long long)a, (unsigned long long)b);
# 793 "/usr/include/math_functions.hpp" 3
}
# 794 "/usr/include/math_functions.hpp" 3
}
# 796 "/usr/include/math_functions.hpp" 3
static inline unsigned long min(long a, unsigned long b)
# 797 "/usr/include/math_functions.hpp" 3
{
# 801 "/usr/include/math_functions.hpp" 3
if (sizeof(unsigned long) == sizeof(unsigned)) {
# 805 "/usr/include/math_functions.hpp" 3
return (unsigned long)umin((unsigned)a, (unsigned)b);
# 806 "/usr/include/math_functions.hpp" 3
} else {
# 807 "/usr/include/math_functions.hpp" 3
return (unsigned long)ullmin((unsigned long long)a, (unsigned long long)b);
# 808 "/usr/include/math_functions.hpp" 3
}
# 809 "/usr/include/math_functions.hpp" 3
}
# 811 "/usr/include/math_functions.hpp" 3
static inline unsigned long min(unsigned long a, long b)
# 812 "/usr/include/math_functions.hpp" 3
{
# 816 "/usr/include/math_functions.hpp" 3
if (sizeof(unsigned long) == sizeof(unsigned)) {
# 820 "/usr/include/math_functions.hpp" 3
return (unsigned long)umin((unsigned)a, (unsigned)b);
# 821 "/usr/include/math_functions.hpp" 3
} else {
# 822 "/usr/include/math_functions.hpp" 3
return (unsigned long)ullmin((unsigned long long)a, (unsigned long long)b);
# 823 "/usr/include/math_functions.hpp" 3
}
# 824 "/usr/include/math_functions.hpp" 3
}
# 826 "/usr/include/math_functions.hpp" 3
static inline long long min(long long a, long long b)
# 827 "/usr/include/math_functions.hpp" 3
{
# 828 "/usr/include/math_functions.hpp" 3
return llmin(a, b);
# 829 "/usr/include/math_functions.hpp" 3
}
# 831 "/usr/include/math_functions.hpp" 3
static inline unsigned long long min(unsigned long long a, unsigned long long b)
# 832 "/usr/include/math_functions.hpp" 3
{
# 833 "/usr/include/math_functions.hpp" 3
return ullmin(a, b);
# 834 "/usr/include/math_functions.hpp" 3
}
# 836 "/usr/include/math_functions.hpp" 3
static inline unsigned long long min(long long a, unsigned long long b)
# 837 "/usr/include/math_functions.hpp" 3
{
# 838 "/usr/include/math_functions.hpp" 3
return ullmin((unsigned long long)a, b);
# 839 "/usr/include/math_functions.hpp" 3
}
# 841 "/usr/include/math_functions.hpp" 3
static inline unsigned long long min(unsigned long long a, long long b)
# 842 "/usr/include/math_functions.hpp" 3
{
# 843 "/usr/include/math_functions.hpp" 3
return ullmin(a, (unsigned long long)b);
# 844 "/usr/include/math_functions.hpp" 3
}
# 846 "/usr/include/math_functions.hpp" 3
static inline float min(float a, float b)
# 847 "/usr/include/math_functions.hpp" 3
{
# 848 "/usr/include/math_functions.hpp" 3
return fminf(a, b);
# 849 "/usr/include/math_functions.hpp" 3
}
# 851 "/usr/include/math_functions.hpp" 3
static inline double min(double a, double b)
# 852 "/usr/include/math_functions.hpp" 3
{
# 853 "/usr/include/math_functions.hpp" 3
return fmin(a, b);
# 854 "/usr/include/math_functions.hpp" 3
}
# 856 "/usr/include/math_functions.hpp" 3
static inline double min(float a, double b)
# 857 "/usr/include/math_functions.hpp" 3
{
# 858 "/usr/include/math_functions.hpp" 3
return fmin((double)a, b);
# 859 "/usr/include/math_functions.hpp" 3
}
# 861 "/usr/include/math_functions.hpp" 3
static inline double min(double a, float b)
# 862 "/usr/include/math_functions.hpp" 3
{
# 863 "/usr/include/math_functions.hpp" 3
return fmin(a, (double)b);
# 864 "/usr/include/math_functions.hpp" 3
}
# 866 "/usr/include/math_functions.hpp" 3
static inline unsigned max(unsigned a, unsigned b)
# 867 "/usr/include/math_functions.hpp" 3
{
# 868 "/usr/include/math_functions.hpp" 3
return umax(a, b);
# 869 "/usr/include/math_functions.hpp" 3
}
# 871 "/usr/include/math_functions.hpp" 3
static inline unsigned max(int a, unsigned b)
# 872 "/usr/include/math_functions.hpp" 3
{
# 873 "/usr/include/math_functions.hpp" 3
return umax((unsigned)a, b);
# 874 "/usr/include/math_functions.hpp" 3
}
# 876 "/usr/include/math_functions.hpp" 3
static inline unsigned max(unsigned a, int b)
# 877 "/usr/include/math_functions.hpp" 3
{
# 878 "/usr/include/math_functions.hpp" 3
return umax(a, (unsigned)b);
# 879 "/usr/include/math_functions.hpp" 3
}
# 881 "/usr/include/math_functions.hpp" 3
static inline long max(long a, long b)
# 882 "/usr/include/math_functions.hpp" 3
{
# 887 "/usr/include/math_functions.hpp" 3
if (sizeof(long) == sizeof(int)) {
# 891 "/usr/include/math_functions.hpp" 3
return (long)max((int)a, (int)b);
# 892 "/usr/include/math_functions.hpp" 3
} else {
# 893 "/usr/include/math_functions.hpp" 3
return (long)llmax((long long)a, (long long)b);
# 894 "/usr/include/math_functions.hpp" 3
}
# 895 "/usr/include/math_functions.hpp" 3
}
# 897 "/usr/include/math_functions.hpp" 3
static inline unsigned long max(unsigned long a, unsigned long b)
# 898 "/usr/include/math_functions.hpp" 3
{
# 902 "/usr/include/math_functions.hpp" 3
if (sizeof(unsigned long) == sizeof(unsigned)) {
# 906 "/usr/include/math_functions.hpp" 3
return (unsigned long)umax((unsigned)a, (unsigned)b);
# 907 "/usr/include/math_functions.hpp" 3
} else {
# 908 "/usr/include/math_functions.hpp" 3
return (unsigned long)ullmax((unsigned long long)a, (unsigned long long)b);
# 909 "/usr/include/math_functions.hpp" 3
}
# 910 "/usr/include/math_functions.hpp" 3
}
# 912 "/usr/include/math_functions.hpp" 3
static inline unsigned long max(long a, unsigned long b)
# 913 "/usr/include/math_functions.hpp" 3
{
# 917 "/usr/include/math_functions.hpp" 3
if (sizeof(unsigned long) == sizeof(unsigned)) {
# 921 "/usr/include/math_functions.hpp" 3
return (unsigned long)umax((unsigned)a, (unsigned)b);
# 922 "/usr/include/math_functions.hpp" 3
} else {
# 923 "/usr/include/math_functions.hpp" 3
return (unsigned long)ullmax((unsigned long long)a, (unsigned long long)b);
# 924 "/usr/include/math_functions.hpp" 3
}
# 925 "/usr/include/math_functions.hpp" 3
}
# 927 "/usr/include/math_functions.hpp" 3
static inline unsigned long max(unsigned long a, long b)
# 928 "/usr/include/math_functions.hpp" 3
{
# 932 "/usr/include/math_functions.hpp" 3
if (sizeof(unsigned long) == sizeof(unsigned)) {
# 936 "/usr/include/math_functions.hpp" 3
return (unsigned long)umax((unsigned)a, (unsigned)b);
# 937 "/usr/include/math_functions.hpp" 3
} else {
# 938 "/usr/include/math_functions.hpp" 3
return (unsigned long)ullmax((unsigned long long)a, (unsigned long long)b);
# 939 "/usr/include/math_functions.hpp" 3
}
# 940 "/usr/include/math_functions.hpp" 3
}
# 942 "/usr/include/math_functions.hpp" 3
static inline long long max(long long a, long long b)
# 943 "/usr/include/math_functions.hpp" 3
{
# 944 "/usr/include/math_functions.hpp" 3
return llmax(a, b);
# 945 "/usr/include/math_functions.hpp" 3
}
# 947 "/usr/include/math_functions.hpp" 3
static inline unsigned long long max(unsigned long long a, unsigned long long b)
# 948 "/usr/include/math_functions.hpp" 3
{
# 949 "/usr/include/math_functions.hpp" 3
return ullmax(a, b);
# 950 "/usr/include/math_functions.hpp" 3
}
# 952 "/usr/include/math_functions.hpp" 3
static inline unsigned long long max(long long a, unsigned long long b)
# 953 "/usr/include/math_functions.hpp" 3
{
# 954 "/usr/include/math_functions.hpp" 3
return ullmax((unsigned long long)a, b);
# 955 "/usr/include/math_functions.hpp" 3
}
# 957 "/usr/include/math_functions.hpp" 3
static inline unsigned long long max(unsigned long long a, long long b)
# 958 "/usr/include/math_functions.hpp" 3
{
# 959 "/usr/include/math_functions.hpp" 3
return ullmax(a, (unsigned long long)b);
# 960 "/usr/include/math_functions.hpp" 3
}
# 962 "/usr/include/math_functions.hpp" 3
static inline float max(float a, float b)
# 963 "/usr/include/math_functions.hpp" 3
{
# 964 "/usr/include/math_functions.hpp" 3
return fmaxf(a, b);
# 965 "/usr/include/math_functions.hpp" 3
}
# 967 "/usr/include/math_functions.hpp" 3
static inline double max(double a, double b)
# 968 "/usr/include/math_functions.hpp" 3
{
# 969 "/usr/include/math_functions.hpp" 3
return fmax(a, b);
# 970 "/usr/include/math_functions.hpp" 3
}
# 972 "/usr/include/math_functions.hpp" 3
static inline double max(float a, double b)
# 973 "/usr/include/math_functions.hpp" 3
{
# 974 "/usr/include/math_functions.hpp" 3
return fmax((double)a, b);
# 975 "/usr/include/math_functions.hpp" 3
}
# 977 "/usr/include/math_functions.hpp" 3
static inline double max(double a, float b)
# 978 "/usr/include/math_functions.hpp" 3
{
# 979 "/usr/include/math_functions.hpp" 3
return fmax(a, (double)b);
# 980 "/usr/include/math_functions.hpp" 3
}
# 991 "/usr/include/math_functions.hpp" 3
inline int min(int a, int b)
# 992 "/usr/include/math_functions.hpp" 3
{
# 993 "/usr/include/math_functions.hpp" 3
return (a < b) ? a : b;
# 994 "/usr/include/math_functions.hpp" 3
}
# 996 "/usr/include/math_functions.hpp" 3
inline unsigned umin(unsigned a, unsigned b)
# 997 "/usr/include/math_functions.hpp" 3
{
# 998 "/usr/include/math_functions.hpp" 3
return (a < b) ? a : b;
# 999 "/usr/include/math_functions.hpp" 3
}
# 1001 "/usr/include/math_functions.hpp" 3
inline long long llmin(long long a, long long b)
# 1002 "/usr/include/math_functions.hpp" 3
{
# 1003 "/usr/include/math_functions.hpp" 3
return (a < b) ? a : b;
# 1004 "/usr/include/math_functions.hpp" 3
}
# 1006 "/usr/include/math_functions.hpp" 3
inline unsigned long long ullmin(unsigned long long a, unsigned long long
# 1007 "/usr/include/math_functions.hpp" 3
b)
# 1008 "/usr/include/math_functions.hpp" 3
{
# 1009 "/usr/include/math_functions.hpp" 3
return (a < b) ? a : b;
# 1010 "/usr/include/math_functions.hpp" 3
}
# 1012 "/usr/include/math_functions.hpp" 3
inline int max(int a, int b)
# 1013 "/usr/include/math_functions.hpp" 3
{
# 1014 "/usr/include/math_functions.hpp" 3
return (a > b) ? a : b;
# 1015 "/usr/include/math_functions.hpp" 3
}
# 1017 "/usr/include/math_functions.hpp" 3
inline unsigned umax(unsigned a, unsigned b)
# 1018 "/usr/include/math_functions.hpp" 3
{
# 1019 "/usr/include/math_functions.hpp" 3
return (a > b) ? a : b;
# 1020 "/usr/include/math_functions.hpp" 3
}
# 1022 "/usr/include/math_functions.hpp" 3
inline long long llmax(long long a, long long b)
# 1023 "/usr/include/math_functions.hpp" 3
{
# 1024 "/usr/include/math_functions.hpp" 3
return (a > b) ? a : b;
# 1025 "/usr/include/math_functions.hpp" 3
}
# 1027 "/usr/include/math_functions.hpp" 3
inline unsigned long long ullmax(unsigned long long a, unsigned long long
# 1028 "/usr/include/math_functions.hpp" 3
b)
# 1029 "/usr/include/math_functions.hpp" 3
{
# 1030 "/usr/include/math_functions.hpp" 3
return (a > b) ? a : b;
# 1031 "/usr/include/math_functions.hpp" 3
}
# 77 "/usr/include/cuda_surface_types.h" 3
template< class T, int dim = 1>
# 78 "/usr/include/cuda_surface_types.h" 3
struct surface : public surfaceReference {
# 81 "/usr/include/cuda_surface_types.h" 3
surface()
# 82 "/usr/include/cuda_surface_types.h" 3
{
# 83 "/usr/include/cuda_surface_types.h" 3
(surfaceReference::channelDesc) = cudaCreateChannelDesc< T> ();
# 84 "/usr/include/cuda_surface_types.h" 3
}
# 86 "/usr/include/cuda_surface_types.h" 3
surface(cudaChannelFormatDesc desc)
# 87 "/usr/include/cuda_surface_types.h" 3
{
# 88 "/usr/include/cuda_surface_types.h" 3
(surfaceReference::channelDesc) = desc;
# 89 "/usr/include/cuda_surface_types.h" 3
}
# 91 "/usr/include/cuda_surface_types.h" 3
};
# 93 "/usr/include/cuda_surface_types.h" 3
template< int dim>
# 94 "/usr/include/cuda_surface_types.h" 3
struct surface< void, dim> : public surfaceReference {
# 97 "/usr/include/cuda_surface_types.h" 3
surface()
# 98 "/usr/include/cuda_surface_types.h" 3
{
# 99 "/usr/include/cuda_surface_types.h" 3
(surfaceReference::channelDesc) = cudaCreateChannelDesc< void> ();
# 100 "/usr/include/cuda_surface_types.h" 3
}
# 102 "/usr/include/cuda_surface_types.h" 3
};
# 77 "/usr/include/cuda_texture_types.h" 3
template< class T, int texType = 1, cudaTextureReadMode mode = cudaReadModeElementType>
# 78 "/usr/include/cuda_texture_types.h" 3
struct texture : public textureReference {
# 81 "/usr/include/cuda_texture_types.h" 3
texture(int norm = 0, cudaTextureFilterMode
# 82 "/usr/include/cuda_texture_types.h" 3
fMode = cudaFilterModePoint, cudaTextureAddressMode
# 83 "/usr/include/cuda_texture_types.h" 3
aMode = cudaAddressModeClamp)
# 84 "/usr/include/cuda_texture_types.h" 3
{
# 85 "/usr/include/cuda_texture_types.h" 3
(textureReference::normalized) = norm;
# 86 "/usr/include/cuda_texture_types.h" 3
(textureReference::filterMode) = fMode;
# 87 "/usr/include/cuda_texture_types.h" 3
((textureReference::addressMode)[0]) = aMode;
# 88 "/usr/include/cuda_texture_types.h" 3
((textureReference::addressMode)[1]) = aMode;
# 89 "/usr/include/cuda_texture_types.h" 3
((textureReference::addressMode)[2]) = aMode;
# 90 "/usr/include/cuda_texture_types.h" 3
(textureReference::channelDesc) = cudaCreateChannelDesc< T> ();
# 91 "/usr/include/cuda_texture_types.h" 3
(textureReference::sRGB) = 0;
# 92 "/usr/include/cuda_texture_types.h" 3
}
# 94 "/usr/include/cuda_texture_types.h" 3
texture(int norm, cudaTextureFilterMode
# 95 "/usr/include/cuda_texture_types.h" 3
fMode, cudaTextureAddressMode
# 96 "/usr/include/cuda_texture_types.h" 3
aMode, cudaChannelFormatDesc
# 97 "/usr/include/cuda_texture_types.h" 3
desc)
# 98 "/usr/include/cuda_texture_types.h" 3
{
# 99 "/usr/include/cuda_texture_types.h" 3
(textureReference::normalized) = norm;
# 100 "/usr/include/cuda_texture_types.h" 3
(textureReference::filterMode) = fMode;
# 101 "/usr/include/cuda_texture_types.h" 3
((textureReference::addressMode)[0]) = aMode;
# 102 "/usr/include/cuda_texture_types.h" 3
((textureReference::addressMode)[1]) = aMode;
# 103 "/usr/include/cuda_texture_types.h" 3
((textureReference::addressMode)[2]) = aMode;
# 104 "/usr/include/cuda_texture_types.h" 3
(textureReference::channelDesc) = desc;
# 105 "/usr/include/cuda_texture_types.h" 3
(textureReference::sRGB) = 0;
# 106 "/usr/include/cuda_texture_types.h" 3
}
# 108 "/usr/include/cuda_texture_types.h" 3
};
# 3230 "/usr/include/device_functions.h" 3
__attribute__((unused)) static inline int mulhi(int a, int b);
# 3232 "/usr/include/device_functions.h" 3
__attribute__((unused)) static inline unsigned mulhi(unsigned a, unsigned b);
# 3234 "/usr/include/device_functions.h" 3
__attribute__((unused)) static inline unsigned mulhi(int a, unsigned b);
# 3236 "/usr/include/device_functions.h" 3
__attribute__((unused)) static inline unsigned mulhi(unsigned a, int b);
# 3238 "/usr/include/device_functions.h" 3
__attribute__((unused)) static inline long long mul64hi(long long a, long long b);
# 3240 "/usr/include/device_functions.h" 3
__attribute__((unused)) static inline unsigned long long mul64hi(unsigned long long a, unsigned long long b);
# 3242 "/usr/include/device_functions.h" 3
__attribute__((unused)) static inline unsigned long long mul64hi(long long a, unsigned long long b);
# 3244 "/usr/include/device_functions.h" 3
__attribute__((unused)) static inline unsigned long long mul64hi(unsigned long long a, long long b);
# 3246 "/usr/include/device_functions.h" 3
__attribute__((unused)) static inline int float_as_int(float a);
# 3248 "/usr/include/device_functions.h" 3
__attribute__((unused)) static inline float int_as_float(int a);
# 3250 "/usr/include/device_functions.h" 3
__attribute__((unused)) static inline unsigned float_as_uint(float a);
# 3252 "/usr/include/device_functions.h" 3
__attribute__((unused)) static inline float uint_as_float(unsigned a);
# 3254 "/usr/include/device_functions.h" 3
__attribute__((unused)) static inline float saturate(float a);
# 3256 "/usr/include/device_functions.h" 3
__attribute__((unused)) static inline int mul24(int a, int b);
# 3258 "/usr/include/device_functions.h" 3
__attribute__((unused)) static inline unsigned umul24(unsigned a, unsigned b);
# 3260 "/usr/include/device_functions.h" 3
__attribute__((unused)) static inline void trap();
# 3263 "/usr/include/device_functions.h" 3
__attribute__((unused)) static inline void brkpt(int c = 0);
# 3265 "/usr/include/device_functions.h" 3
__attribute__((unused)) static inline void syncthreads();
# 3267 "/usr/include/device_functions.h" 3
__attribute__((unused)) static inline void prof_trigger(int e);
# 3269 "/usr/include/device_functions.h" 3
__attribute__((unused)) static inline void threadfence(bool global = true);
# 3271 "/usr/include/device_functions.h" 3
__attribute__((unused)) static inline int float2int(float a, cudaRoundMode mode = cudaRoundZero);
# 3273 "/usr/include/device_functions.h" 3
__attribute__((unused)) static inline unsigned float2uint(float a, cudaRoundMode mode = cudaRoundZero);
# 3275 "/usr/include/device_functions.h" 3
__attribute__((unused)) static inline float int2float(int a, cudaRoundMode mode = cudaRoundNearest);
# 3277 "/usr/include/device_functions.h" 3
__attribute__((unused)) static inline float uint2float(unsigned a, cudaRoundMode mode = cudaRoundNearest);
# 83 "/usr/include/device_functions.hpp" 3
__attribute__((unused)) static inline int mulhi(int a, int b)
# 84 "/usr/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)b;
# 86 "/usr/include/device_functions.hpp" 3
::exit(___);}
# 88 "/usr/include/device_functions.hpp" 3
__attribute__((unused)) static inline unsigned mulhi(unsigned a, unsigned b)
# 89 "/usr/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)b;
# 91 "/usr/include/device_functions.hpp" 3
::exit(___);}
# 93 "/usr/include/device_functions.hpp" 3
__attribute__((unused)) static inline unsigned mulhi(int a, unsigned b)
# 94 "/usr/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)b;
# 96 "/usr/include/device_functions.hpp" 3
::exit(___);}
# 98 "/usr/include/device_functions.hpp" 3
__attribute__((unused)) static inline unsigned mulhi(unsigned a, int b)
# 99 "/usr/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)b;
# 101 "/usr/include/device_functions.hpp" 3
::exit(___);}
# 103 "/usr/include/device_functions.hpp" 3
__attribute__((unused)) static inline long long mul64hi(long long a, long long b)
# 104 "/usr/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)b;
# 106 "/usr/include/device_functions.hpp" 3
::exit(___);}
# 108 "/usr/include/device_functions.hpp" 3
__attribute__((unused)) static inline unsigned long long mul64hi(unsigned long long a, unsigned long long b)
# 109 "/usr/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)b;
# 111 "/usr/include/device_functions.hpp" 3
::exit(___);}
# 113 "/usr/include/device_functions.hpp" 3
__attribute__((unused)) static inline unsigned long long mul64hi(long long a, unsigned long long b)
# 114 "/usr/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)b;
# 116 "/usr/include/device_functions.hpp" 3
::exit(___);}
# 118 "/usr/include/device_functions.hpp" 3
__attribute__((unused)) static inline unsigned long long mul64hi(unsigned long long a, long long b)
# 119 "/usr/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)b;
# 121 "/usr/include/device_functions.hpp" 3
::exit(___);}
# 123 "/usr/include/device_functions.hpp" 3
__attribute__((unused)) static inline int float_as_int(float a)
# 124 "/usr/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)a;
# 126 "/usr/include/device_functions.hpp" 3
::exit(___);}
# 128 "/usr/include/device_functions.hpp" 3
__attribute__((unused)) static inline float int_as_float(int a)
# 129 "/usr/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)a;
# 131 "/usr/include/device_functions.hpp" 3
::exit(___);}
# 133 "/usr/include/device_functions.hpp" 3
__attribute__((unused)) static inline unsigned float_as_uint(float a)
# 134 "/usr/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)a;
# 136 "/usr/include/device_functions.hpp" 3
::exit(___);}
# 138 "/usr/include/device_functions.hpp" 3
__attribute__((unused)) static inline float uint_as_float(unsigned a)
# 139 "/usr/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)a;
# 141 "/usr/include/device_functions.hpp" 3
::exit(___);}
# 142 "/usr/include/device_functions.hpp" 3
__attribute__((unused)) static inline float saturate(float a)
# 143 "/usr/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)a;
# 145 "/usr/include/device_functions.hpp" 3
::exit(___);}
# 147 "/usr/include/device_functions.hpp" 3
__attribute__((unused)) static inline int mul24(int a, int b)
# 148 "/usr/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)b;
# 150 "/usr/include/device_functions.hpp" 3
::exit(___);}
# 152 "/usr/include/device_functions.hpp" 3
__attribute__((unused)) static inline unsigned umul24(unsigned a, unsigned b)
# 153 "/usr/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)b;
# 155 "/usr/include/device_functions.hpp" 3
::exit(___);}
# 157 "/usr/include/device_functions.hpp" 3
__attribute__((unused)) static inline void trap()
# 158 "/usr/include/device_functions.hpp" 3
{int volatile ___ = 1;
# 160 "/usr/include/device_functions.hpp" 3
::exit(___);}
# 163 "/usr/include/device_functions.hpp" 3
__attribute__((unused)) static inline void brkpt(int c)
# 164 "/usr/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)c;
# 166 "/usr/include/device_functions.hpp" 3
::exit(___);}
# 168 "/usr/include/device_functions.hpp" 3
__attribute__((unused)) static inline void syncthreads()
# 169 "/usr/include/device_functions.hpp" 3
{int volatile ___ = 1;
# 171 "/usr/include/device_functions.hpp" 3
::exit(___);}
# 173 "/usr/include/device_functions.hpp" 3
__attribute__((unused)) static inline void prof_trigger(int e)
# 174 "/usr/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)e;
# 191 "/usr/include/device_functions.hpp" 3
::exit(___);}
# 193 "/usr/include/device_functions.hpp" 3
__attribute__((unused)) static inline void threadfence(bool global)
# 194 "/usr/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)global;
# 196 "/usr/include/device_functions.hpp" 3
::exit(___);}
# 198 "/usr/include/device_functions.hpp" 3
__attribute__((unused)) static inline int float2int(float a, cudaRoundMode mode)
# 199 "/usr/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)mode;
# 204 "/usr/include/device_functions.hpp" 3
::exit(___);}
# 206 "/usr/include/device_functions.hpp" 3
__attribute__((unused)) static inline unsigned float2uint(float a, cudaRoundMode mode)
# 207 "/usr/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)mode;
# 212 "/usr/include/device_functions.hpp" 3
::exit(___);}
# 214 "/usr/include/device_functions.hpp" 3
__attribute__((unused)) static inline float int2float(int a, cudaRoundMode mode)
# 215 "/usr/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)mode;
# 220 "/usr/include/device_functions.hpp" 3
::exit(___);}
# 222 "/usr/include/device_functions.hpp" 3
__attribute__((unused)) static inline float uint2float(unsigned a, cudaRoundMode mode)
# 223 "/usr/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)mode;
# 228 "/usr/include/device_functions.hpp" 3
::exit(___);}
# 105 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicAdd(int * address, int val);
# 107 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicAdd(unsigned * address, unsigned val);
# 109 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicSub(int * address, int val);
# 111 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicSub(unsigned * address, unsigned val);
# 113 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicExch(int * address, int val);
# 115 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicExch(unsigned * address, unsigned val);
# 117 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline float atomicExch(float * address, float val);
# 119 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicMin(int * address, int val);
# 121 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicMin(unsigned * address, unsigned val);
# 123 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicMax(int * address, int val);
# 125 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicMax(unsigned * address, unsigned val);
# 127 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicInc(unsigned * address, unsigned val);
# 129 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicDec(unsigned * address, unsigned val);
# 131 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicAnd(int * address, int val);
# 133 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicAnd(unsigned * address, unsigned val);
# 135 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicOr(int * address, int val);
# 137 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicOr(unsigned * address, unsigned val);
# 139 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicXor(int * address, int val);
# 141 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicXor(unsigned * address, unsigned val);
# 143 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicCAS(int * address, int compare, int val);
# 145 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicCAS(unsigned * address, unsigned compare, unsigned val);
# 178 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicAdd(unsigned long long * address, unsigned long long val);
# 180 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicExch(unsigned long long * address, unsigned long long val);
# 182 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicCAS(unsigned long long * address, unsigned long long compare, unsigned long long val);
# 184 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline bool any(bool cond);
# 186 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline bool all(bool cond);
# 78 "/usr/include/device_atomic_functions.hpp" 3
__attribute__((unused)) static inline int atomicAdd(int *address, int val)
# 79 "/usr/include/device_atomic_functions.hpp" 3
{int volatile ___ = 1;(void)address;(void)val;
# 81 "/usr/include/device_atomic_functions.hpp" 3
::exit(___);}
# 83 "/usr/include/device_atomic_functions.hpp" 3
__attribute__((unused)) static inline unsigned atomicAdd(unsigned *address, unsigned val)
# 84 "/usr/include/device_atomic_functions.hpp" 3
{int volatile ___ = 1;(void)address;(void)val;
# 86 "/usr/include/device_atomic_functions.hpp" 3
::exit(___);}
# 88 "/usr/include/device_atomic_functions.hpp" 3
__attribute__((unused)) static inline int atomicSub(int *address, int val)
# 89 "/usr/include/device_atomic_functions.hpp" 3
{int volatile ___ = 1;(void)address;(void)val;
# 91 "/usr/include/device_atomic_functions.hpp" 3
::exit(___);}
# 93 "/usr/include/device_atomic_functions.hpp" 3
__attribute__((unused)) static inline unsigned atomicSub(unsigned *address, unsigned val)
# 94 "/usr/include/device_atomic_functions.hpp" 3
{int volatile ___ = 1;(void)address;(void)val;
# 96 "/usr/include/device_atomic_functions.hpp" 3
::exit(___);}
# 98 "/usr/include/device_atomic_functions.hpp" 3
__attribute__((unused)) static inline int atomicExch(int *address, int val)
# 99 "/usr/include/device_atomic_functions.hpp" 3
{int volatile ___ = 1;(void)address;(void)val;
# 101 "/usr/include/device_atomic_functions.hpp" 3
::exit(___);}
# 103 "/usr/include/device_atomic_functions.hpp" 3
__attribute__((unused)) static inline unsigned atomicExch(unsigned *address, unsigned val)
# 104 "/usr/include/device_atomic_functions.hpp" 3
{int volatile ___ = 1;(void)address;(void)val;
# 106 "/usr/include/device_atomic_functions.hpp" 3
::exit(___);}
# 108 "/usr/include/device_atomic_functions.hpp" 3
__attribute__((unused)) static inline float atomicExch(float *address, float val)
# 109 "/usr/include/device_atomic_functions.hpp" 3
{int volatile ___ = 1;(void)address;(void)val;
# 111 "/usr/include/device_atomic_functions.hpp" 3
::exit(___);}
# 113 "/usr/include/device_atomic_functions.hpp" 3
__attribute__((unused)) static inline int atomicMin(int *address, int val)
# 114 "/usr/include/device_atomic_functions.hpp" 3
{int volatile ___ = 1;(void)address;(void)val;
# 116 "/usr/include/device_atomic_functions.hpp" 3
::exit(___);}
# 118 "/usr/include/device_atomic_functions.hpp" 3
__attribute__((unused)) static inline unsigned atomicMin(unsigned *address, unsigned val)
# 119 "/usr/include/device_atomic_functions.hpp" 3
{int volatile ___ = 1;(void)address;(void)val;
# 121 "/usr/include/device_atomic_functions.hpp" 3
::exit(___);}
# 123 "/usr/include/device_atomic_functions.hpp" 3
__attribute__((unused)) static inline int atomicMax(int *address, int val)
# 124 "/usr/include/device_atomic_functions.hpp" 3
{int volatile ___ = 1;(void)address;(void)val;
# 126 "/usr/include/device_atomic_functions.hpp" 3
::exit(___);}
# 128 "/usr/include/device_atomic_functions.hpp" 3
__attribute__((unused)) static inline unsigned atomicMax(unsigned *address, unsigned val)
# 129 "/usr/include/device_atomic_functions.hpp" 3
{int volatile ___ = 1;(void)address;(void)val;
# 131 "/usr/include/device_atomic_functions.hpp" 3
::exit(___);}
# 133 "/usr/include/device_atomic_functions.hpp" 3
__attribute__((unused)) static inline unsigned atomicInc(unsigned *address, unsigned val)
# 134 "/usr/include/device_atomic_functions.hpp" 3
{int volatile ___ = 1;(void)address;(void)val;
# 136 "/usr/include/device_atomic_functions.hpp" 3
::exit(___);}
# 138 "/usr/include/device_atomic_functions.hpp" 3
__attribute__((unused)) static inline unsigned atomicDec(unsigned *address, unsigned val)
# 139 "/usr/include/device_atomic_functions.hpp" 3
{int volatile ___ = 1;(void)address;(void)val;
# 141 "/usr/include/device_atomic_functions.hpp" 3
::exit(___);}
# 143 "/usr/include/device_atomic_functions.hpp" 3
__attribute__((unused)) static inline int atomicAnd(int *address, int val)
# 144 "/usr/include/device_atomic_functions.hpp" 3
{int volatile ___ = 1;(void)address;(void)val;
# 146 "/usr/include/device_atomic_functions.hpp" 3
::exit(___);}
# 148 "/usr/include/device_atomic_functions.hpp" 3
__attribute__((unused)) static inline unsigned atomicAnd(unsigned *address, unsigned val)
# 149 "/usr/include/device_atomic_functions.hpp" 3
{int volatile ___ = 1;(void)address;(void)val;
# 151 "/usr/include/device_atomic_functions.hpp" 3
::exit(___);}
# 153 "/usr/include/device_atomic_functions.hpp" 3
__attribute__((unused)) static inline int atomicOr(int *address, int val)
# 154 "/usr/include/device_atomic_functions.hpp" 3
{int volatile ___ = 1;(void)address;(void)val;
# 156 "/usr/include/device_atomic_functions.hpp" 3
::exit(___);}
# 158 "/usr/include/device_atomic_functions.hpp" 3
__attribute__((unused)) static inline unsigned atomicOr(unsigned *address, unsigned val)
# 159 "/usr/include/device_atomic_functions.hpp" 3
{int volatile ___ = 1;(void)address;(void)val;
# 161 "/usr/include/device_atomic_functions.hpp" 3
::exit(___);}
# 163 "/usr/include/device_atomic_functions.hpp" 3
__attribute__((unused)) static inline int atomicXor(int *address, int val)
# 164 "/usr/include/device_atomic_functions.hpp" 3
{int volatile ___ = 1;(void)address;(void)val;
# 166 "/usr/include/device_atomic_functions.hpp" 3
::exit(___);}
# 168 "/usr/include/device_atomic_functions.hpp" 3
__attribute__((unused)) static inline unsigned atomicXor(unsigned *address, unsigned val)
# 169 "/usr/include/device_atomic_functions.hpp" 3
{int volatile ___ = 1;(void)address;(void)val;
# 171 "/usr/include/device_atomic_functions.hpp" 3
::exit(___);}
# 173 "/usr/include/device_atomic_functions.hpp" 3
__attribute__((unused)) static inline int atomicCAS(int *address, int compare, int val)
# 174 "/usr/include/device_atomic_functions.hpp" 3
{int volatile ___ = 1;(void)address;(void)compare;(void)val;
# 176 "/usr/include/device_atomic_functions.hpp" 3
::exit(___);}
# 178 "/usr/include/device_atomic_functions.hpp" 3
__attribute__((unused)) static inline unsigned atomicCAS(unsigned *address, unsigned compare, unsigned val)
# 179 "/usr/include/device_atomic_functions.hpp" 3
{int volatile ___ = 1;(void)address;(void)compare;(void)val;
# 181 "/usr/include/device_atomic_functions.hpp" 3
::exit(___);}
# 201 "/usr/include/device_atomic_functions.hpp" 3
__attribute__((unused)) static inline unsigned long long atomicAdd(unsigned long long *address, unsigned long long val)
# 202 "/usr/include/device_atomic_functions.hpp" 3
{int volatile ___ = 1;(void)address;(void)val;
# 204 "/usr/include/device_atomic_functions.hpp" 3
::exit(___);}
# 206 "/usr/include/device_atomic_functions.hpp" 3
__attribute__((unused)) static inline unsigned long long atomicExch(unsigned long long *address, unsigned long long val)
# 207 "/usr/include/device_atomic_functions.hpp" 3
{int volatile ___ = 1;(void)address;(void)val;
# 209 "/usr/include/device_atomic_functions.hpp" 3
::exit(___);}
# 211 "/usr/include/device_atomic_functions.hpp" 3
__attribute__((unused)) static inline unsigned long long atomicCAS(unsigned long long *address, unsigned long long compare, unsigned long long val)
# 212 "/usr/include/device_atomic_functions.hpp" 3
{int volatile ___ = 1;(void)address;(void)compare;(void)val;
# 214 "/usr/include/device_atomic_functions.hpp" 3
::exit(___);}
# 216 "/usr/include/device_atomic_functions.hpp" 3
__attribute__((unused)) static inline bool any(bool cond)
# 217 "/usr/include/device_atomic_functions.hpp" 3
{int volatile ___ = 1;(void)cond;
# 219 "/usr/include/device_atomic_functions.hpp" 3
::exit(___);}
# 221 "/usr/include/device_atomic_functions.hpp" 3
__attribute__((unused)) static inline bool all(bool cond)
# 222 "/usr/include/device_atomic_functions.hpp" 3
{int volatile ___ = 1;(void)cond;
# 224 "/usr/include/device_atomic_functions.hpp" 3
::exit(___);}
# 1143 "/usr/include/device_double_functions.h" 3
__attribute__((unused)) static inline double fma(double a, double b, double c, cudaRoundMode mode);
# 1145 "/usr/include/device_double_functions.h" 3
__attribute__((unused)) static inline double dmul(double a, double b, cudaRoundMode mode = cudaRoundNearest);
# 1147 "/usr/include/device_double_functions.h" 3
__attribute__((unused)) static inline double dadd(double a, double b, cudaRoundMode mode = cudaRoundNearest);
# 1149 "/usr/include/device_double_functions.h" 3
__attribute__((unused)) static inline double dsub(double a, double b, cudaRoundMode mode = cudaRoundNearest);
# 1151 "/usr/include/device_double_functions.h" 3
__attribute__((unused)) static inline int double2int(double a, cudaRoundMode mode = cudaRoundZero);
# 1153 "/usr/include/device_double_functions.h" 3
__attribute__((unused)) static inline unsigned double2uint(double a, cudaRoundMode mode = cudaRoundZero);
# 1155 "/usr/include/device_double_functions.h" 3
__attribute__((unused)) static inline long long double2ll(double a, cudaRoundMode mode = cudaRoundZero);
# 1157 "/usr/include/device_double_functions.h" 3
__attribute__((unused)) static inline unsigned long long double2ull(double a, cudaRoundMode mode = cudaRoundZero);
# 1159 "/usr/include/device_double_functions.h" 3
__attribute__((unused)) static inline double ll2double(long long a, cudaRoundMode mode = cudaRoundNearest);
# 1161 "/usr/include/device_double_functions.h" 3
__attribute__((unused)) static inline double ull2double(unsigned long long a, cudaRoundMode mode = cudaRoundNearest);
# 1163 "/usr/include/device_double_functions.h" 3
__attribute__((unused)) static inline double int2double(int a, cudaRoundMode mode = cudaRoundNearest);
# 1165 "/usr/include/device_double_functions.h" 3
__attribute__((unused)) static inline double uint2double(unsigned a, cudaRoundMode mode = cudaRoundNearest);
# 1167 "/usr/include/device_double_functions.h" 3
__attribute__((unused)) static inline double float2double(float a, cudaRoundMode mode = cudaRoundNearest);
# 85 "/usr/include/device_double_functions.hpp" 3
__attribute__((unused)) static inline double fma(double a, double b, double c, cudaRoundMode mode)
# 86 "/usr/include/device_double_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)b;(void)c;(void)mode;
# 91 "/usr/include/device_double_functions.hpp" 3
::exit(___);}
# 93 "/usr/include/device_double_functions.hpp" 3
__attribute__((unused)) static inline double dmul(double a, double b, cudaRoundMode mode)
# 94 "/usr/include/device_double_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)b;(void)mode;
# 99 "/usr/include/device_double_functions.hpp" 3
::exit(___);}
# 101 "/usr/include/device_double_functions.hpp" 3
__attribute__((unused)) static inline double dadd(double a, double b, cudaRoundMode mode)
# 102 "/usr/include/device_double_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)b;(void)mode;
# 107 "/usr/include/device_double_functions.hpp" 3
::exit(___);}
# 109 "/usr/include/device_double_functions.hpp" 3
__attribute__((unused)) static inline double dsub(double a, double b, cudaRoundMode mode)
# 110 "/usr/include/device_double_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)b;(void)mode;
# 115 "/usr/include/device_double_functions.hpp" 3
::exit(___);}
# 117 "/usr/include/device_double_functions.hpp" 3
__attribute__((unused)) static inline int double2int(double a, cudaRoundMode mode)
# 118 "/usr/include/device_double_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)mode;
# 123 "/usr/include/device_double_functions.hpp" 3
::exit(___);}
# 125 "/usr/include/device_double_functions.hpp" 3
__attribute__((unused)) static inline unsigned double2uint(double a, cudaRoundMode mode)
# 126 "/usr/include/device_double_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)mode;
# 131 "/usr/include/device_double_functions.hpp" 3
::exit(___);}
# 133 "/usr/include/device_double_functions.hpp" 3
__attribute__((unused)) static inline long long double2ll(double a, cudaRoundMode mode)
# 134 "/usr/include/device_double_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)mode;
# 139 "/usr/include/device_double_functions.hpp" 3
::exit(___);}
# 141 "/usr/include/device_double_functions.hpp" 3
__attribute__((unused)) static inline unsigned long long double2ull(double a, cudaRoundMode mode)
# 142 "/usr/include/device_double_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)mode;
# 147 "/usr/include/device_double_functions.hpp" 3
::exit(___);}
# 149 "/usr/include/device_double_functions.hpp" 3
__attribute__((unused)) static inline double ll2double(long long a, cudaRoundMode mode)
# 150 "/usr/include/device_double_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)mode;
# 155 "/usr/include/device_double_functions.hpp" 3
::exit(___);}
# 157 "/usr/include/device_double_functions.hpp" 3
__attribute__((unused)) static inline double ull2double(unsigned long long a, cudaRoundMode mode)
# 158 "/usr/include/device_double_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)mode;
# 163 "/usr/include/device_double_functions.hpp" 3
::exit(___);}
# 165 "/usr/include/device_double_functions.hpp" 3
__attribute__((unused)) static inline double int2double(int a, cudaRoundMode mode)
# 166 "/usr/include/device_double_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)mode;
# 168 "/usr/include/device_double_functions.hpp" 3
::exit(___);}
# 170 "/usr/include/device_double_functions.hpp" 3
__attribute__((unused)) static inline double uint2double(unsigned a, cudaRoundMode mode)
# 171 "/usr/include/device_double_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)mode;
# 173 "/usr/include/device_double_functions.hpp" 3
::exit(___);}
# 175 "/usr/include/device_double_functions.hpp" 3
__attribute__((unused)) static inline double float2double(float a, cudaRoundMode mode)
# 176 "/usr/include/device_double_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)mode;
# 178 "/usr/include/device_double_functions.hpp" 3
::exit(___);}
# 85 "/usr/include/sm_20_atomic_functions.h" 3
__attribute__((unused)) static inline float atomicAdd(float * address, float val);
# 76 "/usr/include/sm_20_atomic_functions.hpp" 3
__attribute__((unused)) static inline float atomicAdd(float *address, float val)
# 77 "/usr/include/sm_20_atomic_functions.hpp" 3
{int volatile ___ = 1;(void)address;(void)val;
# 79 "/usr/include/sm_20_atomic_functions.hpp" 3
::exit(___);}
# 93 "/usr/include/sm_32_atomic_functions.h" 3
__attribute__((unused)) static inline long long atomicMin(long long * address, long long val);
# 95 "/usr/include/sm_32_atomic_functions.h" 3
__attribute__((unused)) static inline long long atomicMax(long long * address, long long val);
# 97 "/usr/include/sm_32_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicMin(unsigned long long * address, unsigned long long val);
# 99 "/usr/include/sm_32_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicMax(unsigned long long * address, unsigned long long val);
# 101 "/usr/include/sm_32_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicAnd(unsigned long long * address, unsigned long long val);
# 103 "/usr/include/sm_32_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicOr(unsigned long long * address, unsigned long long val);
# 105 "/usr/include/sm_32_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicXor(unsigned long long * address, unsigned long long val);
# 78 "/usr/include/sm_32_atomic_functions.hpp" 3
__attribute__((unused)) static inline long long atomicMin(long long *address, long long val)
# 79 "/usr/include/sm_32_atomic_functions.hpp" 3
{int volatile ___ = 1;(void)address;(void)val;
# 81 "/usr/include/sm_32_atomic_functions.hpp" 3
::exit(___);}
# 83 "/usr/include/sm_32_atomic_functions.hpp" 3
__attribute__((unused)) static inline long long atomicMax(long long *address, long long val)
# 84 "/usr/include/sm_32_atomic_functions.hpp" 3
{int volatile ___ = 1;(void)address;(void)val;
# 86 "/usr/include/sm_32_atomic_functions.hpp" 3
::exit(___);}
# 88 "/usr/include/sm_32_atomic_functions.hpp" 3
__attribute__((unused)) static inline unsigned long long atomicMin(unsigned long long *address, unsigned long long val)
# 89 "/usr/include/sm_32_atomic_functions.hpp" 3
{int volatile ___ = 1;(void)address;(void)val;
# 91 "/usr/include/sm_32_atomic_functions.hpp" 3
::exit(___);}
# 93 "/usr/include/sm_32_atomic_functions.hpp" 3
__attribute__((unused)) static inline unsigned long long atomicMax(unsigned long long *address, unsigned long long val)
# 94 "/usr/include/sm_32_atomic_functions.hpp" 3
{int volatile ___ = 1;(void)address;(void)val;
# 96 "/usr/include/sm_32_atomic_functions.hpp" 3
::exit(___);}
# 98 "/usr/include/sm_32_atomic_functions.hpp" 3
__attribute__((unused)) static inline unsigned long long atomicAnd(unsigned long long *address, unsigned long long val)
# 99 "/usr/include/sm_32_atomic_functions.hpp" 3
{int volatile ___ = 1;(void)address;(void)val;
# 101 "/usr/include/sm_32_atomic_functions.hpp" 3
::exit(___);}
# 103 "/usr/include/sm_32_atomic_functions.hpp" 3
__attribute__((unused)) static inline unsigned long long atomicOr(unsigned long long *address, unsigned long long val)
# 104 "/usr/include/sm_32_atomic_functions.hpp" 3
{int volatile ___ = 1;(void)address;(void)val;
# 106 "/usr/include/sm_32_atomic_functions.hpp" 3
::exit(___);}
# 108 "/usr/include/sm_32_atomic_functions.hpp" 3
__attribute__((unused)) static inline unsigned long long atomicXor(unsigned long long *address, unsigned long long val)
# 109 "/usr/include/sm_32_atomic_functions.hpp" 3
{int volatile ___ = 1;(void)address;(void)val;
# 111 "/usr/include/sm_32_atomic_functions.hpp" 3
::exit(___);}
# 1468 "/usr/include/sm_20_intrinsics.h" 3
__attribute__((unused)) static inline unsigned ballot(bool pred);
# 1470 "/usr/include/sm_20_intrinsics.h" 3
__attribute__((unused)) static inline int syncthreads_count(bool pred);
# 1472 "/usr/include/sm_20_intrinsics.h" 3
__attribute__((unused)) static inline bool syncthreads_and(bool pred);
# 1474 "/usr/include/sm_20_intrinsics.h" 3
__attribute__((unused)) static inline bool syncthreads_or(bool pred);
# 1479 "/usr/include/sm_20_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __isGlobal(const void * ptr);
# 77 "/usr/include/sm_20_intrinsics.hpp" 3
__attribute__((unused)) static inline unsigned ballot(bool pred)
# 78 "/usr/include/sm_20_intrinsics.hpp" 3
{int volatile ___ = 1;(void)pred;
# 80 "/usr/include/sm_20_intrinsics.hpp" 3
::exit(___);}
# 82 "/usr/include/sm_20_intrinsics.hpp" 3
__attribute__((unused)) static inline int syncthreads_count(bool pred)
# 83 "/usr/include/sm_20_intrinsics.hpp" 3
{int volatile ___ = 1;(void)pred;
# 85 "/usr/include/sm_20_intrinsics.hpp" 3
::exit(___);}
# 87 "/usr/include/sm_20_intrinsics.hpp" 3
__attribute__((unused)) static inline bool syncthreads_and(bool pred)
# 88 "/usr/include/sm_20_intrinsics.hpp" 3
{int volatile ___ = 1;(void)pred;
# 90 "/usr/include/sm_20_intrinsics.hpp" 3
::exit(___);}
# 92 "/usr/include/sm_20_intrinsics.hpp" 3
__attribute__((unused)) static inline bool syncthreads_or(bool pred)
# 93 "/usr/include/sm_20_intrinsics.hpp" 3
{int volatile ___ = 1;(void)pred;
# 95 "/usr/include/sm_20_intrinsics.hpp" 3
::exit(___);}
# 100 "/usr/include/sm_20_intrinsics.hpp" 3
__attribute__((unused)) static inline unsigned __isGlobal(const void *ptr)
# 101 "/usr/include/sm_20_intrinsics.hpp" 3
{int volatile ___ = 1;(void)ptr;
# 114 "/usr/include/sm_20_intrinsics.hpp" 3
::exit(___);}
# 91 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline int __shfl(int var, int srcLane, int width = 32);
# 93 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __shfl(unsigned var, int srcLane, int width = 32);
# 95 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline int __shfl_up(int var, unsigned delta, int width = 32);
# 96 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __shfl_up(unsigned var, unsigned delta, int width = 32);
# 98 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline int __shfl_down(int var, unsigned delta, int width = 32);
# 100 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __shfl_down(unsigned var, unsigned delta, int width = 32);
# 102 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline int __shfl_xor(int var, int laneMask, int width = 32);
# 104 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __shfl_xor(unsigned var, int laneMask, int width = 32);
# 106 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline float __shfl(float var, int srcLane, int width = 32);
# 108 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline float __shfl_up(float var, unsigned delta, int width = 32);
# 110 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline float __shfl_down(float var, unsigned delta, int width = 32);
# 112 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline float __shfl_xor(float var, int laneMask, int width = 32);
# 115 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline long long __shfl(long long var, int srcLane, int width = 32);
# 117 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long long __shfl(unsigned long long var, int srcLane, int width = 32);
# 119 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline long long __shfl_up(long long var, unsigned delta, int width = 32);
# 121 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long long __shfl_up(unsigned long long var, unsigned delta, int width = 32);
# 123 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline long long __shfl_down(long long var, unsigned delta, int width = 32);
# 125 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long long __shfl_down(unsigned long long var, unsigned delta, int width = 32);
# 127 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline long long __shfl_xor(long long var, int laneMask, int width = 32);
# 129 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long long __shfl_xor(unsigned long long var, int laneMask, int width = 32);
# 131 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline double __shfl(double var, int srcLane, int width = 32);
# 133 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline double __shfl_up(double var, unsigned delta, int width = 32);
# 135 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline double __shfl_down(double var, unsigned delta, int width = 32);
# 137 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline double __shfl_xor(double var, int laneMask, int width = 32);
# 141 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline long __shfl(long var, int srcLane, int width = 32);
# 143 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long __shfl(unsigned long var, int srcLane, int width = 32);
# 145 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline long __shfl_up(long var, unsigned delta, int width = 32);
# 147 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long __shfl_up(unsigned long var, unsigned delta, int width = 32);
# 149 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline long __shfl_down(long var, unsigned delta, int width = 32);
# 151 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long __shfl_down(unsigned long var, unsigned delta, int width = 32);
# 153 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline long __shfl_xor(long var, int laneMask, int width = 32);
# 155 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long __shfl_xor(unsigned long var, int laneMask, int width = 32);
# 99 "/usr/include/sm_30_intrinsics.hpp" 3
__attribute__((unused)) static inline int __shfl(int var, int srcLane, int width) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;
# 104 "/usr/include/sm_30_intrinsics.hpp" 3
::exit(___);}
# 106 "/usr/include/sm_30_intrinsics.hpp" 3
__attribute__((unused)) static inline unsigned __shfl(unsigned var, int srcLane, int width) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;
# 108 "/usr/include/sm_30_intrinsics.hpp" 3
::exit(___);}
# 110 "/usr/include/sm_30_intrinsics.hpp" 3
__attribute__((unused)) static inline int __shfl_up(int var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
# 115 "/usr/include/sm_30_intrinsics.hpp" 3
::exit(___);}
# 116 "/usr/include/sm_30_intrinsics.hpp" 3
__attribute__((unused)) static inline unsigned __shfl_up(unsigned var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
# 118 "/usr/include/sm_30_intrinsics.hpp" 3
::exit(___);}
# 120 "/usr/include/sm_30_intrinsics.hpp" 3
__attribute__((unused)) static inline int __shfl_down(int var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
# 125 "/usr/include/sm_30_intrinsics.hpp" 3
::exit(___);}
# 127 "/usr/include/sm_30_intrinsics.hpp" 3
__attribute__((unused)) static inline unsigned __shfl_down(unsigned var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
# 129 "/usr/include/sm_30_intrinsics.hpp" 3
::exit(___);}
# 131 "/usr/include/sm_30_intrinsics.hpp" 3
__attribute__((unused)) static inline int __shfl_xor(int var, int laneMask, int width) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;
# 136 "/usr/include/sm_30_intrinsics.hpp" 3
::exit(___);}
# 138 "/usr/include/sm_30_intrinsics.hpp" 3
__attribute__((unused)) static inline unsigned __shfl_xor(unsigned var, int laneMask, int width) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;
# 140 "/usr/include/sm_30_intrinsics.hpp" 3
::exit(___);}
# 142 "/usr/include/sm_30_intrinsics.hpp" 3
__attribute__((unused)) static inline float __shfl(float var, int srcLane, int width) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;
# 148 "/usr/include/sm_30_intrinsics.hpp" 3
::exit(___);}
# 150 "/usr/include/sm_30_intrinsics.hpp" 3
__attribute__((unused)) static inline float __shfl_up(float var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
# 156 "/usr/include/sm_30_intrinsics.hpp" 3
::exit(___);}
# 158 "/usr/include/sm_30_intrinsics.hpp" 3
__attribute__((unused)) static inline float __shfl_down(float var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
# 164 "/usr/include/sm_30_intrinsics.hpp" 3
::exit(___);}
# 166 "/usr/include/sm_30_intrinsics.hpp" 3
__attribute__((unused)) static inline float __shfl_xor(float var, int laneMask, int width) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;
# 172 "/usr/include/sm_30_intrinsics.hpp" 3
::exit(___);}
# 175 "/usr/include/sm_30_intrinsics.hpp" 3
__attribute__((unused)) static inline long long __shfl(long long var, int srcLane, int width) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;
# 182 "/usr/include/sm_30_intrinsics.hpp" 3
::exit(___);}
# 184 "/usr/include/sm_30_intrinsics.hpp" 3
__attribute__((unused)) static inline unsigned long long __shfl(unsigned long long var, int srcLane, int width) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;
# 186 "/usr/include/sm_30_intrinsics.hpp" 3
::exit(___);}
# 188 "/usr/include/sm_30_intrinsics.hpp" 3
__attribute__((unused)) static inline long long __shfl_up(long long var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
# 195 "/usr/include/sm_30_intrinsics.hpp" 3
::exit(___);}
# 197 "/usr/include/sm_30_intrinsics.hpp" 3
__attribute__((unused)) static inline unsigned long long __shfl_up(unsigned long long var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
# 199 "/usr/include/sm_30_intrinsics.hpp" 3
::exit(___);}
# 201 "/usr/include/sm_30_intrinsics.hpp" 3
__attribute__((unused)) static inline long long __shfl_down(long long var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
# 208 "/usr/include/sm_30_intrinsics.hpp" 3
::exit(___);}
# 210 "/usr/include/sm_30_intrinsics.hpp" 3
__attribute__((unused)) static inline unsigned long long __shfl_down(unsigned long long var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
# 212 "/usr/include/sm_30_intrinsics.hpp" 3
::exit(___);}
# 214 "/usr/include/sm_30_intrinsics.hpp" 3
__attribute__((unused)) static inline long long __shfl_xor(long long var, int laneMask, int width) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;
# 221 "/usr/include/sm_30_intrinsics.hpp" 3
::exit(___);}
# 223 "/usr/include/sm_30_intrinsics.hpp" 3
__attribute__((unused)) static inline unsigned long long __shfl_xor(unsigned long long var, int laneMask, int width) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;
# 225 "/usr/include/sm_30_intrinsics.hpp" 3
::exit(___);}
# 227 "/usr/include/sm_30_intrinsics.hpp" 3
__attribute__((unused)) static inline double __shfl(double var, int srcLane, int width) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;
# 234 "/usr/include/sm_30_intrinsics.hpp" 3
::exit(___);}
# 236 "/usr/include/sm_30_intrinsics.hpp" 3
__attribute__((unused)) static inline double __shfl_up(double var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
# 243 "/usr/include/sm_30_intrinsics.hpp" 3
::exit(___);}
# 245 "/usr/include/sm_30_intrinsics.hpp" 3
__attribute__((unused)) static inline double __shfl_down(double var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
# 252 "/usr/include/sm_30_intrinsics.hpp" 3
::exit(___);}
# 254 "/usr/include/sm_30_intrinsics.hpp" 3
__attribute__((unused)) static inline double __shfl_xor(double var, int laneMask, int width) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;
# 261 "/usr/include/sm_30_intrinsics.hpp" 3
::exit(___);}
# 265 "/usr/include/sm_30_intrinsics.hpp" 3
__attribute__((unused)) static inline long __shfl(long var, int srcLane, int width) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;
# 269 "/usr/include/sm_30_intrinsics.hpp" 3
::exit(___);}
# 271 "/usr/include/sm_30_intrinsics.hpp" 3
__attribute__((unused)) static inline unsigned long __shfl(unsigned long var, int srcLane, int width) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;
# 275 "/usr/include/sm_30_intrinsics.hpp" 3
::exit(___);}
# 277 "/usr/include/sm_30_intrinsics.hpp" 3
__attribute__((unused)) static inline long __shfl_up(long var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
# 281 "/usr/include/sm_30_intrinsics.hpp" 3
::exit(___);}
# 283 "/usr/include/sm_30_intrinsics.hpp" 3
__attribute__((unused)) static inline unsigned long __shfl_up(unsigned long var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
# 287 "/usr/include/sm_30_intrinsics.hpp" 3
::exit(___);}
# 289 "/usr/include/sm_30_intrinsics.hpp" 3
__attribute__((unused)) static inline long __shfl_down(long var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
# 293 "/usr/include/sm_30_intrinsics.hpp" 3
::exit(___);}
# 295 "/usr/include/sm_30_intrinsics.hpp" 3
__attribute__((unused)) static inline unsigned long __shfl_down(unsigned long var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
# 299 "/usr/include/sm_30_intrinsics.hpp" 3
::exit(___);}
# 301 "/usr/include/sm_30_intrinsics.hpp" 3
__attribute__((unused)) static inline long __shfl_xor(long var, int laneMask, int width) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;
# 305 "/usr/include/sm_30_intrinsics.hpp" 3
::exit(___);}
# 307 "/usr/include/sm_30_intrinsics.hpp" 3
__attribute__((unused)) static inline unsigned long __shfl_xor(unsigned long var, int laneMask, int width) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;
# 311 "/usr/include/sm_30_intrinsics.hpp" 3
::exit(___);}
# 80 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline long __ldg(const long * ptr);
# 81 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long __ldg(const unsigned long * ptr);
# 84 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline char __ldg(const char * ptr);
# 85 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline signed char __ldg(const signed char * ptr);
# 86 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline short __ldg(const short * ptr);
# 87 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline int __ldg(const int * ptr);
# 88 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline long long __ldg(const long long * ptr);
# 89 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline char2 __ldg(const char2 * ptr);
# 90 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline char4 __ldg(const char4 * ptr);
# 91 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline short2 __ldg(const short2 * ptr);
# 92 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline short4 __ldg(const short4 * ptr);
# 93 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline int2 __ldg(const int2 * ptr);
# 94 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline int4 __ldg(const int4 * ptr);
# 95 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline longlong2 __ldg(const longlong2 * ptr);
# 97 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned char __ldg(const unsigned char * ptr);
# 98 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned short __ldg(const unsigned short * ptr);
# 99 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __ldg(const unsigned * ptr);
# 100 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long long __ldg(const unsigned long long * ptr);
# 101 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline uchar2 __ldg(const uchar2 * ptr);
# 102 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline uchar4 __ldg(const uchar4 * ptr);
# 103 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline ushort2 __ldg(const ushort2 * ptr);
# 104 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline ushort4 __ldg(const ushort4 * ptr);
# 105 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline uint2 __ldg(const uint2 * ptr);
# 106 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline uint4 __ldg(const uint4 * ptr);
# 107 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline ulonglong2 __ldg(const ulonglong2 * ptr);
# 109 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline float __ldg(const float * ptr);
# 110 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline double __ldg(const double * ptr);
# 111 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline float2 __ldg(const float2 * ptr);
# 112 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline float4 __ldg(const float4 * ptr);
# 113 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline double2 __ldg(const double2 * ptr);
# 120 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __funnelshift_l(unsigned lo, unsigned hi, unsigned shift);
# 121 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __funnelshift_lc(unsigned lo, unsigned hi, unsigned shift);
# 124 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __funnelshift_r(unsigned lo, unsigned hi, unsigned shift);
# 125 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __funnelshift_rc(unsigned lo, unsigned hi, unsigned shift);
# 99 "/usr/include/sm_32_intrinsics.hpp" 3
__attribute__((unused)) static inline long __ldg(const long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 100 "/usr/include/sm_32_intrinsics.hpp" 3
__attribute__((unused)) static inline unsigned long __ldg(const unsigned long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 107 "/usr/include/sm_32_intrinsics.hpp" 3
__attribute__((unused)) static inline char __ldg(const char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 108 "/usr/include/sm_32_intrinsics.hpp" 3
__attribute__((unused)) static inline signed char __ldg(const signed char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 109 "/usr/include/sm_32_intrinsics.hpp" 3
__attribute__((unused)) static inline short __ldg(const short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 110 "/usr/include/sm_32_intrinsics.hpp" 3
__attribute__((unused)) static inline int __ldg(const int *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 111 "/usr/include/sm_32_intrinsics.hpp" 3
__attribute__((unused)) static inline long long __ldg(const long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 112 "/usr/include/sm_32_intrinsics.hpp" 3
__attribute__((unused)) static inline char2 __ldg(const char2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 113 "/usr/include/sm_32_intrinsics.hpp" 3
__attribute__((unused)) static inline char4 __ldg(const char4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 114 "/usr/include/sm_32_intrinsics.hpp" 3
__attribute__((unused)) static inline short2 __ldg(const short2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 115 "/usr/include/sm_32_intrinsics.hpp" 3
__attribute__((unused)) static inline short4 __ldg(const short4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 116 "/usr/include/sm_32_intrinsics.hpp" 3
__attribute__((unused)) static inline int2 __ldg(const int2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 117 "/usr/include/sm_32_intrinsics.hpp" 3
__attribute__((unused)) static inline int4 __ldg(const int4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 118 "/usr/include/sm_32_intrinsics.hpp" 3
__attribute__((unused)) static inline longlong2 __ldg(const longlong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 120 "/usr/include/sm_32_intrinsics.hpp" 3
__attribute__((unused)) static inline unsigned char __ldg(const unsigned char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 121 "/usr/include/sm_32_intrinsics.hpp" 3
__attribute__((unused)) static inline unsigned short __ldg(const unsigned short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 122 "/usr/include/sm_32_intrinsics.hpp" 3
__attribute__((unused)) static inline unsigned __ldg(const unsigned *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 123 "/usr/include/sm_32_intrinsics.hpp" 3
__attribute__((unused)) static inline unsigned long long __ldg(const unsigned long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 124 "/usr/include/sm_32_intrinsics.hpp" 3
__attribute__((unused)) static inline uchar2 __ldg(const uchar2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 125 "/usr/include/sm_32_intrinsics.hpp" 3
__attribute__((unused)) static inline uchar4 __ldg(const uchar4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 126 "/usr/include/sm_32_intrinsics.hpp" 3
__attribute__((unused)) static inline ushort2 __ldg(const ushort2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 127 "/usr/include/sm_32_intrinsics.hpp" 3
__attribute__((unused)) static inline ushort4 __ldg(const ushort4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 128 "/usr/include/sm_32_intrinsics.hpp" 3
__attribute__((unused)) static inline uint2 __ldg(const uint2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 129 "/usr/include/sm_32_intrinsics.hpp" 3
__attribute__((unused)) static inline uint4 __ldg(const uint4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 130 "/usr/include/sm_32_intrinsics.hpp" 3
__attribute__((unused)) static inline ulonglong2 __ldg(const ulonglong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 132 "/usr/include/sm_32_intrinsics.hpp" 3
__attribute__((unused)) static inline float __ldg(const float *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 133 "/usr/include/sm_32_intrinsics.hpp" 3
__attribute__((unused)) static inline double __ldg(const double *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 134 "/usr/include/sm_32_intrinsics.hpp" 3
__attribute__((unused)) static inline float2 __ldg(const float2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 135 "/usr/include/sm_32_intrinsics.hpp" 3
__attribute__((unused)) static inline float4 __ldg(const float4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 136 "/usr/include/sm_32_intrinsics.hpp" 3
__attribute__((unused)) static inline double2 __ldg(const double2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 145 "/usr/include/sm_32_intrinsics.hpp" 3
__attribute__((unused)) static inline unsigned __funnelshift_l(unsigned lo, unsigned hi, unsigned shift)
# 146 "/usr/include/sm_32_intrinsics.hpp" 3
{int volatile ___ = 1;(void)lo;(void)hi;(void)shift;
# 150 "/usr/include/sm_32_intrinsics.hpp" 3
::exit(___);}
# 151 "/usr/include/sm_32_intrinsics.hpp" 3
__attribute__((unused)) static inline unsigned __funnelshift_lc(unsigned lo, unsigned hi, unsigned shift)
# 152 "/usr/include/sm_32_intrinsics.hpp" 3
{int volatile ___ = 1;(void)lo;(void)hi;(void)shift;
# 156 "/usr/include/sm_32_intrinsics.hpp" 3
::exit(___);}
# 159 "/usr/include/sm_32_intrinsics.hpp" 3
__attribute__((unused)) static inline unsigned __funnelshift_r(unsigned lo, unsigned hi, unsigned shift)
# 160 "/usr/include/sm_32_intrinsics.hpp" 3
{int volatile ___ = 1;(void)lo;(void)hi;(void)shift;
# 164 "/usr/include/sm_32_intrinsics.hpp" 3
::exit(___);}
# 165 "/usr/include/sm_32_intrinsics.hpp" 3
__attribute__((unused)) static inline unsigned __funnelshift_rc(unsigned lo, unsigned hi, unsigned shift)
# 166 "/usr/include/sm_32_intrinsics.hpp" 3
{int volatile ___ = 1;(void)lo;(void)hi;(void)shift;
# 170 "/usr/include/sm_32_intrinsics.hpp" 3
::exit(___);}
# 112 "/usr/include/surface_functions.h" 3
template< class T>
# 113 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(T *res, surface< void, 1> surf, int x, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 114 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)s;(void)mode;
# 121 "/usr/include/surface_functions.h" 3
::exit(___);}
# 123 "/usr/include/surface_functions.h" 3
template< class T>
# 124 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline T surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 125 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 131 "/usr/include/surface_functions.h" 3
::exit(___);}
# 133 "/usr/include/surface_functions.h" 3
template< class T>
# 134 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(T *res, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 135 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)mode;
# 137 "/usr/include/surface_functions.h" 3
::exit(___);}
# 140 "/usr/include/surface_functions.h" 3
template<>
# 124 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 140 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline char surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 141 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 143 "/usr/include/surface_functions.h" 3
::exit(___);}
# 146 "/usr/include/surface_functions.h" 3
template<>
# 124 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 146 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline signed char surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 147 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 149 "/usr/include/surface_functions.h" 3
::exit(___);}
# 152 "/usr/include/surface_functions.h" 3
template<>
# 124 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 152 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline unsigned char surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 153 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 155 "/usr/include/surface_functions.h" 3
::exit(___);}
# 158 "/usr/include/surface_functions.h" 3
template<>
# 124 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 158 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline char1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 159 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 161 "/usr/include/surface_functions.h" 3
::exit(___);}
# 164 "/usr/include/surface_functions.h" 3
template<>
# 124 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 164 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline uchar1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 165 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 167 "/usr/include/surface_functions.h" 3
::exit(___);}
# 170 "/usr/include/surface_functions.h" 3
template<>
# 124 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 170 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline char2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 171 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 175 "/usr/include/surface_functions.h" 3
::exit(___);}
# 178 "/usr/include/surface_functions.h" 3
template<>
# 124 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 178 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline uchar2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 179 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 181 "/usr/include/surface_functions.h" 3
::exit(___);}
# 184 "/usr/include/surface_functions.h" 3
template<>
# 124 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 184 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline char4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 185 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 189 "/usr/include/surface_functions.h" 3
::exit(___);}
# 192 "/usr/include/surface_functions.h" 3
template<>
# 124 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 192 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline uchar4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 193 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 195 "/usr/include/surface_functions.h" 3
::exit(___);}
# 198 "/usr/include/surface_functions.h" 3
template<>
# 124 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 198 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline short surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 199 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 201 "/usr/include/surface_functions.h" 3
::exit(___);}
# 204 "/usr/include/surface_functions.h" 3
template<>
# 124 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 204 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline unsigned short surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 205 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 207 "/usr/include/surface_functions.h" 3
::exit(___);}
# 210 "/usr/include/surface_functions.h" 3
template<>
# 124 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 210 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline short1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 211 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 213 "/usr/include/surface_functions.h" 3
::exit(___);}
# 216 "/usr/include/surface_functions.h" 3
template<>
# 124 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 216 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline ushort1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 217 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 219 "/usr/include/surface_functions.h" 3
::exit(___);}
# 222 "/usr/include/surface_functions.h" 3
template<>
# 124 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 222 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline short2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 223 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 227 "/usr/include/surface_functions.h" 3
::exit(___);}
# 230 "/usr/include/surface_functions.h" 3
template<>
# 124 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 230 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline ushort2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 231 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 233 "/usr/include/surface_functions.h" 3
::exit(___);}
# 236 "/usr/include/surface_functions.h" 3
template<>
# 124 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 236 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline short4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 237 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 241 "/usr/include/surface_functions.h" 3
::exit(___);}
# 244 "/usr/include/surface_functions.h" 3
template<>
# 124 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 244 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline ushort4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 245 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 247 "/usr/include/surface_functions.h" 3
::exit(___);}
# 250 "/usr/include/surface_functions.h" 3
template<>
# 124 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 250 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline int surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 251 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 253 "/usr/include/surface_functions.h" 3
::exit(___);}
# 256 "/usr/include/surface_functions.h" 3
template<>
# 124 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 256 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline unsigned surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 257 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 259 "/usr/include/surface_functions.h" 3
::exit(___);}
# 262 "/usr/include/surface_functions.h" 3
template<>
# 124 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 262 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline int1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 263 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 265 "/usr/include/surface_functions.h" 3
::exit(___);}
# 268 "/usr/include/surface_functions.h" 3
template<>
# 124 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 268 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline uint1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 269 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 271 "/usr/include/surface_functions.h" 3
::exit(___);}
# 274 "/usr/include/surface_functions.h" 3
template<>
# 124 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 274 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline int2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 275 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 279 "/usr/include/surface_functions.h" 3
::exit(___);}
# 282 "/usr/include/surface_functions.h" 3
template<>
# 124 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 282 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline uint2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 283 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 285 "/usr/include/surface_functions.h" 3
::exit(___);}
# 288 "/usr/include/surface_functions.h" 3
template<>
# 124 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 288 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline int4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 289 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 293 "/usr/include/surface_functions.h" 3
::exit(___);}
# 296 "/usr/include/surface_functions.h" 3
template<>
# 124 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 296 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline uint4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 297 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 299 "/usr/include/surface_functions.h" 3
::exit(___);}
# 302 "/usr/include/surface_functions.h" 3
template<>
# 124 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 302 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline long long surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 303 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 305 "/usr/include/surface_functions.h" 3
::exit(___);}
# 308 "/usr/include/surface_functions.h" 3
template<>
# 124 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 308 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline unsigned long long surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 309 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 311 "/usr/include/surface_functions.h" 3
::exit(___);}
# 314 "/usr/include/surface_functions.h" 3
template<>
# 124 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 314 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline longlong1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 315 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 317 "/usr/include/surface_functions.h" 3
::exit(___);}
# 320 "/usr/include/surface_functions.h" 3
template<>
# 124 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 320 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline ulonglong1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 321 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 323 "/usr/include/surface_functions.h" 3
::exit(___);}
# 326 "/usr/include/surface_functions.h" 3
template<>
# 124 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 326 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline longlong2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 327 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 331 "/usr/include/surface_functions.h" 3
::exit(___);}
# 334 "/usr/include/surface_functions.h" 3
template<>
# 124 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 334 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline ulonglong2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 335 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 337 "/usr/include/surface_functions.h" 3
::exit(___);}
# 400 "/usr/include/surface_functions.h" 3
template<>
# 124 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 400 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline float surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 401 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 403 "/usr/include/surface_functions.h" 3
::exit(___);}
# 406 "/usr/include/surface_functions.h" 3
template<>
# 124 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 406 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline float1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 407 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 409 "/usr/include/surface_functions.h" 3
::exit(___);}
# 412 "/usr/include/surface_functions.h" 3
template<>
# 124 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 412 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline float2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 413 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 417 "/usr/include/surface_functions.h" 3
::exit(___);}
# 420 "/usr/include/surface_functions.h" 3
template<>
# 124 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 420 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline float4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 421 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 425 "/usr/include/surface_functions.h" 3
::exit(___);}
# 460 "/usr/include/surface_functions.h" 3
template< class T>
# 461 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(T *res, surface< void, 2> surf, int x, int y, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 462 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)s;(void)mode;
# 469 "/usr/include/surface_functions.h" 3
::exit(___);}
# 471 "/usr/include/surface_functions.h" 3
template< class T>
# 472 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline T surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 473 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 479 "/usr/include/surface_functions.h" 3
::exit(___);}
# 481 "/usr/include/surface_functions.h" 3
template< class T>
# 482 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(T *res, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 483 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)mode;
# 485 "/usr/include/surface_functions.h" 3
::exit(___);}
# 488 "/usr/include/surface_functions.h" 3
template<>
# 472 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 488 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline char surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 489 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 491 "/usr/include/surface_functions.h" 3
::exit(___);}
# 494 "/usr/include/surface_functions.h" 3
template<>
# 472 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 494 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline signed char surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 495 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 497 "/usr/include/surface_functions.h" 3
::exit(___);}
# 500 "/usr/include/surface_functions.h" 3
template<>
# 472 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 500 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline unsigned char surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 501 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 503 "/usr/include/surface_functions.h" 3
::exit(___);}
# 506 "/usr/include/surface_functions.h" 3
template<>
# 472 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 506 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline char1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 507 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 509 "/usr/include/surface_functions.h" 3
::exit(___);}
# 512 "/usr/include/surface_functions.h" 3
template<>
# 472 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 512 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline uchar1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 513 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 515 "/usr/include/surface_functions.h" 3
::exit(___);}
# 518 "/usr/include/surface_functions.h" 3
template<>
# 472 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 518 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline char2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 519 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 523 "/usr/include/surface_functions.h" 3
::exit(___);}
# 526 "/usr/include/surface_functions.h" 3
template<>
# 472 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 526 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline uchar2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 527 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 529 "/usr/include/surface_functions.h" 3
::exit(___);}
# 532 "/usr/include/surface_functions.h" 3
template<>
# 472 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 532 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline char4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 533 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 537 "/usr/include/surface_functions.h" 3
::exit(___);}
# 540 "/usr/include/surface_functions.h" 3
template<>
# 472 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 540 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline uchar4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 541 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 543 "/usr/include/surface_functions.h" 3
::exit(___);}
# 546 "/usr/include/surface_functions.h" 3
template<>
# 472 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 546 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline short surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 547 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 549 "/usr/include/surface_functions.h" 3
::exit(___);}
# 552 "/usr/include/surface_functions.h" 3
template<>
# 472 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 552 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline unsigned short surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 553 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 555 "/usr/include/surface_functions.h" 3
::exit(___);}
# 558 "/usr/include/surface_functions.h" 3
template<>
# 472 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 558 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline short1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 559 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 561 "/usr/include/surface_functions.h" 3
::exit(___);}
# 564 "/usr/include/surface_functions.h" 3
template<>
# 472 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 564 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline ushort1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 565 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 567 "/usr/include/surface_functions.h" 3
::exit(___);}
# 570 "/usr/include/surface_functions.h" 3
template<>
# 472 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 570 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline short2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 571 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 575 "/usr/include/surface_functions.h" 3
::exit(___);}
# 578 "/usr/include/surface_functions.h" 3
template<>
# 472 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 578 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline ushort2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 579 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 581 "/usr/include/surface_functions.h" 3
::exit(___);}
# 584 "/usr/include/surface_functions.h" 3
template<>
# 472 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 584 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline short4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 585 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 589 "/usr/include/surface_functions.h" 3
::exit(___);}
# 592 "/usr/include/surface_functions.h" 3
template<>
# 472 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 592 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline ushort4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 593 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 595 "/usr/include/surface_functions.h" 3
::exit(___);}
# 598 "/usr/include/surface_functions.h" 3
template<>
# 472 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 598 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline int surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 599 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 601 "/usr/include/surface_functions.h" 3
::exit(___);}
# 604 "/usr/include/surface_functions.h" 3
template<>
# 472 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 604 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline unsigned surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 605 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 607 "/usr/include/surface_functions.h" 3
::exit(___);}
# 610 "/usr/include/surface_functions.h" 3
template<>
# 472 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 610 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline int1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 611 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 613 "/usr/include/surface_functions.h" 3
::exit(___);}
# 616 "/usr/include/surface_functions.h" 3
template<>
# 472 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 616 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline uint1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 617 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 619 "/usr/include/surface_functions.h" 3
::exit(___);}
# 622 "/usr/include/surface_functions.h" 3
template<>
# 472 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 622 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline int2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 623 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 627 "/usr/include/surface_functions.h" 3
::exit(___);}
# 630 "/usr/include/surface_functions.h" 3
template<>
# 472 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 630 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline uint2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 631 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 633 "/usr/include/surface_functions.h" 3
::exit(___);}
# 636 "/usr/include/surface_functions.h" 3
template<>
# 472 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 636 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline int4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 637 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 641 "/usr/include/surface_functions.h" 3
::exit(___);}
# 644 "/usr/include/surface_functions.h" 3
template<>
# 472 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 644 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline uint4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 645 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 647 "/usr/include/surface_functions.h" 3
::exit(___);}
# 650 "/usr/include/surface_functions.h" 3
template<>
# 472 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 650 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline long long surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 651 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 653 "/usr/include/surface_functions.h" 3
::exit(___);}
# 656 "/usr/include/surface_functions.h" 3
template<>
# 472 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 656 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline unsigned long long surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 657 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 659 "/usr/include/surface_functions.h" 3
::exit(___);}
# 662 "/usr/include/surface_functions.h" 3
template<>
# 472 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 662 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline longlong1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 663 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 665 "/usr/include/surface_functions.h" 3
::exit(___);}
# 668 "/usr/include/surface_functions.h" 3
template<>
# 472 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 668 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline ulonglong1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 669 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 671 "/usr/include/surface_functions.h" 3
::exit(___);}
# 674 "/usr/include/surface_functions.h" 3
template<>
# 472 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 674 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline longlong2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 675 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 679 "/usr/include/surface_functions.h" 3
::exit(___);}
# 682 "/usr/include/surface_functions.h" 3
template<>
# 472 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 682 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline ulonglong2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 683 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 685 "/usr/include/surface_functions.h" 3
::exit(___);}
# 748 "/usr/include/surface_functions.h" 3
template<>
# 472 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 748 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline float surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 749 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 751 "/usr/include/surface_functions.h" 3
::exit(___);}
# 754 "/usr/include/surface_functions.h" 3
template<>
# 472 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 754 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline float1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 755 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 757 "/usr/include/surface_functions.h" 3
::exit(___);}
# 760 "/usr/include/surface_functions.h" 3
template<>
# 472 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 760 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline float2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 761 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 765 "/usr/include/surface_functions.h" 3
::exit(___);}
# 768 "/usr/include/surface_functions.h" 3
template<>
# 472 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 768 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline float4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 769 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 773 "/usr/include/surface_functions.h" 3
::exit(___);}
# 808 "/usr/include/surface_functions.h" 3
template< class T>
# 809 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(T *res, surface< void, 3> surf, int x, int y, int z, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 810 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)z;(void)s;(void)mode;
# 817 "/usr/include/surface_functions.h" 3
::exit(___);}
# 819 "/usr/include/surface_functions.h" 3
template< class T>
# 820 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline T surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 821 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 827 "/usr/include/surface_functions.h" 3
::exit(___);}
# 829 "/usr/include/surface_functions.h" 3
template< class T>
# 830 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(T *res, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 831 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 833 "/usr/include/surface_functions.h" 3
::exit(___);}
# 836 "/usr/include/surface_functions.h" 3
template<>
# 820 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 836 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline char surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 837 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 839 "/usr/include/surface_functions.h" 3
::exit(___);}
# 842 "/usr/include/surface_functions.h" 3
template<>
# 820 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 842 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline signed char surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 843 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 845 "/usr/include/surface_functions.h" 3
::exit(___);}
# 848 "/usr/include/surface_functions.h" 3
template<>
# 820 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 848 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline unsigned char surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 849 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 851 "/usr/include/surface_functions.h" 3
::exit(___);}
# 854 "/usr/include/surface_functions.h" 3
template<>
# 820 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 854 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline char1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 855 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 857 "/usr/include/surface_functions.h" 3
::exit(___);}
# 860 "/usr/include/surface_functions.h" 3
template<>
# 820 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 860 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline uchar1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 861 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 863 "/usr/include/surface_functions.h" 3
::exit(___);}
# 866 "/usr/include/surface_functions.h" 3
template<>
# 820 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 866 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline char2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 867 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 871 "/usr/include/surface_functions.h" 3
::exit(___);}
# 874 "/usr/include/surface_functions.h" 3
template<>
# 820 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 874 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline uchar2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 875 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 877 "/usr/include/surface_functions.h" 3
::exit(___);}
# 880 "/usr/include/surface_functions.h" 3
template<>
# 820 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 880 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline char4 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 881 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 885 "/usr/include/surface_functions.h" 3
::exit(___);}
# 888 "/usr/include/surface_functions.h" 3
template<>
# 820 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 888 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline uchar4 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 889 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 891 "/usr/include/surface_functions.h" 3
::exit(___);}
# 894 "/usr/include/surface_functions.h" 3
template<>
# 820 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 894 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline short surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 895 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 897 "/usr/include/surface_functions.h" 3
::exit(___);}
# 900 "/usr/include/surface_functions.h" 3
template<>
# 820 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 900 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline unsigned short surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 901 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 903 "/usr/include/surface_functions.h" 3
::exit(___);}
# 906 "/usr/include/surface_functions.h" 3
template<>
# 820 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 906 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline short1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 907 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 909 "/usr/include/surface_functions.h" 3
::exit(___);}
# 912 "/usr/include/surface_functions.h" 3
template<>
# 820 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 912 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline ushort1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 913 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 915 "/usr/include/surface_functions.h" 3
::exit(___);}
# 918 "/usr/include/surface_functions.h" 3
template<>
# 820 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 918 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline short2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 919 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 923 "/usr/include/surface_functions.h" 3
::exit(___);}
# 926 "/usr/include/surface_functions.h" 3
template<>
# 820 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 926 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline ushort2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 927 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 929 "/usr/include/surface_functions.h" 3
::exit(___);}
# 932 "/usr/include/surface_functions.h" 3
template<>
# 820 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 932 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline short4 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 933 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 937 "/usr/include/surface_functions.h" 3
::exit(___);}
# 940 "/usr/include/surface_functions.h" 3
template<>
# 820 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 940 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline ushort4 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 941 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 943 "/usr/include/surface_functions.h" 3
::exit(___);}
# 946 "/usr/include/surface_functions.h" 3
template<>
# 820 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 946 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline int surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 947 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 949 "/usr/include/surface_functions.h" 3
::exit(___);}
# 952 "/usr/include/surface_functions.h" 3
template<>
# 820 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 952 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline unsigned surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 953 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 955 "/usr/include/surface_functions.h" 3
::exit(___);}
# 958 "/usr/include/surface_functions.h" 3
template<>
# 820 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 958 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline int1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 959 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 961 "/usr/include/surface_functions.h" 3
::exit(___);}
# 964 "/usr/include/surface_functions.h" 3
template<>
# 820 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 964 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline uint1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 965 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 967 "/usr/include/surface_functions.h" 3
::exit(___);}
# 970 "/usr/include/surface_functions.h" 3
template<>
# 820 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 970 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline int2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 971 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 975 "/usr/include/surface_functions.h" 3
::exit(___);}
# 978 "/usr/include/surface_functions.h" 3
template<>
# 820 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 978 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline uint2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 979 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 981 "/usr/include/surface_functions.h" 3
::exit(___);}
# 984 "/usr/include/surface_functions.h" 3
template<>
# 820 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 984 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline int4 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 985 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 989 "/usr/include/surface_functions.h" 3
::exit(___);}
# 992 "/usr/include/surface_functions.h" 3
template<>
# 820 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 992 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline uint4 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 993 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 995 "/usr/include/surface_functions.h" 3
::exit(___);}
# 998 "/usr/include/surface_functions.h" 3
template<>
# 820 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 998 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline long long surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 999 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1001 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1004 "/usr/include/surface_functions.h" 3
template<>
# 820 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1004 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline unsigned long long surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 1005 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1007 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1010 "/usr/include/surface_functions.h" 3
template<>
# 820 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1010 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline longlong1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 1011 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1013 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1016 "/usr/include/surface_functions.h" 3
template<>
# 820 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1016 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline ulonglong1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 1017 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1019 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1022 "/usr/include/surface_functions.h" 3
template<>
# 820 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1022 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline longlong2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 1023 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1027 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1030 "/usr/include/surface_functions.h" 3
template<>
# 820 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1030 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline ulonglong2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 1031 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1033 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1096 "/usr/include/surface_functions.h" 3
template<>
# 820 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1096 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline float surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 1097 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1099 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1102 "/usr/include/surface_functions.h" 3
template<>
# 820 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1102 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline float1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 1103 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1105 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1108 "/usr/include/surface_functions.h" 3
template<>
# 820 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1108 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline float2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 1109 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1113 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1116 "/usr/include/surface_functions.h" 3
template<>
# 820 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1116 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline float4 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 1117 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1121 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1156 "/usr/include/surface_functions.h" 3
template< class T>
# 1157 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(T *res, surface< void, 241> surf, int x, int layer, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1158 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)layer;(void)s;(void)mode;
# 1165 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1167 "/usr/include/surface_functions.h" 3
template< class T>
# 1168 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline T surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1169 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1175 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1177 "/usr/include/surface_functions.h" 3
template< class T>
# 1178 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(T *res, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1179 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)layer;(void)mode;
# 1181 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1184 "/usr/include/surface_functions.h" 3
template<>
# 1168 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1184 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline char surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1185 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1187 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1190 "/usr/include/surface_functions.h" 3
template<>
# 1168 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1190 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline signed char surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1191 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1193 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1196 "/usr/include/surface_functions.h" 3
template<>
# 1168 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1196 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline unsigned char surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1197 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1199 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1202 "/usr/include/surface_functions.h" 3
template<>
# 1168 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1202 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline char1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1203 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1205 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1208 "/usr/include/surface_functions.h" 3
template<>
# 1168 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1208 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline uchar1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1209 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1211 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1214 "/usr/include/surface_functions.h" 3
template<>
# 1168 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1214 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline char2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1215 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1219 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1222 "/usr/include/surface_functions.h" 3
template<>
# 1168 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1222 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline uchar2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1223 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1225 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1228 "/usr/include/surface_functions.h" 3
template<>
# 1168 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1228 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline char4 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1229 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1233 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1236 "/usr/include/surface_functions.h" 3
template<>
# 1168 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1236 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline uchar4 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1237 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1239 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1242 "/usr/include/surface_functions.h" 3
template<>
# 1168 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1242 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline short surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1243 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1245 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1248 "/usr/include/surface_functions.h" 3
template<>
# 1168 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1248 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline unsigned short surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1249 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1251 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1254 "/usr/include/surface_functions.h" 3
template<>
# 1168 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1254 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline short1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1255 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1257 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1260 "/usr/include/surface_functions.h" 3
template<>
# 1168 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1260 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline ushort1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1261 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1263 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1266 "/usr/include/surface_functions.h" 3
template<>
# 1168 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1266 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline short2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1267 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1271 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1274 "/usr/include/surface_functions.h" 3
template<>
# 1168 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1274 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline ushort2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1275 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1277 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1280 "/usr/include/surface_functions.h" 3
template<>
# 1168 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1280 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline short4 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1281 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1285 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1288 "/usr/include/surface_functions.h" 3
template<>
# 1168 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1288 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline ushort4 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1289 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1291 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1294 "/usr/include/surface_functions.h" 3
template<>
# 1168 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1294 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline int surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1295 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1297 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1300 "/usr/include/surface_functions.h" 3
template<>
# 1168 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1300 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline unsigned surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1301 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1303 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1306 "/usr/include/surface_functions.h" 3
template<>
# 1168 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1306 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline int1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1307 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1309 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1312 "/usr/include/surface_functions.h" 3
template<>
# 1168 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1312 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline uint1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1313 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1315 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1318 "/usr/include/surface_functions.h" 3
template<>
# 1168 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1318 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline int2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1319 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1323 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1326 "/usr/include/surface_functions.h" 3
template<>
# 1168 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1326 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline uint2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1327 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1329 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1332 "/usr/include/surface_functions.h" 3
template<>
# 1168 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1332 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline int4 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1333 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1337 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1340 "/usr/include/surface_functions.h" 3
template<>
# 1168 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1340 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline uint4 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1341 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1343 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1346 "/usr/include/surface_functions.h" 3
template<>
# 1168 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1346 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline long long surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1347 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1349 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1352 "/usr/include/surface_functions.h" 3
template<>
# 1168 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1352 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline unsigned long long surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1353 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1355 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1358 "/usr/include/surface_functions.h" 3
template<>
# 1168 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1358 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline longlong1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1359 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1361 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1364 "/usr/include/surface_functions.h" 3
template<>
# 1168 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1364 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline ulonglong1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1365 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1367 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1370 "/usr/include/surface_functions.h" 3
template<>
# 1168 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1370 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline longlong2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1371 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1375 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1378 "/usr/include/surface_functions.h" 3
template<>
# 1168 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1378 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline ulonglong2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1379 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1381 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1444 "/usr/include/surface_functions.h" 3
template<>
# 1168 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1444 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline float surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1445 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1447 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1450 "/usr/include/surface_functions.h" 3
template<>
# 1168 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1450 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline float1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1451 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1453 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1456 "/usr/include/surface_functions.h" 3
template<>
# 1168 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1456 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline float2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1457 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1461 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1464 "/usr/include/surface_functions.h" 3
template<>
# 1168 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1464 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline float4 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1465 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1469 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1515 "/usr/include/surface_functions.h" 3
template< class T>
# 1516 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(T *res, surface< void, 242> surf, int x, int y, int layer, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1517 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layer;(void)s;(void)mode;
# 1524 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1526 "/usr/include/surface_functions.h" 3
template< class T>
# 1527 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline T surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1528 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1534 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1536 "/usr/include/surface_functions.h" 3
template< class T>
# 1537 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(T *res, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1538 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1540 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1543 "/usr/include/surface_functions.h" 3
template<>
# 1527 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1543 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline char surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1544 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1546 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1549 "/usr/include/surface_functions.h" 3
template<>
# 1527 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1549 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline signed char surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1550 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1552 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1555 "/usr/include/surface_functions.h" 3
template<>
# 1527 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1555 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline unsigned char surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1556 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1558 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1561 "/usr/include/surface_functions.h" 3
template<>
# 1527 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1561 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline char1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1562 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1564 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1567 "/usr/include/surface_functions.h" 3
template<>
# 1527 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1567 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline uchar1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1568 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1570 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1573 "/usr/include/surface_functions.h" 3
template<>
# 1527 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1573 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline char2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1574 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1578 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1581 "/usr/include/surface_functions.h" 3
template<>
# 1527 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1581 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline uchar2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1582 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1584 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1587 "/usr/include/surface_functions.h" 3
template<>
# 1527 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1587 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline char4 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1588 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1592 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1595 "/usr/include/surface_functions.h" 3
template<>
# 1527 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1595 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline uchar4 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1596 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1598 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1601 "/usr/include/surface_functions.h" 3
template<>
# 1527 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1601 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline short surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1602 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1604 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1607 "/usr/include/surface_functions.h" 3
template<>
# 1527 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1607 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline unsigned short surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1608 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1610 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1613 "/usr/include/surface_functions.h" 3
template<>
# 1527 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1613 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline short1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1614 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1616 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1619 "/usr/include/surface_functions.h" 3
template<>
# 1527 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1619 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline ushort1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1620 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1622 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1625 "/usr/include/surface_functions.h" 3
template<>
# 1527 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1625 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline short2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1626 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1630 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1633 "/usr/include/surface_functions.h" 3
template<>
# 1527 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1633 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline ushort2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1634 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1636 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1639 "/usr/include/surface_functions.h" 3
template<>
# 1527 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1639 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline short4 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1640 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1644 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1647 "/usr/include/surface_functions.h" 3
template<>
# 1527 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1647 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline ushort4 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1648 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1650 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1653 "/usr/include/surface_functions.h" 3
template<>
# 1527 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1653 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline int surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1654 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1656 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1659 "/usr/include/surface_functions.h" 3
template<>
# 1527 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1659 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline unsigned surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1660 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1662 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1665 "/usr/include/surface_functions.h" 3
template<>
# 1527 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1665 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline int1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1666 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1668 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1671 "/usr/include/surface_functions.h" 3
template<>
# 1527 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1671 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline uint1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1672 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1674 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1677 "/usr/include/surface_functions.h" 3
template<>
# 1527 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1677 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline int2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1678 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1682 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1685 "/usr/include/surface_functions.h" 3
template<>
# 1527 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1685 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline uint2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1686 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1688 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1691 "/usr/include/surface_functions.h" 3
template<>
# 1527 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1691 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline int4 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1692 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1696 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1699 "/usr/include/surface_functions.h" 3
template<>
# 1527 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1699 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline uint4 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1700 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1702 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1705 "/usr/include/surface_functions.h" 3
template<>
# 1527 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1705 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline long long surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1706 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1708 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1711 "/usr/include/surface_functions.h" 3
template<>
# 1527 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1711 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline unsigned long long surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1712 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1714 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1717 "/usr/include/surface_functions.h" 3
template<>
# 1527 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1717 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline longlong1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1718 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1720 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1723 "/usr/include/surface_functions.h" 3
template<>
# 1527 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1723 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline ulonglong1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1724 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1726 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1729 "/usr/include/surface_functions.h" 3
template<>
# 1527 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1729 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline longlong2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1730 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1734 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1737 "/usr/include/surface_functions.h" 3
template<>
# 1527 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1737 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline ulonglong2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1738 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1740 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1803 "/usr/include/surface_functions.h" 3
template<>
# 1527 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1803 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline float surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1804 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1806 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1809 "/usr/include/surface_functions.h" 3
template<>
# 1527 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1809 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline float1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1810 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1812 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1815 "/usr/include/surface_functions.h" 3
template<>
# 1527 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1815 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline float2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1816 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1820 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1823 "/usr/include/surface_functions.h" 3
template<>
# 1527 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1823 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline float4 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1824 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1828 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1851 "/usr/include/surface_functions.h" 3
template< class T>
# 1852 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(T *res, surface< void, 12> surf, int x, int y, int face, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1853 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)face;(void)s;(void)mode;
# 1860 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1862 "/usr/include/surface_functions.h" 3
template< class T>
# 1863 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline T surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1864 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1870 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1872 "/usr/include/surface_functions.h" 3
template< class T>
# 1873 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(T *res, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1874 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1876 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1879 "/usr/include/surface_functions.h" 3
template<>
# 1863 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1879 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline char surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1880 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1882 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1885 "/usr/include/surface_functions.h" 3
template<>
# 1863 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1885 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline signed char surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1886 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1888 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1891 "/usr/include/surface_functions.h" 3
template<>
# 1863 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1891 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline unsigned char surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1892 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1894 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1897 "/usr/include/surface_functions.h" 3
template<>
# 1863 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1897 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline char1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1898 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1900 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1903 "/usr/include/surface_functions.h" 3
template<>
# 1863 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1903 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline uchar1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1904 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1906 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1909 "/usr/include/surface_functions.h" 3
template<>
# 1863 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1909 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline char2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1910 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1914 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1917 "/usr/include/surface_functions.h" 3
template<>
# 1863 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1917 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline uchar2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1918 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1920 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1923 "/usr/include/surface_functions.h" 3
template<>
# 1863 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1923 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline char4 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1924 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1928 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1931 "/usr/include/surface_functions.h" 3
template<>
# 1863 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1931 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline uchar4 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1932 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1934 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1937 "/usr/include/surface_functions.h" 3
template<>
# 1863 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1937 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline short surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1938 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1940 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1943 "/usr/include/surface_functions.h" 3
template<>
# 1863 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1943 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline unsigned short surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1944 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1946 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1949 "/usr/include/surface_functions.h" 3
template<>
# 1863 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1949 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline short1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1950 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1952 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1955 "/usr/include/surface_functions.h" 3
template<>
# 1863 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1955 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline ushort1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1956 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1958 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1961 "/usr/include/surface_functions.h" 3
template<>
# 1863 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1961 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline short2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1962 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1966 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1969 "/usr/include/surface_functions.h" 3
template<>
# 1863 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1969 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline ushort2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1970 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1972 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1975 "/usr/include/surface_functions.h" 3
template<>
# 1863 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1975 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline short4 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1976 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1980 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1983 "/usr/include/surface_functions.h" 3
template<>
# 1863 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1983 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline ushort4 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1984 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1986 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1989 "/usr/include/surface_functions.h" 3
template<>
# 1863 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1989 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline int surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1990 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1992 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1995 "/usr/include/surface_functions.h" 3
template<>
# 1863 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 1995 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline unsigned surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1996 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1998 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2001 "/usr/include/surface_functions.h" 3
template<>
# 1863 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 2001 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline int1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2002 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2004 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2007 "/usr/include/surface_functions.h" 3
template<>
# 1863 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 2007 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline uint1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2008 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2010 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2013 "/usr/include/surface_functions.h" 3
template<>
# 1863 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 2013 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline int2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2014 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2018 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2021 "/usr/include/surface_functions.h" 3
template<>
# 1863 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 2021 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline uint2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2022 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2024 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2027 "/usr/include/surface_functions.h" 3
template<>
# 1863 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 2027 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline int4 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2028 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2032 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2035 "/usr/include/surface_functions.h" 3
template<>
# 1863 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 2035 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline uint4 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2036 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2038 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2041 "/usr/include/surface_functions.h" 3
template<>
# 1863 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 2041 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline long long surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2042 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2044 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2047 "/usr/include/surface_functions.h" 3
template<>
# 1863 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 2047 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline unsigned long long surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2048 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2050 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2053 "/usr/include/surface_functions.h" 3
template<>
# 1863 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 2053 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline longlong1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2054 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2056 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2059 "/usr/include/surface_functions.h" 3
template<>
# 1863 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 2059 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline ulonglong1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2060 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2062 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2065 "/usr/include/surface_functions.h" 3
template<>
# 1863 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 2065 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline longlong2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2066 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2070 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2073 "/usr/include/surface_functions.h" 3
template<>
# 1863 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 2073 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline ulonglong2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2074 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2076 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2139 "/usr/include/surface_functions.h" 3
template<>
# 1863 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 2139 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline float surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2140 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2142 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2145 "/usr/include/surface_functions.h" 3
template<>
# 1863 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 2145 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline float1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2146 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2148 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2151 "/usr/include/surface_functions.h" 3
template<>
# 1863 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 2151 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline float2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2152 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2156 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2159 "/usr/include/surface_functions.h" 3
template<>
# 1863 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 2159 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline float4 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2160 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2164 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2188 "/usr/include/surface_functions.h" 3
template< class T>
# 2189 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(T *res, surface< void, 252> surf, int x, int y, int layerFace, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2190 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layerFace;(void)s;(void)mode;
# 2197 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2199 "/usr/include/surface_functions.h" 3
template< class T>
# 2200 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline T surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2201 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2207 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2209 "/usr/include/surface_functions.h" 3
template< class T>
# 2210 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(T *res, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2211 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2213 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2216 "/usr/include/surface_functions.h" 3
template<>
# 2200 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 2216 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline char surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2217 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2219 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2222 "/usr/include/surface_functions.h" 3
template<>
# 2200 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 2222 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline signed char surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2223 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2225 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2228 "/usr/include/surface_functions.h" 3
template<>
# 2200 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 2228 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline unsigned char surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2229 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2231 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2234 "/usr/include/surface_functions.h" 3
template<>
# 2200 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 2234 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline char1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2235 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2237 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2240 "/usr/include/surface_functions.h" 3
template<>
# 2200 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 2240 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline uchar1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2241 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2243 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2246 "/usr/include/surface_functions.h" 3
template<>
# 2200 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 2246 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline char2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2247 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2251 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2254 "/usr/include/surface_functions.h" 3
template<>
# 2200 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 2254 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline uchar2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2255 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2257 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2260 "/usr/include/surface_functions.h" 3
template<>
# 2200 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 2260 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline char4 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2261 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2265 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2268 "/usr/include/surface_functions.h" 3
template<>
# 2200 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 2268 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline uchar4 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2269 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2271 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2274 "/usr/include/surface_functions.h" 3
template<>
# 2200 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 2274 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline short surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2275 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2277 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2280 "/usr/include/surface_functions.h" 3
template<>
# 2200 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 2280 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline unsigned short surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2281 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2283 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2286 "/usr/include/surface_functions.h" 3
template<>
# 2200 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 2286 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline short1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2287 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2289 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2292 "/usr/include/surface_functions.h" 3
template<>
# 2200 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 2292 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline ushort1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2293 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2295 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2298 "/usr/include/surface_functions.h" 3
template<>
# 2200 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 2298 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline short2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2299 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2303 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2306 "/usr/include/surface_functions.h" 3
template<>
# 2200 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 2306 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline ushort2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2307 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2309 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2312 "/usr/include/surface_functions.h" 3
template<>
# 2200 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 2312 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline short4 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2313 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2317 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2320 "/usr/include/surface_functions.h" 3
template<>
# 2200 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 2320 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline ushort4 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2321 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2323 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2326 "/usr/include/surface_functions.h" 3
template<>
# 2200 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 2326 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline int surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2327 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2329 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2332 "/usr/include/surface_functions.h" 3
template<>
# 2200 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 2332 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline unsigned surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2333 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2335 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2338 "/usr/include/surface_functions.h" 3
template<>
# 2200 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 2338 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline int1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2339 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2341 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2344 "/usr/include/surface_functions.h" 3
template<>
# 2200 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 2344 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline uint1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2345 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2347 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2350 "/usr/include/surface_functions.h" 3
template<>
# 2200 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 2350 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline int2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2351 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2355 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2358 "/usr/include/surface_functions.h" 3
template<>
# 2200 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 2358 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline uint2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2359 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2361 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2364 "/usr/include/surface_functions.h" 3
template<>
# 2200 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 2364 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline int4 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2365 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2369 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2372 "/usr/include/surface_functions.h" 3
template<>
# 2200 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 2372 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline uint4 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2373 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2375 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2378 "/usr/include/surface_functions.h" 3
template<>
# 2200 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 2378 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline long long surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2379 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2381 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2384 "/usr/include/surface_functions.h" 3
template<>
# 2200 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 2384 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline unsigned long long surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2385 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2387 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2390 "/usr/include/surface_functions.h" 3
template<>
# 2200 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 2390 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline longlong1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2391 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2393 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2396 "/usr/include/surface_functions.h" 3
template<>
# 2200 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 2396 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline ulonglong1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2397 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2399 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2402 "/usr/include/surface_functions.h" 3
template<>
# 2200 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 2402 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline longlong2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2403 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2407 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2410 "/usr/include/surface_functions.h" 3
template<>
# 2200 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 2410 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline ulonglong2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2411 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2413 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2476 "/usr/include/surface_functions.h" 3
template<>
# 2200 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 2476 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline float surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2477 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2479 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2482 "/usr/include/surface_functions.h" 3
template<>
# 2200 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 2482 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline float1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2483 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2485 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2488 "/usr/include/surface_functions.h" 3
template<>
# 2200 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 2488 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline float2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2489 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2493 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2496 "/usr/include/surface_functions.h" 3
template<>
# 2200 "/usr/include/surface_functions.h" 3
__attribute((always_inline))
# 2496 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline float4 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2497 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2501 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2537 "/usr/include/surface_functions.h" 3
template< class T>
# 2538 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(T val, surface< void, 1> surf, int x, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2539 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)s;(void)mode;
# 2557 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2559 "/usr/include/surface_functions.h" 3
template< class T>
# 2560 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(T val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2561 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2563 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2566 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(char val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2568 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(signed char val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2570 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(unsigned char val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2572 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(char1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2574 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(uchar1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2576 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(char2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2578 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(uchar2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2580 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(char4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2582 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(uchar4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2584 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(short val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2586 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(unsigned short val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2588 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(short1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2590 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(ushort1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2592 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(short2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2594 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(ushort2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2596 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(short4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2598 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(ushort4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2600 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(int val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2602 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(unsigned val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2604 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(int1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2606 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(uint1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2608 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(int2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2610 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(uint2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2612 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(int4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2614 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(uint4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2616 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(long long val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2618 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(unsigned long long val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2620 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(longlong1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2622 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(ulonglong1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2624 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(longlong2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2626 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(ulonglong2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2648 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(float val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2650 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(float1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2652 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(float2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2654 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(float4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2690 "/usr/include/surface_functions.h" 3
template< class T>
# 2691 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(T val, surface< void, 2> surf, int x, int y, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2692 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)s;(void)mode;
# 2710 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2712 "/usr/include/surface_functions.h" 3
template< class T>
# 2713 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(T val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2714 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2716 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2719 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(char val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2721 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(signed char val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2723 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(unsigned char val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2725 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(char1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2727 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(uchar1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2729 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(char2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2731 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(uchar2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2733 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(char4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2735 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(uchar4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2737 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(short val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2739 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(unsigned short val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2741 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(short1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2743 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(ushort1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2745 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(short2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2747 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(ushort2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2749 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(short4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2751 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(ushort4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2753 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(int val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2755 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(unsigned val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2757 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(int1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2759 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(uint1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2761 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(int2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2763 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(uint2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2765 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(int4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2767 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(uint4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2769 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(long long val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2771 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(unsigned long long val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2773 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(longlong1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2775 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(ulonglong1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2777 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(longlong2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2779 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(ulonglong2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2801 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(float val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2803 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(float1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2805 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(float2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2807 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(float4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2843 "/usr/include/surface_functions.h" 3
template< class T>
# 2844 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(T val, surface< void, 3> surf, int x, int y, int z, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2845 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)s;(void)mode;
# 2863 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2865 "/usr/include/surface_functions.h" 3
template< class T>
# 2866 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(T val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2867 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 2869 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2872 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(char val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2874 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(signed char val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2876 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(unsigned char val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2878 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(char1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2880 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(uchar1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2882 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(char2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2884 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(uchar2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2886 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(char4 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2888 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(uchar4 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2890 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(short val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2892 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(unsigned short val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2894 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(short1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2896 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(ushort1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2898 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(short2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2900 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(ushort2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2902 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(short4 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2904 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(ushort4 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2906 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(int val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2908 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(unsigned val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2910 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(int1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2912 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(uint1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2914 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(int2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2916 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(uint2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2918 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(int4 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2920 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(uint4 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2922 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(long long val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2924 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(unsigned long long val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2926 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(longlong1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2928 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(ulonglong1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2930 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(longlong2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2932 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(ulonglong2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2954 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(float val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2956 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(float1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2958 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(float2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2960 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(float4 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 2996 "/usr/include/surface_functions.h" 3
template< class T>
# 2997 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(T val, surface< void, 241> surf, int x, int layer, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2998 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)s;(void)mode;
# 3016 "/usr/include/surface_functions.h" 3
::exit(___);}
# 3018 "/usr/include/surface_functions.h" 3
template< class T>
# 3019 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(T val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3020 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3022 "/usr/include/surface_functions.h" 3
::exit(___);}
# 3025 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(char val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3027 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(signed char val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3029 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(unsigned char val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3031 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(char1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3033 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(uchar1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3035 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(char2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3037 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(uchar2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3039 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(char4 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3041 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(uchar4 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3043 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(short val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3045 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(unsigned short val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3047 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(short1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3049 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(ushort1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3051 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(short2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3053 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(ushort2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3055 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(short4 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3057 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(ushort4 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3059 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(int val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3061 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(unsigned val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3063 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(int1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3065 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(uint1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3067 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(int2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3069 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(uint2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3071 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(int4 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3073 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(uint4 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3075 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(long long val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3077 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(unsigned long long val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3079 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(longlong1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3081 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(ulonglong1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3083 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(longlong2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3085 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(ulonglong2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3107 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(float val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3109 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(float1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3111 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(float2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3113 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(float4 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3160 "/usr/include/surface_functions.h" 3
template< class T>
# 3161 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(T val, surface< void, 242> surf, int x, int y, int layer, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3162 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)s;(void)mode;
# 3180 "/usr/include/surface_functions.h" 3
::exit(___);}
# 3182 "/usr/include/surface_functions.h" 3
template< class T>
# 3183 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(T val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3184 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3186 "/usr/include/surface_functions.h" 3
::exit(___);}
# 3189 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(char val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3191 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(signed char val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3193 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(unsigned char val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3195 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(char1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3197 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(uchar1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3199 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(char2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3201 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(uchar2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3203 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(char4 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3205 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(uchar4 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3207 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(short val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3209 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(unsigned short val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3211 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(short1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3213 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(ushort1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3215 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(short2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3217 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(ushort2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3219 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(short4 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3221 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(ushort4 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3223 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(int val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3225 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(unsigned val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3227 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(int1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3229 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(uint1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3231 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(int2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3233 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(uint2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3235 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(int4 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3237 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(uint4 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3239 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(long long val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3241 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(unsigned long long val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3243 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(longlong1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3245 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(ulonglong1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3247 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(longlong2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3249 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(ulonglong2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3271 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(float val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3273 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(float1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3275 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(float2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3277 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(float4 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3302 "/usr/include/surface_functions.h" 3
template< class T>
# 3303 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(T val, surface< void, 12> surf, int x, int y, int face, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3304 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)s;(void)mode;
# 3322 "/usr/include/surface_functions.h" 3
::exit(___);}
# 3324 "/usr/include/surface_functions.h" 3
template< class T>
# 3325 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(T val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3326 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 3328 "/usr/include/surface_functions.h" 3
::exit(___);}
# 3331 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(char val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3333 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(signed char val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3335 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(unsigned char val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3337 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(char1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3339 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(uchar1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3341 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(char2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3343 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(uchar2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3345 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(char4 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3347 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(uchar4 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3349 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(short val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3351 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(unsigned short val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3353 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(short1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3355 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(ushort1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3357 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(short2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3359 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(ushort2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3361 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(short4 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3363 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(ushort4 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3365 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(int val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3367 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(unsigned val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3369 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(int1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3371 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(uint1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3373 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(int2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3375 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(uint2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3377 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(int4 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3379 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(uint4 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3381 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(long long val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3383 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(unsigned long long val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3385 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(longlong1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3387 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(ulonglong1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3389 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(longlong2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3391 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(ulonglong2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3413 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(float val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3415 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(float1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3417 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(float2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3419 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(float4 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3444 "/usr/include/surface_functions.h" 3
template< class T>
# 3445 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(T val, surface< void, 252> surf, int x, int y, int layerFace, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3446 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)s;(void)mode;
# 3464 "/usr/include/surface_functions.h" 3
::exit(___);}
# 3466 "/usr/include/surface_functions.h" 3
template< class T>
# 3467 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(T val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3468 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 3470 "/usr/include/surface_functions.h" 3
::exit(___);}
# 3473 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(char val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3475 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(signed char val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3477 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(unsigned char val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3479 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(char1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3481 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(uchar1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3483 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(char2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3485 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(uchar2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3487 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(char4 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3489 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(uchar4 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3491 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(short val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3493 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(unsigned short val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3495 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(short1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3497 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(ushort1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3499 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(short2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3501 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(ushort2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3503 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(short4 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3505 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(ushort4 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3507 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(int val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3509 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(unsigned val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3511 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(int1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3513 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(uint1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3515 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(int2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3517 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(uint2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3519 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(int4 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3521 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(uint4 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3523 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(long long val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3525 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(unsigned long long val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3527 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(longlong1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3529 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(ulonglong1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3531 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(longlong2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3533 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(ulonglong2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3555 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(float val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3557 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(float1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3559 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(float2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 3561 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(float4 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap);
# 94 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(char val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 95 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 97 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 99 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(signed char val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 100 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 102 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 104 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(unsigned char val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 105 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 107 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 109 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(char1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 110 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 112 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 114 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(uchar1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 115 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 117 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 119 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(char2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 120 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 122 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 124 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(uchar2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 125 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 127 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 129 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(char4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 130 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 132 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 134 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(uchar4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 135 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 137 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 139 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(short val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 140 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 142 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 144 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(unsigned short val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 145 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 147 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 149 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(short1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 150 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 152 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 154 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(ushort1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 155 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 157 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 159 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(short2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 160 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 162 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 164 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(ushort2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 165 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 167 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 169 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(short4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 170 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 172 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 174 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(ushort4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 175 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 177 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 179 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(int val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 180 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 182 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 184 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(unsigned val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 185 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 187 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 189 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(int1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 190 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 192 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 194 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(uint1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 195 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 197 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 199 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(int2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 200 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 202 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 204 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(uint2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 205 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 207 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 209 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(int4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 210 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 212 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 214 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(uint4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 215 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 217 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 219 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(long long val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 220 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 222 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 224 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(unsigned long long val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 225 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 227 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 229 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(longlong1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 230 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 232 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 234 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(ulonglong1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 235 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 237 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 239 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(longlong2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 240 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 242 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 244 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(ulonglong2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 245 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 247 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 293 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(float val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 294 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 296 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 298 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(float1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 299 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 301 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 303 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(float2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 304 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 306 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 308 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(float4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 309 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 311 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 336 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(char val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 337 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 339 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 341 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(signed char val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 342 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 344 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 346 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(unsigned char val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 347 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 349 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 351 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(char1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 352 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 354 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 356 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(uchar1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 357 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 359 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 361 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(char2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 362 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 364 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 366 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(uchar2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 367 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 369 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 371 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(char4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 372 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 374 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 376 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(uchar4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 377 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 379 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 381 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(short val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 382 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 384 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 386 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(unsigned short val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 387 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 389 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 391 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(short1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 392 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 394 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 396 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(ushort1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 397 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 399 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 401 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(short2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 402 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 404 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 406 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(ushort2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 407 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 409 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 411 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(short4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 412 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 414 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 416 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(ushort4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 417 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 419 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 421 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(int val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 422 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 424 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 426 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(unsigned val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 427 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 429 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 431 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(int1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 432 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 434 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 436 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(uint1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 437 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 439 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 441 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(int2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 442 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 444 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 446 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(uint2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 447 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 449 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 451 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(int4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 452 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 454 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 456 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(uint4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 457 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 459 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 461 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(long long val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 462 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 464 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 466 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(unsigned long long val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 467 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 469 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 471 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(longlong1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 472 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 474 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 476 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(ulonglong1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 477 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 479 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 481 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(longlong2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 482 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 484 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 486 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(ulonglong2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 487 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 489 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 535 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(float val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 536 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 538 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 540 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(float1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 541 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 543 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 545 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(float2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 546 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 548 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 550 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(float4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 551 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 553 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 578 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(char val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 579 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 581 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 583 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(signed char val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 584 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 586 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 588 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(unsigned char val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 589 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 591 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 593 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(char1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 594 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 596 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 598 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(uchar1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 599 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 601 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 603 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(char2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 604 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 606 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 608 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(uchar2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 609 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 611 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 613 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(char4 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 614 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 616 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 618 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(uchar4 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 619 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 621 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 623 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(short val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 624 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 626 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 628 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(unsigned short val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 629 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 631 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 633 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(short1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 634 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 636 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 638 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(ushort1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 639 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 641 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 643 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(short2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 644 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 646 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 648 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(ushort2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 649 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 651 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 653 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(short4 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 654 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 656 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 658 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(ushort4 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 659 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 661 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 663 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(int val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 664 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 666 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 668 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(unsigned val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 669 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 671 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 673 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(int1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 674 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 676 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 678 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(uint1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 679 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 681 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 683 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(int2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 684 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 686 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 688 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(uint2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 689 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 691 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 693 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(int4 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 694 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 696 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 698 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(uint4 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 699 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 701 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 703 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(long long val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 704 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 706 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 708 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(unsigned long long val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 709 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 711 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 713 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(longlong1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 714 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 716 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 718 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(ulonglong1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 719 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 721 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 723 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(longlong2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 724 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 726 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 728 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(ulonglong2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 729 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 731 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 777 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(float val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 778 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 780 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 782 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(float1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 783 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 785 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 787 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(float2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 788 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 790 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 792 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(float4 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 793 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 795 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 820 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(char val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 821 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 823 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 825 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(signed char val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 826 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 828 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 830 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(unsigned char val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 831 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 833 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 835 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(char1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 836 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 838 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 840 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(uchar1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 841 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 843 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 845 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(char2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 846 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 848 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 850 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(uchar2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 851 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 853 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 855 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(char4 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 856 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 858 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 860 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(uchar4 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 861 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 863 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 865 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(short val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 866 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 868 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 870 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(unsigned short val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 871 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 873 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 875 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(short1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 876 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 878 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 880 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(ushort1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 881 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 883 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 885 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(short2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 886 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 888 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 890 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(ushort2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 891 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 893 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 895 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(short4 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 896 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 898 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 900 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(ushort4 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 901 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 903 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 905 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(int val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 906 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 908 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 910 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(unsigned val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 911 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 913 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 915 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(int1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 916 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 918 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 920 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(uint1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 921 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 923 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 925 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(int2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 926 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 928 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 930 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(uint2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 931 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 933 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 935 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(int4 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 936 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 938 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 940 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(uint4 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 941 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 943 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 945 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(long long val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 946 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 948 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 950 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(unsigned long long val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 951 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 953 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 955 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(longlong1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 956 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 958 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 960 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(ulonglong1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 961 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 963 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 965 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(longlong2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 966 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 968 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 970 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(ulonglong2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 971 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 973 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1019 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(float val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1020 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 1022 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1024 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(float1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1025 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 1027 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1029 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(float2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1030 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 1032 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1034 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(float4 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1035 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 1037 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1062 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(char val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1063 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1065 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1067 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(signed char val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1068 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1070 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1072 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(unsigned char val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1073 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1075 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1077 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(char1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1078 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1080 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1082 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(uchar1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1083 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1085 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1087 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(char2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1088 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1090 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1092 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(uchar2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1093 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1095 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1097 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(char4 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1098 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1100 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1102 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(uchar4 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1103 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1105 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1107 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(short val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1108 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1110 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1112 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(unsigned short val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1113 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1115 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1117 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(short1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1118 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1120 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1122 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(ushort1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1123 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1125 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1127 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(short2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1128 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1130 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1132 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(ushort2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1133 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1135 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1137 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(short4 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1138 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1140 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1142 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(ushort4 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1143 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1145 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1147 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(int val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1148 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1150 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1152 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(unsigned val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1153 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1155 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1157 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(int1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1158 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1160 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1162 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(uint1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1163 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1165 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1167 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(int2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1168 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1170 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1172 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(uint2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1173 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1175 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1177 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(int4 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1178 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1180 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1182 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(uint4 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1183 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1185 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1187 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(long long val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1188 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1190 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1192 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(unsigned long long val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1193 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1195 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1197 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(longlong1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1198 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1200 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1202 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(ulonglong1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1203 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1205 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1207 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(longlong2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1208 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1210 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1212 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(ulonglong2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1213 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1215 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1261 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(float val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1262 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1264 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1266 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(float1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1267 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1269 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1271 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(float2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1272 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1274 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1276 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(float4 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1277 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1279 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1305 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(char val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1306 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1308 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1310 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(signed char val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1311 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1313 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1315 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(unsigned char val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1316 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1318 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1320 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(char1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1321 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1323 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1325 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(uchar1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1326 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1328 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1330 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(char2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1331 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1333 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1335 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(uchar2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1336 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1338 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1340 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(char4 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1341 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1343 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1345 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(uchar4 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1346 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1348 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1350 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(short val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1351 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1353 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1355 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(unsigned short val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1356 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1358 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1360 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(short1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1361 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1363 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1365 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(ushort1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1366 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1368 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1370 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(short2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1371 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1373 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1375 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(ushort2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1376 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1378 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1380 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(short4 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1381 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1383 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1385 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(ushort4 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1386 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1388 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1390 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(int val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1391 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1393 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1395 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(unsigned val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1396 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1398 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1400 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(int1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1401 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1403 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1405 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(uint1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1406 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1408 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1410 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(int2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1411 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1413 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1415 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(uint2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1416 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1418 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1420 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(int4 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1421 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1423 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1425 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(uint4 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1426 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1428 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1430 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(long long val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1431 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1433 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1435 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(unsigned long long val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1436 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1438 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1440 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(longlong1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1441 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1443 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1445 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(ulonglong1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1446 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1448 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1450 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(longlong2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1451 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1453 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1455 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(ulonglong2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1456 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1458 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1504 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(float val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1505 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1507 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1509 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(float1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1510 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1512 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1514 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(float2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1515 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1517 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1519 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(float4 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1520 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1522 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1548 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(char val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 1549 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 1551 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1553 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(signed char val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 1554 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 1556 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1558 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(unsigned char val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 1559 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 1561 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1563 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(char1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 1564 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 1566 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1568 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(uchar1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 1569 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 1571 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1573 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(char2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 1574 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 1576 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1578 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(uchar2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 1579 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 1581 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1583 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(char4 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 1584 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 1586 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1588 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(uchar4 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 1589 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 1591 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1593 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(short val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 1594 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 1596 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1598 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(unsigned short val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 1599 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 1601 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1603 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(short1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 1604 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 1606 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1608 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(ushort1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 1609 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 1611 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1613 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(short2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 1614 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 1616 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1618 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(ushort2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 1619 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 1621 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1623 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(short4 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 1624 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 1626 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1628 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(ushort4 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 1629 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 1631 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1633 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(int val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 1634 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 1636 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1638 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(unsigned val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 1639 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 1641 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1643 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(int1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 1644 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 1646 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1648 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(uint1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 1649 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 1651 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1653 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(int2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 1654 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 1656 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1658 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(uint2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 1659 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 1661 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1663 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(int4 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 1664 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 1666 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1668 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(uint4 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 1669 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 1671 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1673 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(long long val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 1674 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 1676 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1678 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(unsigned long long val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 1679 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 1681 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1683 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(longlong1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 1684 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 1686 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1688 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(ulonglong1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 1689 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 1691 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1693 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(longlong2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 1694 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 1696 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1698 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(ulonglong2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 1699 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 1701 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1747 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(float val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 1748 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 1750 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1752 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(float1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 1753 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 1755 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1757 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(float2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 1758 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 1760 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 1762 "/usr/include/surface_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(float4 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 1763 "/usr/include/surface_functions.hpp" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 1765 "/usr/include/surface_functions.hpp" 3
::exit(___);}
# 146 "/usr/include/texture_fetch_functions.h" 3
template< class T, cudaTextureReadMode readMode>
# 147 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4
# 148 "/usr/include/texture_fetch_functions.h" 3
__utexfetchi(texture< T, 1, readMode> t, int4 i)
# 149 "/usr/include/texture_fetch_functions.h" 3
{int volatile ___ = 1;(void)t;(void)i;
# 151 "/usr/include/texture_fetch_functions.h" 3
::exit(___);}
# 153 "/usr/include/texture_fetch_functions.h" 3
template< class T, cudaTextureReadMode readMode>
# 154 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4
# 155 "/usr/include/texture_fetch_functions.h" 3
__itexfetchi(texture< T, 1, readMode> t, int4 i)
# 156 "/usr/include/texture_fetch_functions.h" 3
{int volatile ___ = 1;(void)t;(void)i;
# 158 "/usr/include/texture_fetch_functions.h" 3
::exit(___);}
# 160 "/usr/include/texture_fetch_functions.h" 3
template< class T, cudaTextureReadMode readMode>
# 161 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4
# 162 "/usr/include/texture_fetch_functions.h" 3
__ftexfetchi(texture< T, 1, readMode> t, int4 i)
# 163 "/usr/include/texture_fetch_functions.h" 3
{int volatile ___ = 1;(void)t;(void)i;
# 165 "/usr/include/texture_fetch_functions.h" 3
::exit(___);}
# 167 "/usr/include/texture_fetch_functions.h" 3
template< class T, int texType, cudaTextureReadMode readMode>
# 168 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4
# 169 "/usr/include/texture_fetch_functions.h" 3
__utexfetch(texture< T, texType, readMode> t, float4 i, int d = texType)
# 170 "/usr/include/texture_fetch_functions.h" 3
{int volatile ___ = 1;(void)t;(void)i;(void)d;
# 177 "/usr/include/texture_fetch_functions.h" 3
::exit(___);}
# 179 "/usr/include/texture_fetch_functions.h" 3
template< class T, int texType, cudaTextureReadMode readMode>
# 180 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4
# 181 "/usr/include/texture_fetch_functions.h" 3
__itexfetch(texture< T, texType, readMode> t, float4 i, int d = texType)
# 182 "/usr/include/texture_fetch_functions.h" 3
{int volatile ___ = 1;(void)t;(void)i;(void)d;
# 189 "/usr/include/texture_fetch_functions.h" 3
::exit(___);}
# 191 "/usr/include/texture_fetch_functions.h" 3
template< class T, int texType, cudaTextureReadMode readMode>
# 192 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4
# 193 "/usr/include/texture_fetch_functions.h" 3
__ftexfetch(texture< T, texType, readMode> t, float4 i, int d = texType)
# 194 "/usr/include/texture_fetch_functions.h" 3
{int volatile ___ = 1;(void)t;(void)i;(void)d;
# 201 "/usr/include/texture_fetch_functions.h" 3
::exit(___);}
# 203 "/usr/include/texture_fetch_functions.h" 3
template< class T, int texType, cudaTextureReadMode readMode>
# 204 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4
# 205 "/usr/include/texture_fetch_functions.h" 3
__utexfetchc(texture< T, texType, readMode> t, float4 i)
# 206 "/usr/include/texture_fetch_functions.h" 3
{int volatile ___ = 1;(void)t;(void)i;
# 208 "/usr/include/texture_fetch_functions.h" 3
::exit(___);}
# 210 "/usr/include/texture_fetch_functions.h" 3
template< class T, int texType, cudaTextureReadMode readMode>
# 211 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4
# 212 "/usr/include/texture_fetch_functions.h" 3
__itexfetchc(texture< T, texType, readMode> t, float4 i)
# 213 "/usr/include/texture_fetch_functions.h" 3
{int volatile ___ = 1;(void)t;(void)i;
# 215 "/usr/include/texture_fetch_functions.h" 3
::exit(___);}
# 217 "/usr/include/texture_fetch_functions.h" 3
template< class T, int texType, cudaTextureReadMode readMode>
# 218 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4
# 219 "/usr/include/texture_fetch_functions.h" 3
__ftexfetchc(texture< T, texType, readMode> t, float4 i)
# 220 "/usr/include/texture_fetch_functions.h" 3
{int volatile ___ = 1;(void)t;(void)i;
# 222 "/usr/include/texture_fetch_functions.h" 3
::exit(___);}
# 224 "/usr/include/texture_fetch_functions.h" 3
template< class T, int texType, cudaTextureReadMode readMode>
# 225 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4
# 226 "/usr/include/texture_fetch_functions.h" 3
__utexfetchl(texture< T, texType, readMode> t, float4 i, int l, int d = texType & 15)
# 227 "/usr/include/texture_fetch_functions.h" 3
{int volatile ___ = 1;(void)t;(void)i;(void)l;(void)d;
# 233 "/usr/include/texture_fetch_functions.h" 3
::exit(___);}
# 235 "/usr/include/texture_fetch_functions.h" 3
template< class T, int texType, cudaTextureReadMode readMode>
# 236 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4
# 237 "/usr/include/texture_fetch_functions.h" 3
__itexfetchl(texture< T, texType, readMode> t, float4 i, int l, int d = texType & 15)
# 238 "/usr/include/texture_fetch_functions.h" 3
{int volatile ___ = 1;(void)t;(void)i;(void)l;(void)d;
# 244 "/usr/include/texture_fetch_functions.h" 3
::exit(___);}
# 246 "/usr/include/texture_fetch_functions.h" 3
template< class T, int texType, cudaTextureReadMode readMode>
# 247 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4
# 248 "/usr/include/texture_fetch_functions.h" 3
__ftexfetchl(texture< T, texType, readMode> t, float4 i, int l, int d = texType & 15)
# 249 "/usr/include/texture_fetch_functions.h" 3
{int volatile ___ = 1;(void)t;(void)i;(void)l;(void)d;
# 255 "/usr/include/texture_fetch_functions.h" 3
::exit(___);}
# 257 "/usr/include/texture_fetch_functions.h" 3
template< class T, int texType, cudaTextureReadMode readMode>
# 258 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4
# 259 "/usr/include/texture_fetch_functions.h" 3
__utexfetchlc(texture< T, texType, readMode> t, float4 i, int l)
# 260 "/usr/include/texture_fetch_functions.h" 3
{int volatile ___ = 1;(void)t;(void)i;(void)l;
# 262 "/usr/include/texture_fetch_functions.h" 3
::exit(___);}
# 264 "/usr/include/texture_fetch_functions.h" 3
template< class T, int texType, cudaTextureReadMode readMode>
# 265 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4
# 266 "/usr/include/texture_fetch_functions.h" 3
__itexfetchlc(texture< T, texType, readMode> t, float4 i, int l)
# 267 "/usr/include/texture_fetch_functions.h" 3
{int volatile ___ = 1;(void)t;(void)i;(void)l;
# 269 "/usr/include/texture_fetch_functions.h" 3
::exit(___);}
# 271 "/usr/include/texture_fetch_functions.h" 3
template< class T, int texType, cudaTextureReadMode readMode>
# 272 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4
# 273 "/usr/include/texture_fetch_functions.h" 3
__ftexfetchlc(texture< T, texType, readMode> t, float4 i, int l)
# 274 "/usr/include/texture_fetch_functions.h" 3
{int volatile ___ = 1;(void)t;(void)i;(void)l;
# 276 "/usr/include/texture_fetch_functions.h" 3
::exit(___);}
# 285 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char tex1Dfetch(texture< char, 1, cudaReadModeElementType> t, int x);
# 287 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex1Dfetch(texture< signed char, 1, cudaReadModeElementType> t, int x);
# 289 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex1Dfetch(texture< unsigned char, 1, cudaReadModeElementType> t, int x);
# 291 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex1Dfetch(texture< char1, 1, cudaReadModeElementType> t, int x);
# 293 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex1Dfetch(texture< uchar1, 1, cudaReadModeElementType> t, int x);
# 295 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex1Dfetch(texture< char2, 1, cudaReadModeElementType> t, int x);
# 297 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex1Dfetch(texture< uchar2, 1, cudaReadModeElementType> t, int x);
# 299 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex1Dfetch(texture< char4, 1, cudaReadModeElementType> t, int x);
# 301 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex1Dfetch(texture< uchar4, 1, cudaReadModeElementType> t, int x);
# 309 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short tex1Dfetch(texture< short, 1, cudaReadModeElementType> t, int x);
# 311 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex1Dfetch(texture< unsigned short, 1, cudaReadModeElementType> t, int x);
# 313 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex1Dfetch(texture< short1, 1, cudaReadModeElementType> t, int x);
# 315 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex1Dfetch(texture< ushort1, 1, cudaReadModeElementType> t, int x);
# 317 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex1Dfetch(texture< short2, 1, cudaReadModeElementType> t, int x);
# 319 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex1Dfetch(texture< ushort2, 1, cudaReadModeElementType> t, int x);
# 321 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex1Dfetch(texture< short4, 1, cudaReadModeElementType> t, int x);
# 323 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex1Dfetch(texture< ushort4, 1, cudaReadModeElementType> t, int x);
# 331 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int tex1Dfetch(texture< int, 1, cudaReadModeElementType> t, int x);
# 333 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex1Dfetch(texture< unsigned, 1, cudaReadModeElementType> t, int x);
# 335 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex1Dfetch(texture< int1, 1, cudaReadModeElementType> t, int x);
# 337 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex1Dfetch(texture< uint1, 1, cudaReadModeElementType> t, int x);
# 339 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex1Dfetch(texture< int2, 1, cudaReadModeElementType> t, int x);
# 341 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex1Dfetch(texture< uint2, 1, cudaReadModeElementType> t, int x);
# 343 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex1Dfetch(texture< int4, 1, cudaReadModeElementType> t, int x);
# 345 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex1Dfetch(texture< uint4, 1, cudaReadModeElementType> t, int x);
# 379 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1Dfetch(texture< float, 1, cudaReadModeElementType> t, int x);
# 381 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1Dfetch(texture< float1, 1, cudaReadModeElementType> t, int x);
# 383 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1Dfetch(texture< float2, 1, cudaReadModeElementType> t, int x);
# 385 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1Dfetch(texture< float4, 1, cudaReadModeElementType> t, int x);
# 393 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1Dfetch(texture< char, 1, cudaReadModeNormalizedFloat> t, int x);
# 395 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1Dfetch(texture< signed char, 1, cudaReadModeNormalizedFloat> t, int x);
# 397 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1Dfetch(texture< unsigned char, 1, cudaReadModeNormalizedFloat> t, int x);
# 399 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1Dfetch(texture< char1, 1, cudaReadModeNormalizedFloat> t, int x);
# 401 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1Dfetch(texture< uchar1, 1, cudaReadModeNormalizedFloat> t, int x);
# 403 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1Dfetch(texture< char2, 1, cudaReadModeNormalizedFloat> t, int x);
# 405 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1Dfetch(texture< uchar2, 1, cudaReadModeNormalizedFloat> t, int x);
# 407 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1Dfetch(texture< char4, 1, cudaReadModeNormalizedFloat> t, int x);
# 409 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1Dfetch(texture< uchar4, 1, cudaReadModeNormalizedFloat> t, int x);
# 417 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1Dfetch(texture< short, 1, cudaReadModeNormalizedFloat> t, int x);
# 419 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1Dfetch(texture< unsigned short, 1, cudaReadModeNormalizedFloat> t, int x);
# 421 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1Dfetch(texture< short1, 1, cudaReadModeNormalizedFloat> t, int x);
# 423 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1Dfetch(texture< ushort1, 1, cudaReadModeNormalizedFloat> t, int x);
# 425 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1Dfetch(texture< short2, 1, cudaReadModeNormalizedFloat> t, int x);
# 427 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1Dfetch(texture< ushort2, 1, cudaReadModeNormalizedFloat> t, int x);
# 429 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1Dfetch(texture< short4, 1, cudaReadModeNormalizedFloat> t, int x);
# 431 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1Dfetch(texture< ushort4, 1, cudaReadModeNormalizedFloat> t, int x);
# 439 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char tex1D(texture< char, 1, cudaReadModeElementType> t, float x);
# 441 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex1D(texture< signed char, 1, cudaReadModeElementType> t, float x);
# 443 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex1D(texture< unsigned char, 1, cudaReadModeElementType> t, float x);
# 445 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex1D(texture< char1, 1, cudaReadModeElementType> t, float x);
# 447 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex1D(texture< uchar1, 1, cudaReadModeElementType> t, float x);
# 449 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex1D(texture< char2, 1, cudaReadModeElementType> t, float x);
# 451 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex1D(texture< uchar2, 1, cudaReadModeElementType> t, float x);
# 453 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex1D(texture< char4, 1, cudaReadModeElementType> t, float x);
# 455 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex1D(texture< uchar4, 1, cudaReadModeElementType> t, float x);
# 463 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short tex1D(texture< short, 1, cudaReadModeElementType> t, float x);
# 465 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex1D(texture< unsigned short, 1, cudaReadModeElementType> t, float x);
# 467 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex1D(texture< short1, 1, cudaReadModeElementType> t, float x);
# 469 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex1D(texture< ushort1, 1, cudaReadModeElementType> t, float x);
# 471 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex1D(texture< short2, 1, cudaReadModeElementType> t, float x);
# 473 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex1D(texture< ushort2, 1, cudaReadModeElementType> t, float x);
# 475 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex1D(texture< short4, 1, cudaReadModeElementType> t, float x);
# 477 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex1D(texture< ushort4, 1, cudaReadModeElementType> t, float x);
# 485 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int tex1D(texture< int, 1, cudaReadModeElementType> t, float x);
# 487 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex1D(texture< unsigned, 1, cudaReadModeElementType> t, float x);
# 489 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex1D(texture< int1, 1, cudaReadModeElementType> t, float x);
# 491 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex1D(texture< uint1, 1, cudaReadModeElementType> t, float x);
# 493 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex1D(texture< int2, 1, cudaReadModeElementType> t, float x);
# 495 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex1D(texture< uint2, 1, cudaReadModeElementType> t, float x);
# 497 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex1D(texture< int4, 1, cudaReadModeElementType> t, float x);
# 499 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex1D(texture< uint4, 1, cudaReadModeElementType> t, float x);
# 539 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1D(texture< float, 1, cudaReadModeElementType> t, float x);
# 541 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1D(texture< float1, 1, cudaReadModeElementType> t, float x);
# 543 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1D(texture< float2, 1, cudaReadModeElementType> t, float x);
# 545 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1D(texture< float4, 1, cudaReadModeElementType> t, float x);
# 553 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1D(texture< char, 1, cudaReadModeNormalizedFloat> t, float x);
# 555 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1D(texture< signed char, 1, cudaReadModeNormalizedFloat> t, float x);
# 557 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1D(texture< unsigned char, 1, cudaReadModeNormalizedFloat> t, float x);
# 559 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1D(texture< char1, 1, cudaReadModeNormalizedFloat> t, float x);
# 561 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1D(texture< uchar1, 1, cudaReadModeNormalizedFloat> t, float x);
# 563 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1D(texture< char2, 1, cudaReadModeNormalizedFloat> t, float x);
# 565 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1D(texture< uchar2, 1, cudaReadModeNormalizedFloat> t, float x);
# 567 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1D(texture< char4, 1, cudaReadModeNormalizedFloat> t, float x);
# 569 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1D(texture< uchar4, 1, cudaReadModeNormalizedFloat> t, float x);
# 577 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1D(texture< short, 1, cudaReadModeNormalizedFloat> t, float x);
# 579 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1D(texture< unsigned short, 1, cudaReadModeNormalizedFloat> t, float x);
# 581 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1D(texture< short1, 1, cudaReadModeNormalizedFloat> t, float x);
# 583 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1D(texture< ushort1, 1, cudaReadModeNormalizedFloat> t, float x);
# 585 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1D(texture< short2, 1, cudaReadModeNormalizedFloat> t, float x);
# 587 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1D(texture< ushort2, 1, cudaReadModeNormalizedFloat> t, float x);
# 589 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1D(texture< short4, 1, cudaReadModeNormalizedFloat> t, float x);
# 591 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1D(texture< ushort4, 1, cudaReadModeNormalizedFloat> t, float x);
# 599 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char tex2D(texture< char, 2, cudaReadModeElementType> t, float x, float y);
# 601 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex2D(texture< signed char, 2, cudaReadModeElementType> t, float x, float y);
# 603 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex2D(texture< unsigned char, 2, cudaReadModeElementType> t, float x, float y);
# 605 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex2D(texture< char1, 2, cudaReadModeElementType> t, float x, float y);
# 607 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex2D(texture< uchar1, 2, cudaReadModeElementType> t, float x, float y);
# 609 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex2D(texture< char2, 2, cudaReadModeElementType> t, float x, float y);
# 611 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex2D(texture< uchar2, 2, cudaReadModeElementType> t, float x, float y);
# 613 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex2D(texture< char4, 2, cudaReadModeElementType> t, float x, float y);
# 615 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex2D(texture< uchar4, 2, cudaReadModeElementType> t, float x, float y);
# 623 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short tex2D(texture< short, 2, cudaReadModeElementType> t, float x, float y);
# 625 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex2D(texture< unsigned short, 2, cudaReadModeElementType> t, float x, float y);
# 627 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex2D(texture< short1, 2, cudaReadModeElementType> t, float x, float y);
# 629 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex2D(texture< ushort1, 2, cudaReadModeElementType> t, float x, float y);
# 631 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex2D(texture< short2, 2, cudaReadModeElementType> t, float x, float y);
# 633 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex2D(texture< ushort2, 2, cudaReadModeElementType> t, float x, float y);
# 635 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex2D(texture< short4, 2, cudaReadModeElementType> t, float x, float y);
# 637 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex2D(texture< ushort4, 2, cudaReadModeElementType> t, float x, float y);
# 645 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int tex2D(texture< int, 2, cudaReadModeElementType> t, float x, float y);
# 647 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex2D(texture< unsigned, 2, cudaReadModeElementType> t, float x, float y);
# 649 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex2D(texture< int1, 2, cudaReadModeElementType> t, float x, float y);
# 651 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex2D(texture< uint1, 2, cudaReadModeElementType> t, float x, float y);
# 653 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex2D(texture< int2, 2, cudaReadModeElementType> t, float x, float y);
# 655 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex2D(texture< uint2, 2, cudaReadModeElementType> t, float x, float y);
# 657 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex2D(texture< int4, 2, cudaReadModeElementType> t, float x, float y);
# 659 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex2D(texture< uint4, 2, cudaReadModeElementType> t, float x, float y);
# 693 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2D(texture< float, 2, cudaReadModeElementType> t, float x, float y);
# 695 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2D(texture< float1, 2, cudaReadModeElementType> t, float x, float y);
# 697 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2D(texture< float2, 2, cudaReadModeElementType> t, float x, float y);
# 699 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2D(texture< float4, 2, cudaReadModeElementType> t, float x, float y);
# 707 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2D(texture< char, 2, cudaReadModeNormalizedFloat> t, float x, float y);
# 709 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2D(texture< signed char, 2, cudaReadModeNormalizedFloat> t, float x, float y);
# 711 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2D(texture< unsigned char, 2, cudaReadModeNormalizedFloat> t, float x, float y);
# 713 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2D(texture< char1, 2, cudaReadModeNormalizedFloat> t, float x, float y);
# 715 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2D(texture< uchar1, 2, cudaReadModeNormalizedFloat> t, float x, float y);
# 717 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2D(texture< char2, 2, cudaReadModeNormalizedFloat> t, float x, float y);
# 719 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2D(texture< uchar2, 2, cudaReadModeNormalizedFloat> t, float x, float y);
# 721 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2D(texture< char4, 2, cudaReadModeNormalizedFloat> t, float x, float y);
# 723 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2D(texture< uchar4, 2, cudaReadModeNormalizedFloat> t, float x, float y);
# 731 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2D(texture< short, 2, cudaReadModeNormalizedFloat> t, float x, float y);
# 733 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2D(texture< unsigned short, 2, cudaReadModeNormalizedFloat> t, float x, float y);
# 735 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2D(texture< short1, 2, cudaReadModeNormalizedFloat> t, float x, float y);
# 737 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2D(texture< ushort1, 2, cudaReadModeNormalizedFloat> t, float x, float y);
# 739 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2D(texture< short2, 2, cudaReadModeNormalizedFloat> t, float x, float y);
# 741 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2D(texture< ushort2, 2, cudaReadModeNormalizedFloat> t, float x, float y);
# 743 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2D(texture< short4, 2, cudaReadModeNormalizedFloat> t, float x, float y);
# 745 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2D(texture< ushort4, 2, cudaReadModeNormalizedFloat> t, float x, float y);
# 753 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char tex1DLayered(texture< char, 241, cudaReadModeElementType> t, float x, int layer);
# 755 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex1DLayered(texture< signed char, 241, cudaReadModeElementType> t, float x, int layer);
# 757 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex1DLayered(texture< unsigned char, 241, cudaReadModeElementType> t, float x, int layer);
# 759 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex1DLayered(texture< char1, 241, cudaReadModeElementType> t, float x, int layer);
# 761 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex1DLayered(texture< uchar1, 241, cudaReadModeElementType> t, float x, int layer);
# 763 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex1DLayered(texture< char2, 241, cudaReadModeElementType> t, float x, int layer);
# 765 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex1DLayered(texture< uchar2, 241, cudaReadModeElementType> t, float x, int layer);
# 767 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex1DLayered(texture< char4, 241, cudaReadModeElementType> t, float x, int layer);
# 769 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex1DLayered(texture< uchar4, 241, cudaReadModeElementType> t, float x, int layer);
# 777 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short tex1DLayered(texture< short, 241, cudaReadModeElementType> t, float x, int layer);
# 779 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex1DLayered(texture< unsigned short, 241, cudaReadModeElementType> t, float x, int layer);
# 781 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex1DLayered(texture< short1, 241, cudaReadModeElementType> t, float x, int layer);
# 783 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex1DLayered(texture< ushort1, 241, cudaReadModeElementType> t, float x, int layer);
# 785 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex1DLayered(texture< short2, 241, cudaReadModeElementType> t, float x, int layer);
# 787 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex1DLayered(texture< ushort2, 241, cudaReadModeElementType> t, float x, int layer);
# 789 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex1DLayered(texture< short4, 241, cudaReadModeElementType> t, float x, int layer);
# 791 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex1DLayered(texture< ushort4, 241, cudaReadModeElementType> t, float x, int layer);
# 799 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int tex1DLayered(texture< int, 241, cudaReadModeElementType> t, float x, int layer);
# 801 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex1DLayered(texture< unsigned, 241, cudaReadModeElementType> t, float x, int layer);
# 803 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex1DLayered(texture< int1, 241, cudaReadModeElementType> t, float x, int layer);
# 805 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex1DLayered(texture< uint1, 241, cudaReadModeElementType> t, float x, int layer);
# 807 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex1DLayered(texture< int2, 241, cudaReadModeElementType> t, float x, int layer);
# 809 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex1DLayered(texture< uint2, 241, cudaReadModeElementType> t, float x, int layer);
# 811 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex1DLayered(texture< int4, 241, cudaReadModeElementType> t, float x, int layer);
# 813 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex1DLayered(texture< uint4, 241, cudaReadModeElementType> t, float x, int layer);
# 847 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayered(texture< float, 241, cudaReadModeElementType> t, float x, int layer);
# 849 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLayered(texture< float1, 241, cudaReadModeElementType> t, float x, int layer);
# 851 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLayered(texture< float2, 241, cudaReadModeElementType> t, float x, int layer);
# 853 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLayered(texture< float4, 241, cudaReadModeElementType> t, float x, int layer);
# 861 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayered(texture< char, 241, cudaReadModeNormalizedFloat> t, float x, int layer);
# 863 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayered(texture< signed char, 241, cudaReadModeNormalizedFloat> t, float x, int layer);
# 865 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayered(texture< unsigned char, 241, cudaReadModeNormalizedFloat> t, float x, int layer);
# 867 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLayered(texture< char1, 241, cudaReadModeNormalizedFloat> t, float x, int layer);
# 869 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLayered(texture< uchar1, 241, cudaReadModeNormalizedFloat> t, float x, int layer);
# 871 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLayered(texture< char2, 241, cudaReadModeNormalizedFloat> t, float x, int layer);
# 873 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLayered(texture< uchar2, 241, cudaReadModeNormalizedFloat> t, float x, int layer);
# 875 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLayered(texture< char4, 241, cudaReadModeNormalizedFloat> t, float x, int layer);
# 877 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLayered(texture< uchar4, 241, cudaReadModeNormalizedFloat> t, float x, int layer);
# 885 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayered(texture< short, 241, cudaReadModeNormalizedFloat> t, float x, int layer);
# 887 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayered(texture< unsigned short, 241, cudaReadModeNormalizedFloat> t, float x, int layer);
# 889 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLayered(texture< short1, 241, cudaReadModeNormalizedFloat> t, float x, int layer);
# 891 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLayered(texture< ushort1, 241, cudaReadModeNormalizedFloat> t, float x, int layer);
# 893 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLayered(texture< short2, 241, cudaReadModeNormalizedFloat> t, float x, int layer);
# 895 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLayered(texture< ushort2, 241, cudaReadModeNormalizedFloat> t, float x, int layer);
# 897 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLayered(texture< short4, 241, cudaReadModeNormalizedFloat> t, float x, int layer);
# 899 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLayered(texture< ushort4, 241, cudaReadModeNormalizedFloat> t, float x, int layer);
# 907 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char tex2DLayered(texture< char, 242, cudaReadModeElementType> t, float x, float y, int layer);
# 909 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex2DLayered(texture< signed char, 242, cudaReadModeElementType> t, float x, float y, int layer);
# 911 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex2DLayered(texture< unsigned char, 242, cudaReadModeElementType> t, float x, float y, int layer);
# 913 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex2DLayered(texture< char1, 242, cudaReadModeElementType> t, float x, float y, int layer);
# 915 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex2DLayered(texture< uchar1, 242, cudaReadModeElementType> t, float x, float y, int layer);
# 917 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex2DLayered(texture< char2, 242, cudaReadModeElementType> t, float x, float y, int layer);
# 919 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex2DLayered(texture< uchar2, 242, cudaReadModeElementType> t, float x, float y, int layer);
# 921 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex2DLayered(texture< char4, 242, cudaReadModeElementType> t, float x, float y, int layer);
# 923 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex2DLayered(texture< uchar4, 242, cudaReadModeElementType> t, float x, float y, int layer);
# 931 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short tex2DLayered(texture< short, 242, cudaReadModeElementType> t, float x, float y, int layer);
# 933 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex2DLayered(texture< unsigned short, 242, cudaReadModeElementType> t, float x, float y, int layer);
# 935 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex2DLayered(texture< short1, 242, cudaReadModeElementType> t, float x, float y, int layer);
# 937 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex2DLayered(texture< ushort1, 242, cudaReadModeElementType> t, float x, float y, int layer);
# 939 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex2DLayered(texture< short2, 242, cudaReadModeElementType> t, float x, float y, int layer);
# 941 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex2DLayered(texture< ushort2, 242, cudaReadModeElementType> t, float x, float y, int layer);
# 943 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex2DLayered(texture< short4, 242, cudaReadModeElementType> t, float x, float y, int layer);
# 945 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex2DLayered(texture< ushort4, 242, cudaReadModeElementType> t, float x, float y, int layer);
# 953 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int tex2DLayered(texture< int, 242, cudaReadModeElementType> t, float x, float y, int layer);
# 955 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex2DLayered(texture< unsigned, 242, cudaReadModeElementType> t, float x, float y, int layer);
# 957 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex2DLayered(texture< int1, 242, cudaReadModeElementType> t, float x, float y, int layer);
# 959 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex2DLayered(texture< uint1, 242, cudaReadModeElementType> t, float x, float y, int layer);
# 961 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex2DLayered(texture< int2, 242, cudaReadModeElementType> t, float x, float y, int layer);
# 963 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex2DLayered(texture< uint2, 242, cudaReadModeElementType> t, float x, float y, int layer);
# 965 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex2DLayered(texture< int4, 242, cudaReadModeElementType> t, float x, float y, int layer);
# 967 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex2DLayered(texture< uint4, 242, cudaReadModeElementType> t, float x, float y, int layer);
# 1001 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayered(texture< float, 242, cudaReadModeElementType> t, float x, float y, int layer);
# 1003 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLayered(texture< float1, 242, cudaReadModeElementType> t, float x, float y, int layer);
# 1005 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLayered(texture< float2, 242, cudaReadModeElementType> t, float x, float y, int layer);
# 1007 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLayered(texture< float4, 242, cudaReadModeElementType> t, float x, float y, int layer);
# 1015 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayered(texture< char, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer);
# 1017 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayered(texture< signed char, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer);
# 1019 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayered(texture< unsigned char, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer);
# 1021 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLayered(texture< char1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer);
# 1023 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLayered(texture< uchar1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer);
# 1025 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLayered(texture< char2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer);
# 1027 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLayered(texture< uchar2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer);
# 1029 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLayered(texture< char4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer);
# 1031 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLayered(texture< uchar4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer);
# 1039 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayered(texture< short, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer);
# 1041 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayered(texture< unsigned short, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer);
# 1043 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLayered(texture< short1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer);
# 1045 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLayered(texture< ushort1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer);
# 1047 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLayered(texture< short2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer);
# 1049 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLayered(texture< ushort2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer);
# 1051 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLayered(texture< short4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer);
# 1053 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLayered(texture< ushort4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer);
# 1061 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char tex3D(texture< char, 3, cudaReadModeElementType> t, float x, float y, float z);
# 1063 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex3D(texture< signed char, 3, cudaReadModeElementType> t, float x, float y, float z);
# 1065 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex3D(texture< unsigned char, 3, cudaReadModeElementType> t, float x, float y, float z);
# 1067 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex3D(texture< char1, 3, cudaReadModeElementType> t, float x, float y, float z);
# 1069 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex3D(texture< uchar1, 3, cudaReadModeElementType> t, float x, float y, float z);
# 1071 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex3D(texture< char2, 3, cudaReadModeElementType> t, float x, float y, float z);
# 1073 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex3D(texture< uchar2, 3, cudaReadModeElementType> t, float x, float y, float z);
# 1075 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex3D(texture< char4, 3, cudaReadModeElementType> t, float x, float y, float z);
# 1077 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex3D(texture< uchar4, 3, cudaReadModeElementType> t, float x, float y, float z);
# 1085 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short tex3D(texture< short, 3, cudaReadModeElementType> t, float x, float y, float z);
# 1087 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex3D(texture< unsigned short, 3, cudaReadModeElementType> t, float x, float y, float z);
# 1089 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex3D(texture< short1, 3, cudaReadModeElementType> t, float x, float y, float z);
# 1091 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex3D(texture< ushort1, 3, cudaReadModeElementType> t, float x, float y, float z);
# 1093 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex3D(texture< short2, 3, cudaReadModeElementType> t, float x, float y, float z);
# 1095 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex3D(texture< ushort2, 3, cudaReadModeElementType> t, float x, float y, float z);
# 1097 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex3D(texture< short4, 3, cudaReadModeElementType> t, float x, float y, float z);
# 1099 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex3D(texture< ushort4, 3, cudaReadModeElementType> t, float x, float y, float z);
# 1107 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int tex3D(texture< int, 3, cudaReadModeElementType> t, float x, float y, float z);
# 1109 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex3D(texture< unsigned, 3, cudaReadModeElementType> t, float x, float y, float z);
# 1111 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex3D(texture< int1, 3, cudaReadModeElementType> t, float x, float y, float z);
# 1113 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex3D(texture< uint1, 3, cudaReadModeElementType> t, float x, float y, float z);
# 1115 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex3D(texture< int2, 3, cudaReadModeElementType> t, float x, float y, float z);
# 1117 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex3D(texture< uint2, 3, cudaReadModeElementType> t, float x, float y, float z);
# 1119 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex3D(texture< int4, 3, cudaReadModeElementType> t, float x, float y, float z);
# 1121 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex3D(texture< uint4, 3, cudaReadModeElementType> t, float x, float y, float z);
# 1155 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex3D(texture< float, 3, cudaReadModeElementType> t, float x, float y, float z);
# 1157 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex3D(texture< float1, 3, cudaReadModeElementType> t, float x, float y, float z);
# 1159 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex3D(texture< float2, 3, cudaReadModeElementType> t, float x, float y, float z);
# 1161 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex3D(texture< float4, 3, cudaReadModeElementType> t, float x, float y, float z);
# 1169 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex3D(texture< char, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z);
# 1171 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex3D(texture< signed char, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z);
# 1173 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex3D(texture< unsigned char, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z);
# 1175 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex3D(texture< char1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z);
# 1177 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex3D(texture< uchar1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z);
# 1179 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex3D(texture< char2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z);
# 1181 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex3D(texture< uchar2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z);
# 1183 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex3D(texture< char4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z);
# 1185 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex3D(texture< uchar4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z);
# 1193 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex3D(texture< short, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z);
# 1195 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex3D(texture< unsigned short, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z);
# 1197 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex3D(texture< short1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z);
# 1199 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex3D(texture< ushort1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z);
# 1201 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex3D(texture< short2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z);
# 1203 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex3D(texture< ushort2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z);
# 1205 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex3D(texture< short4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z);
# 1207 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex3D(texture< ushort4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z);
# 1215 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char texCubemap(texture< char, 12, cudaReadModeElementType> t, float x, float y, float z);
# 1217 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline signed char texCubemap(texture< signed char, 12, cudaReadModeElementType> t, float x, float y, float z);
# 1219 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char texCubemap(texture< unsigned char, 12, cudaReadModeElementType> t, float x, float y, float z);
# 1221 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char1 texCubemap(texture< char1, 12, cudaReadModeElementType> t, float x, float y, float z);
# 1223 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 texCubemap(texture< uchar1, 12, cudaReadModeElementType> t, float x, float y, float z);
# 1225 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char2 texCubemap(texture< char2, 12, cudaReadModeElementType> t, float x, float y, float z);
# 1227 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 texCubemap(texture< uchar2, 12, cudaReadModeElementType> t, float x, float y, float z);
# 1229 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char4 texCubemap(texture< char4, 12, cudaReadModeElementType> t, float x, float y, float z);
# 1231 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 texCubemap(texture< uchar4, 12, cudaReadModeElementType> t, float x, float y, float z);
# 1239 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short texCubemap(texture< short, 12, cudaReadModeElementType> t, float x, float y, float z);
# 1241 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short texCubemap(texture< unsigned short, 12, cudaReadModeElementType> t, float x, float y, float z);
# 1243 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short1 texCubemap(texture< short1, 12, cudaReadModeElementType> t, float x, float y, float z);
# 1245 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 texCubemap(texture< ushort1, 12, cudaReadModeElementType> t, float x, float y, float z);
# 1247 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short2 texCubemap(texture< short2, 12, cudaReadModeElementType> t, float x, float y, float z);
# 1249 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 texCubemap(texture< ushort2, 12, cudaReadModeElementType> t, float x, float y, float z);
# 1251 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short4 texCubemap(texture< short4, 12, cudaReadModeElementType> t, float x, float y, float z);
# 1253 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 texCubemap(texture< ushort4, 12, cudaReadModeElementType> t, float x, float y, float z);
# 1261 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int texCubemap(texture< int, 12, cudaReadModeElementType> t, float x, float y, float z);
# 1263 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned texCubemap(texture< unsigned, 12, cudaReadModeElementType> t, float x, float y, float z);
# 1265 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int1 texCubemap(texture< int1, 12, cudaReadModeElementType> t, float x, float y, float z);
# 1267 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint1 texCubemap(texture< uint1, 12, cudaReadModeElementType> t, float x, float y, float z);
# 1269 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int2 texCubemap(texture< int2, 12, cudaReadModeElementType> t, float x, float y, float z);
# 1271 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint2 texCubemap(texture< uint2, 12, cudaReadModeElementType> t, float x, float y, float z);
# 1273 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4 texCubemap(texture< int4, 12, cudaReadModeElementType> t, float x, float y, float z);
# 1275 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4 texCubemap(texture< uint4, 12, cudaReadModeElementType> t, float x, float y, float z);
# 1309 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemap(texture< float, 12, cudaReadModeElementType> t, float x, float y, float z);
# 1311 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemap(texture< float1, 12, cudaReadModeElementType> t, float x, float y, float z);
# 1313 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemap(texture< float2, 12, cudaReadModeElementType> t, float x, float y, float z);
# 1315 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemap(texture< float4, 12, cudaReadModeElementType> t, float x, float y, float z);
# 1323 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemap(texture< char, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z);
# 1325 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemap(texture< signed char, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z);
# 1327 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemap(texture< unsigned char, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z);
# 1329 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemap(texture< char1, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z);
# 1331 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemap(texture< uchar1, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z);
# 1333 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemap(texture< char2, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z);
# 1335 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemap(texture< uchar2, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z);
# 1337 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemap(texture< char4, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z);
# 1339 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemap(texture< uchar4, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z);
# 1347 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemap(texture< short, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z);
# 1349 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemap(texture< unsigned short, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z);
# 1351 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemap(texture< short1, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z);
# 1353 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemap(texture< ushort1, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z);
# 1355 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemap(texture< short2, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z);
# 1357 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemap(texture< ushort2, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z);
# 1359 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemap(texture< short4, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z);
# 1361 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemap(texture< ushort4, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z);
# 1369 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char texCubemapLayered(texture< char, 252, cudaReadModeElementType> t, float x, float y, float z, int layer);
# 1371 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline signed char texCubemapLayered(texture< signed char, 252, cudaReadModeElementType> t, float x, float y, float z, int layer);
# 1373 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char texCubemapLayered(texture< unsigned char, 252, cudaReadModeElementType> t, float x, float y, float z, int layer);
# 1375 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char1 texCubemapLayered(texture< char1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer);
# 1377 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 texCubemapLayered(texture< uchar1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer);
# 1379 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char2 texCubemapLayered(texture< char2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer);
# 1381 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 texCubemapLayered(texture< uchar2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer);
# 1383 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char4 texCubemapLayered(texture< char4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer);
# 1385 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 texCubemapLayered(texture< uchar4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer);
# 1393 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short texCubemapLayered(texture< short, 252, cudaReadModeElementType> t, float x, float y, float z, int layer);
# 1395 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short texCubemapLayered(texture< unsigned short, 252, cudaReadModeElementType> t, float x, float y, float z, int layer);
# 1397 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short1 texCubemapLayered(texture< short1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer);
# 1399 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 texCubemapLayered(texture< ushort1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer);
# 1401 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short2 texCubemapLayered(texture< short2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer);
# 1403 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 texCubemapLayered(texture< ushort2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer);
# 1405 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short4 texCubemapLayered(texture< short4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer);
# 1407 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 texCubemapLayered(texture< ushort4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer);
# 1415 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int texCubemapLayered(texture< int, 252, cudaReadModeElementType> t, float x, float y, float z, int layer);
# 1417 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned texCubemapLayered(texture< unsigned, 252, cudaReadModeElementType> t, float x, float y, float z, int layer);
# 1419 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int1 texCubemapLayered(texture< int1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer);
# 1421 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint1 texCubemapLayered(texture< uint1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer);
# 1423 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int2 texCubemapLayered(texture< int2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer);
# 1425 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint2 texCubemapLayered(texture< uint2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer);
# 1427 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4 texCubemapLayered(texture< int4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer);
# 1429 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4 texCubemapLayered(texture< uint4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer);
# 1463 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLayered(texture< float, 252, cudaReadModeElementType> t, float x, float y, float z, int layer);
# 1465 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemapLayered(texture< float1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer);
# 1467 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemapLayered(texture< float2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer);
# 1469 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemapLayered(texture< float4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer);
# 1477 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLayered(texture< char, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer);
# 1479 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLayered(texture< signed char, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer);
# 1481 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLayered(texture< unsigned char, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer);
# 1483 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemapLayered(texture< char1, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer);
# 1485 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemapLayered(texture< uchar1, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer);
# 1487 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemapLayered(texture< char2, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer);
# 1489 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemapLayered(texture< uchar2, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer);
# 1491 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemapLayered(texture< char4, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer);
# 1493 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemapLayered(texture< uchar4, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer);
# 1501 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLayered(texture< short, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer);
# 1503 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLayered(texture< unsigned short, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer);
# 1505 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemapLayered(texture< short1, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer);
# 1507 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemapLayered(texture< ushort1, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer);
# 1509 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemapLayered(texture< short2, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer);
# 1511 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemapLayered(texture< ushort2, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer);
# 1513 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemapLayered(texture< short4, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer);
# 1515 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemapLayered(texture< ushort4, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer);
# 1586 "/usr/include/texture_fetch_functions.h" 3
template< int comp, class T, cudaTextureReadMode readMode>
# 1587 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4
# 1588 "/usr/include/texture_fetch_functions.h" 3
__itex2Dgather(texture< T, 2, readMode> t, float2 i, int
# 1589 "/usr/include/texture_fetch_functions.h" 3
c = comp)
# 1590 "/usr/include/texture_fetch_functions.h" 3
{int volatile ___ = 1;(void)t;(void)i;(void)c;
# 1598 "/usr/include/texture_fetch_functions.h" 3
::exit(___);}
# 1600 "/usr/include/texture_fetch_functions.h" 3
template< int comp, class T, cudaTextureReadMode readMode>
# 1601 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4
# 1602 "/usr/include/texture_fetch_functions.h" 3
__utex2Dgather(texture< T, 2, readMode> t, float2 i, int
# 1603 "/usr/include/texture_fetch_functions.h" 3
c = comp)
# 1604 "/usr/include/texture_fetch_functions.h" 3
{int volatile ___ = 1;(void)t;(void)i;(void)c;
# 1612 "/usr/include/texture_fetch_functions.h" 3
::exit(___);}
# 1614 "/usr/include/texture_fetch_functions.h" 3
template< int comp, class T, cudaTextureReadMode readMode>
# 1615 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4
# 1616 "/usr/include/texture_fetch_functions.h" 3
__ftex2Dgather(texture< T, 2, readMode> t, float2 i, int
# 1617 "/usr/include/texture_fetch_functions.h" 3
c = comp)
# 1618 "/usr/include/texture_fetch_functions.h" 3
{int volatile ___ = 1;(void)t;(void)i;(void)c;
# 1626 "/usr/include/texture_fetch_functions.h" 3
::exit(___);}
# 1628 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex2Dgather(texture< char, 2, cudaReadModeElementType> t, float x, float y, int comp = 0);
# 1630 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex2Dgather(texture< signed char, 2, cudaReadModeElementType> t, float x, float y, int comp = 0);
# 1632 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex2Dgather(texture< unsigned char, 2, cudaReadModeElementType> t, float x, float y, int comp = 0);
# 1634 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex2Dgather(texture< char1, 2, cudaReadModeElementType> t, float x, float y, int comp = 0);
# 1636 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex2Dgather(texture< uchar1, 2, cudaReadModeElementType> t, float x, float y, int comp = 0);
# 1638 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex2Dgather(texture< char2, 2, cudaReadModeElementType> t, float x, float y, int comp = 0);
# 1640 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex2Dgather(texture< uchar2, 2, cudaReadModeElementType> t, float x, float y, int comp = 0);
# 1642 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex2Dgather(texture< char3, 2, cudaReadModeElementType> t, float x, float y, int comp = 0);
# 1644 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex2Dgather(texture< uchar3, 2, cudaReadModeElementType> t, float x, float y, int comp = 0);
# 1646 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex2Dgather(texture< char4, 2, cudaReadModeElementType> t, float x, float y, int comp = 0);
# 1648 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex2Dgather(texture< uchar4, 2, cudaReadModeElementType> t, float x, float y, int comp = 0);
# 1650 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex2Dgather(texture< short, 2, cudaReadModeElementType> t, float x, float y, int comp = 0);
# 1652 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex2Dgather(texture< unsigned short, 2, cudaReadModeElementType> t, float x, float y, int comp = 0);
# 1654 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex2Dgather(texture< short1, 2, cudaReadModeElementType> t, float x, float y, int comp = 0);
# 1656 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex2Dgather(texture< ushort1, 2, cudaReadModeElementType> t, float x, float y, int comp = 0);
# 1658 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex2Dgather(texture< short2, 2, cudaReadModeElementType> t, float x, float y, int comp = 0);
# 1660 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex2Dgather(texture< ushort2, 2, cudaReadModeElementType> t, float x, float y, int comp = 0);
# 1662 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex2Dgather(texture< short3, 2, cudaReadModeElementType> t, float x, float y, int comp = 0);
# 1664 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex2Dgather(texture< ushort3, 2, cudaReadModeElementType> t, float x, float y, int comp = 0);
# 1666 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex2Dgather(texture< short4, 2, cudaReadModeElementType> t, float x, float y, int comp = 0);
# 1668 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex2Dgather(texture< ushort4, 2, cudaReadModeElementType> t, float x, float y, int comp = 0);
# 1670 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex2Dgather(texture< int, 2, cudaReadModeElementType> t, float x, float y, int comp = 0);
# 1672 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex2Dgather(texture< unsigned, 2, cudaReadModeElementType> t, float x, float y, int comp = 0);
# 1674 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex2Dgather(texture< int1, 2, cudaReadModeElementType> t, float x, float y, int comp = 0);
# 1676 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex2Dgather(texture< uint1, 2, cudaReadModeElementType> t, float x, float y, int comp = 0);
# 1678 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex2Dgather(texture< int2, 2, cudaReadModeElementType> t, float x, float y, int comp = 0);
# 1680 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex2Dgather(texture< uint2, 2, cudaReadModeElementType> t, float x, float y, int comp = 0);
# 1682 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex2Dgather(texture< int3, 2, cudaReadModeElementType> t, float x, float y, int comp = 0);
# 1684 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex2Dgather(texture< uint3, 2, cudaReadModeElementType> t, float x, float y, int comp = 0);
# 1686 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex2Dgather(texture< int4, 2, cudaReadModeElementType> t, float x, float y, int comp = 0);
# 1688 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex2Dgather(texture< uint4, 2, cudaReadModeElementType> t, float x, float y, int comp = 0);
# 1690 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< float, 2, cudaReadModeElementType> t, float x, float y, int comp = 0);
# 1692 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< float1, 2, cudaReadModeElementType> t, float x, float y, int comp = 0);
# 1694 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< float2, 2, cudaReadModeElementType> t, float x, float y, int comp = 0);
# 1696 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< float3, 2, cudaReadModeElementType> t, float x, float y, int comp = 0);
# 1698 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< float4, 2, cudaReadModeElementType> t, float x, float y, int comp = 0);
# 1707 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< char, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0);
# 1709 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< signed char, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0);
# 1711 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< unsigned char, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0);
# 1713 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< char1, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0);
# 1715 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< uchar1, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0);
# 1717 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< char2, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0);
# 1719 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< uchar2, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0);
# 1721 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< char3, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0);
# 1723 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< uchar3, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0);
# 1725 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< char4, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0);
# 1727 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< uchar4, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0);
# 1729 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< short, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0);
# 1731 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< unsigned short, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0);
# 1733 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< short1, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0);
# 1735 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< ushort1, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0);
# 1737 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< short2, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0);
# 1739 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< ushort2, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0);
# 1741 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< short3, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0);
# 1743 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< ushort3, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0);
# 1745 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< short4, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0);
# 1747 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< ushort4, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0);
# 1839 "/usr/include/texture_fetch_functions.h" 3
template< class T, int texType, cudaTextureReadMode readMode>
# 1840 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4
# 1841 "/usr/include/texture_fetch_functions.h" 3
__utexfetchlod(texture< T, texType, readMode> t, float4 i, float level, int
# 1842 "/usr/include/texture_fetch_functions.h" 3
d = texType)
# 1843 "/usr/include/texture_fetch_functions.h" 3
{int volatile ___ = 1;(void)t;(void)i;(void)level;(void)d;
# 1850 "/usr/include/texture_fetch_functions.h" 3
::exit(___);}
# 1852 "/usr/include/texture_fetch_functions.h" 3
template< class T, int texType, cudaTextureReadMode readMode>
# 1853 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4
# 1854 "/usr/include/texture_fetch_functions.h" 3
__itexfetchlod(texture< T, texType, readMode> t, float4 i, float level, int
# 1855 "/usr/include/texture_fetch_functions.h" 3
d = texType)
# 1856 "/usr/include/texture_fetch_functions.h" 3
{int volatile ___ = 1;(void)t;(void)i;(void)level;(void)d;
# 1863 "/usr/include/texture_fetch_functions.h" 3
::exit(___);}
# 1865 "/usr/include/texture_fetch_functions.h" 3
template< class T, int texType, cudaTextureReadMode readMode>
# 1866 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4
# 1867 "/usr/include/texture_fetch_functions.h" 3
__ftexfetchlod(texture< T, texType, readMode> t, float4 i, float level, int
# 1868 "/usr/include/texture_fetch_functions.h" 3
d = texType)
# 1869 "/usr/include/texture_fetch_functions.h" 3
{int volatile ___ = 1;(void)t;(void)i;(void)level;(void)d;
# 1876 "/usr/include/texture_fetch_functions.h" 3
::exit(___);}
# 1879 "/usr/include/texture_fetch_functions.h" 3
template< class T, int texType, cudaTextureReadMode readMode>
# 1880 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4
# 1881 "/usr/include/texture_fetch_functions.h" 3
__utexfetchlodc(texture< T, texType, readMode> t, float4 i, float level)
# 1882 "/usr/include/texture_fetch_functions.h" 3
{int volatile ___ = 1;(void)t;(void)i;(void)level;
# 1884 "/usr/include/texture_fetch_functions.h" 3
::exit(___);}
# 1886 "/usr/include/texture_fetch_functions.h" 3
template< class T, int texType, cudaTextureReadMode readMode>
# 1887 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4
# 1888 "/usr/include/texture_fetch_functions.h" 3
__itexfetchlodc(texture< T, texType, readMode> t, float4 i, float level)
# 1889 "/usr/include/texture_fetch_functions.h" 3
{int volatile ___ = 1;(void)t;(void)i;(void)level;
# 1891 "/usr/include/texture_fetch_functions.h" 3
::exit(___);}
# 1893 "/usr/include/texture_fetch_functions.h" 3
template< class T, int texType, cudaTextureReadMode readMode>
# 1894 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4
# 1895 "/usr/include/texture_fetch_functions.h" 3
__ftexfetchlodc(texture< T, texType, readMode> t, float4 i, float level)
# 1896 "/usr/include/texture_fetch_functions.h" 3
{int volatile ___ = 1;(void)t;(void)i;(void)level;
# 1898 "/usr/include/texture_fetch_functions.h" 3
::exit(___);}
# 1900 "/usr/include/texture_fetch_functions.h" 3
template< class T, int texType, cudaTextureReadMode readMode>
# 1901 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4
# 1902 "/usr/include/texture_fetch_functions.h" 3
__utexfetchlodl(texture< T, texType, readMode> t, float4 i, int l, float
# 1903 "/usr/include/texture_fetch_functions.h" 3
level, int d = texType & 15)
# 1904 "/usr/include/texture_fetch_functions.h" 3
{int volatile ___ = 1;(void)t;(void)i;(void)l;(void)level;(void)d;
# 1910 "/usr/include/texture_fetch_functions.h" 3
::exit(___);}
# 1912 "/usr/include/texture_fetch_functions.h" 3
template< class T, int texType, cudaTextureReadMode readMode>
# 1913 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4
# 1914 "/usr/include/texture_fetch_functions.h" 3
__itexfetchlodl(texture< T, texType, readMode> t, float4 i, int l, float
# 1915 "/usr/include/texture_fetch_functions.h" 3
level, int d = texType & 15)
# 1916 "/usr/include/texture_fetch_functions.h" 3
{int volatile ___ = 1;(void)t;(void)i;(void)l;(void)level;(void)d;
# 1922 "/usr/include/texture_fetch_functions.h" 3
::exit(___);}
# 1924 "/usr/include/texture_fetch_functions.h" 3
template< class T, int texType, cudaTextureReadMode readMode>
# 1925 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4
# 1926 "/usr/include/texture_fetch_functions.h" 3
__ftexfetchlodl(texture< T, texType, readMode> t, float4 i, int l, float
# 1927 "/usr/include/texture_fetch_functions.h" 3
level, int d = texType & 15)
# 1928 "/usr/include/texture_fetch_functions.h" 3
{int volatile ___ = 1;(void)t;(void)i;(void)l;(void)level;(void)d;
# 1934 "/usr/include/texture_fetch_functions.h" 3
::exit(___);}
# 1937 "/usr/include/texture_fetch_functions.h" 3
template< class T, int texType, cudaTextureReadMode readMode>
# 1938 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4
# 1939 "/usr/include/texture_fetch_functions.h" 3
__utexfetchlodlc(texture< T, texType, readMode> t, float4 i, int l, float
# 1940 "/usr/include/texture_fetch_functions.h" 3
level)
# 1941 "/usr/include/texture_fetch_functions.h" 3
{int volatile ___ = 1;(void)t;(void)i;(void)l;(void)level;
# 1943 "/usr/include/texture_fetch_functions.h" 3
::exit(___);}
# 1945 "/usr/include/texture_fetch_functions.h" 3
template< class T, int texType, cudaTextureReadMode readMode>
# 1946 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4
# 1947 "/usr/include/texture_fetch_functions.h" 3
__itexfetchlodlc(texture< T, texType, readMode> t, float4 i, int l, float
# 1948 "/usr/include/texture_fetch_functions.h" 3
level)
# 1949 "/usr/include/texture_fetch_functions.h" 3
{int volatile ___ = 1;(void)t;(void)i;(void)l;(void)level;
# 1951 "/usr/include/texture_fetch_functions.h" 3
::exit(___);}
# 1953 "/usr/include/texture_fetch_functions.h" 3
template< class T, int texType, cudaTextureReadMode readMode>
# 1954 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4
# 1955 "/usr/include/texture_fetch_functions.h" 3
__ftexfetchlodlc(texture< T, texType, readMode> t, float4 i, int l, float
# 1956 "/usr/include/texture_fetch_functions.h" 3
level)
# 1957 "/usr/include/texture_fetch_functions.h" 3
{int volatile ___ = 1;(void)t;(void)i;(void)l;(void)level;
# 1959 "/usr/include/texture_fetch_functions.h" 3
::exit(___);}
# 1968 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char tex1DLod(texture< char, 1, cudaReadModeElementType> t, float x, float level);
# 1970 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex1DLod(texture< signed char, 1, cudaReadModeElementType> t, float x, float level);
# 1972 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex1DLod(texture< unsigned char, 1, cudaReadModeElementType> t, float x, float level);
# 1974 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex1DLod(texture< char1, 1, cudaReadModeElementType> t, float x, float level);
# 1976 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex1DLod(texture< uchar1, 1, cudaReadModeElementType> t, float x, float level);
# 1978 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex1DLod(texture< char2, 1, cudaReadModeElementType> t, float x, float level);
# 1980 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex1DLod(texture< uchar2, 1, cudaReadModeElementType> t, float x, float level);
# 1982 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex1DLod(texture< char4, 1, cudaReadModeElementType> t, float x, float level);
# 1984 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex1DLod(texture< uchar4, 1, cudaReadModeElementType> t, float x, float level);
# 1992 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short tex1DLod(texture< short, 1, cudaReadModeElementType> t, float x, float level);
# 1994 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex1DLod(texture< unsigned short, 1, cudaReadModeElementType> t, float x, float level);
# 1996 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex1DLod(texture< short1, 1, cudaReadModeElementType> t, float x, float level);
# 1998 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex1DLod(texture< ushort1, 1, cudaReadModeElementType> t, float x, float level);
# 2000 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex1DLod(texture< short2, 1, cudaReadModeElementType> t, float x, float level);
# 2002 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex1DLod(texture< ushort2, 1, cudaReadModeElementType> t, float x, float level);
# 2004 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex1DLod(texture< short4, 1, cudaReadModeElementType> t, float x, float level);
# 2006 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex1DLod(texture< ushort4, 1, cudaReadModeElementType> t, float x, float level);
# 2014 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int tex1DLod(texture< int, 1, cudaReadModeElementType> t, float x, float level);
# 2016 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex1DLod(texture< unsigned, 1, cudaReadModeElementType> t, float x, float level);
# 2018 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex1DLod(texture< int1, 1, cudaReadModeElementType> t, float x, float level);
# 2020 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex1DLod(texture< uint1, 1, cudaReadModeElementType> t, float x, float level);
# 2022 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex1DLod(texture< int2, 1, cudaReadModeElementType> t, float x, float level);
# 2024 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex1DLod(texture< uint2, 1, cudaReadModeElementType> t, float x, float level);
# 2026 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex1DLod(texture< int4, 1, cudaReadModeElementType> t, float x, float level);
# 2028 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex1DLod(texture< uint4, 1, cudaReadModeElementType> t, float x, float level);
# 2068 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLod(texture< float, 1, cudaReadModeElementType> t, float x, float level);
# 2070 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLod(texture< float1, 1, cudaReadModeElementType> t, float x, float level);
# 2072 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLod(texture< float2, 1, cudaReadModeElementType> t, float x, float level);
# 2074 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLod(texture< float4, 1, cudaReadModeElementType> t, float x, float level);
# 2082 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLod(texture< char, 1, cudaReadModeNormalizedFloat> t, float x, float level);
# 2084 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLod(texture< signed char, 1, cudaReadModeNormalizedFloat> t, float x, float level);
# 2086 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLod(texture< unsigned char, 1, cudaReadModeNormalizedFloat> t, float x, float level);
# 2088 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLod(texture< char1, 1, cudaReadModeNormalizedFloat> t, float x, float level);
# 2090 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLod(texture< uchar1, 1, cudaReadModeNormalizedFloat> t, float x, float level);
# 2092 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLod(texture< char2, 1, cudaReadModeNormalizedFloat> t, float x, float level);
# 2094 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLod(texture< uchar2, 1, cudaReadModeNormalizedFloat> t, float x, float level);
# 2096 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLod(texture< char4, 1, cudaReadModeNormalizedFloat> t, float x, float level);
# 2098 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLod(texture< uchar4, 1, cudaReadModeNormalizedFloat> t, float x, float level);
# 2106 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLod(texture< short, 1, cudaReadModeNormalizedFloat> t, float x, float level);
# 2108 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLod(texture< unsigned short, 1, cudaReadModeNormalizedFloat> t, float x, float level);
# 2110 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLod(texture< short1, 1, cudaReadModeNormalizedFloat> t, float x, float level);
# 2112 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLod(texture< ushort1, 1, cudaReadModeNormalizedFloat> t, float x, float level);
# 2114 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLod(texture< short2, 1, cudaReadModeNormalizedFloat> t, float x, float level);
# 2116 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLod(texture< ushort2, 1, cudaReadModeNormalizedFloat> t, float x, float level);
# 2118 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLod(texture< short4, 1, cudaReadModeNormalizedFloat> t, float x, float level);
# 2120 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLod(texture< ushort4, 1, cudaReadModeNormalizedFloat> t, float x, float level);
# 2128 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char tex2DLod(texture< char, 2, cudaReadModeElementType> t, float x, float y, float level);
# 2130 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex2DLod(texture< signed char, 2, cudaReadModeElementType> t, float x, float y, float level);
# 2132 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex2DLod(texture< unsigned char, 2, cudaReadModeElementType> t, float x, float y, float level);
# 2134 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex2DLod(texture< char1, 2, cudaReadModeElementType> t, float x, float y, float level);
# 2136 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex2DLod(texture< uchar1, 2, cudaReadModeElementType> t, float x, float y, float level);
# 2138 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex2DLod(texture< char2, 2, cudaReadModeElementType> t, float x, float y, float level);
# 2140 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex2DLod(texture< uchar2, 2, cudaReadModeElementType> t, float x, float y, float level);
# 2142 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex2DLod(texture< char4, 2, cudaReadModeElementType> t, float x, float y, float level);
# 2144 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex2DLod(texture< uchar4, 2, cudaReadModeElementType> t, float x, float y, float level);
# 2152 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short tex2DLod(texture< short, 2, cudaReadModeElementType> t, float x, float y, float level);
# 2154 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex2DLod(texture< unsigned short, 2, cudaReadModeElementType> t, float x, float y, float level);
# 2156 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex2DLod(texture< short1, 2, cudaReadModeElementType> t, float x, float y, float level);
# 2158 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex2DLod(texture< ushort1, 2, cudaReadModeElementType> t, float x, float y, float level);
# 2160 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex2DLod(texture< short2, 2, cudaReadModeElementType> t, float x, float y, float level);
# 2162 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex2DLod(texture< ushort2, 2, cudaReadModeElementType> t, float x, float y, float level);
# 2164 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex2DLod(texture< short4, 2, cudaReadModeElementType> t, float x, float y, float level);
# 2166 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex2DLod(texture< ushort4, 2, cudaReadModeElementType> t, float x, float y, float level);
# 2174 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int tex2DLod(texture< int, 2, cudaReadModeElementType> t, float x, float y, float level);
# 2176 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex2DLod(texture< unsigned, 2, cudaReadModeElementType> t, float x, float y, float level);
# 2178 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex2DLod(texture< int1, 2, cudaReadModeElementType> t, float x, float y, float level);
# 2180 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex2DLod(texture< uint1, 2, cudaReadModeElementType> t, float x, float y, float level);
# 2182 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex2DLod(texture< int2, 2, cudaReadModeElementType> t, float x, float y, float level);
# 2184 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex2DLod(texture< uint2, 2, cudaReadModeElementType> t, float x, float y, float level);
# 2186 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex2DLod(texture< int4, 2, cudaReadModeElementType> t, float x, float y, float level);
# 2188 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex2DLod(texture< uint4, 2, cudaReadModeElementType> t, float x, float y, float level);
# 2222 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLod(texture< float, 2, cudaReadModeElementType> t, float x, float y, float level);
# 2224 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLod(texture< float1, 2, cudaReadModeElementType> t, float x, float y, float level);
# 2226 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLod(texture< float2, 2, cudaReadModeElementType> t, float x, float y, float level);
# 2228 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLod(texture< float4, 2, cudaReadModeElementType> t, float x, float y, float level);
# 2236 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLod(texture< char, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level);
# 2238 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLod(texture< signed char, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level);
# 2240 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLod(texture< unsigned char, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level);
# 2242 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLod(texture< char1, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level);
# 2244 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLod(texture< uchar1, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level);
# 2246 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLod(texture< char2, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level);
# 2248 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLod(texture< uchar2, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level);
# 2250 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLod(texture< char4, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level);
# 2252 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLod(texture< uchar4, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level);
# 2260 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLod(texture< short, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level);
# 2262 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLod(texture< unsigned short, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level);
# 2264 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLod(texture< short1, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level);
# 2266 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLod(texture< ushort1, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level);
# 2268 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLod(texture< short2, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level);
# 2270 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLod(texture< ushort2, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level);
# 2272 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLod(texture< short4, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level);
# 2274 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLod(texture< ushort4, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level);
# 2282 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char tex1DLayeredLod(texture< char, 241, cudaReadModeElementType> t, float x, int layer, float level);
# 2284 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex1DLayeredLod(texture< signed char, 241, cudaReadModeElementType> t, float x, int layer, float level);
# 2286 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex1DLayeredLod(texture< unsigned char, 241, cudaReadModeElementType> t, float x, int layer, float level);
# 2288 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex1DLayeredLod(texture< char1, 241, cudaReadModeElementType> t, float x, int layer, float level);
# 2290 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex1DLayeredLod(texture< uchar1, 241, cudaReadModeElementType> t, float x, int layer, float level);
# 2292 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex1DLayeredLod(texture< char2, 241, cudaReadModeElementType> t, float x, int layer, float level);
# 2294 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex1DLayeredLod(texture< uchar2, 241, cudaReadModeElementType> t, float x, int layer, float level);
# 2296 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex1DLayeredLod(texture< char4, 241, cudaReadModeElementType> t, float x, int layer, float level);
# 2298 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex1DLayeredLod(texture< uchar4, 241, cudaReadModeElementType> t, float x, int layer, float level);
# 2306 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short tex1DLayeredLod(texture< short, 241, cudaReadModeElementType> t, float x, int layer, float level);
# 2308 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex1DLayeredLod(texture< unsigned short, 241, cudaReadModeElementType> t, float x, int layer, float level);
# 2310 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex1DLayeredLod(texture< short1, 241, cudaReadModeElementType> t, float x, int layer, float level);
# 2312 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex1DLayeredLod(texture< ushort1, 241, cudaReadModeElementType> t, float x, int layer, float level);
# 2314 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex1DLayeredLod(texture< short2, 241, cudaReadModeElementType> t, float x, int layer, float level);
# 2316 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex1DLayeredLod(texture< ushort2, 241, cudaReadModeElementType> t, float x, int layer, float level);
# 2318 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex1DLayeredLod(texture< short4, 241, cudaReadModeElementType> t, float x, int layer, float level);
# 2320 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex1DLayeredLod(texture< ushort4, 241, cudaReadModeElementType> t, float x, int layer, float level);
# 2328 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int tex1DLayeredLod(texture< int, 241, cudaReadModeElementType> t, float x, int layer, float level);
# 2330 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex1DLayeredLod(texture< unsigned, 241, cudaReadModeElementType> t, float x, int layer, float level);
# 2332 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex1DLayeredLod(texture< int1, 241, cudaReadModeElementType> t, float x, int layer, float level);
# 2334 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex1DLayeredLod(texture< uint1, 241, cudaReadModeElementType> t, float x, int layer, float level);
# 2336 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex1DLayeredLod(texture< int2, 241, cudaReadModeElementType> t, float x, int layer, float level);
# 2338 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex1DLayeredLod(texture< uint2, 241, cudaReadModeElementType> t, float x, int layer, float level);
# 2340 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex1DLayeredLod(texture< int4, 241, cudaReadModeElementType> t, float x, int layer, float level);
# 2342 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex1DLayeredLod(texture< uint4, 241, cudaReadModeElementType> t, float x, int layer, float level);
# 2376 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayeredLod(texture< float, 241, cudaReadModeElementType> t, float x, int layer, float level);
# 2378 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLayeredLod(texture< float1, 241, cudaReadModeElementType> t, float x, int layer, float level);
# 2380 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLayeredLod(texture< float2, 241, cudaReadModeElementType> t, float x, int layer, float level);
# 2382 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLayeredLod(texture< float4, 241, cudaReadModeElementType> t, float x, int layer, float level);
# 2390 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayeredLod(texture< char, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level);
# 2392 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayeredLod(texture< signed char, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level);
# 2394 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayeredLod(texture< unsigned char, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level);
# 2396 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLayeredLod(texture< char1, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level);
# 2398 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLayeredLod(texture< uchar1, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level);
# 2400 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLayeredLod(texture< char2, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level);
# 2402 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLayeredLod(texture< uchar2, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level);
# 2404 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLayeredLod(texture< char4, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level);
# 2406 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLayeredLod(texture< uchar4, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level);
# 2414 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayeredLod(texture< short, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level);
# 2416 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayeredLod(texture< unsigned short, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level);
# 2418 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLayeredLod(texture< short1, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level);
# 2420 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLayeredLod(texture< ushort1, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level);
# 2422 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLayeredLod(texture< short2, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level);
# 2424 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLayeredLod(texture< ushort2, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level);
# 2426 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLayeredLod(texture< short4, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level);
# 2428 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLayeredLod(texture< ushort4, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level);
# 2436 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char tex2DLayeredLod(texture< char, 242, cudaReadModeElementType> t, float x, float y, int layer, float level);
# 2438 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex2DLayeredLod(texture< signed char, 242, cudaReadModeElementType> t, float x, float y, int layer, float level);
# 2440 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex2DLayeredLod(texture< unsigned char, 242, cudaReadModeElementType> t, float x, float y, int layer, float level);
# 2442 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex2DLayeredLod(texture< char1, 242, cudaReadModeElementType> t, float x, float y, int layer, float level);
# 2444 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex2DLayeredLod(texture< uchar1, 242, cudaReadModeElementType> t, float x, float y, int layer, float level);
# 2446 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex2DLayeredLod(texture< char2, 242, cudaReadModeElementType> t, float x, float y, int layer, float level);
# 2448 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex2DLayeredLod(texture< uchar2, 242, cudaReadModeElementType> t, float x, float y, int layer, float level);
# 2450 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex2DLayeredLod(texture< char4, 242, cudaReadModeElementType> t, float x, float y, int layer, float level);
# 2452 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex2DLayeredLod(texture< uchar4, 242, cudaReadModeElementType> t, float x, float y, int layer, float level);
# 2460 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short tex2DLayeredLod(texture< short, 242, cudaReadModeElementType> t, float x, float y, int layer, float level);
# 2462 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex2DLayeredLod(texture< unsigned short, 242, cudaReadModeElementType> t, float x, float y, int layer, float level);
# 2464 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex2DLayeredLod(texture< short1, 242, cudaReadModeElementType> t, float x, float y, int layer, float level);
# 2466 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex2DLayeredLod(texture< ushort1, 242, cudaReadModeElementType> t, float x, float y, int layer, float level);
# 2468 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex2DLayeredLod(texture< short2, 242, cudaReadModeElementType> t, float x, float y, int layer, float level);
# 2470 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex2DLayeredLod(texture< ushort2, 242, cudaReadModeElementType> t, float x, float y, int layer, float level);
# 2472 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex2DLayeredLod(texture< short4, 242, cudaReadModeElementType> t, float x, float y, int layer, float level);
# 2474 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex2DLayeredLod(texture< ushort4, 242, cudaReadModeElementType> t, float x, float y, int layer, float level);
# 2482 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int tex2DLayeredLod(texture< int, 242, cudaReadModeElementType> t, float x, float y, int layer, float level);
# 2484 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex2DLayeredLod(texture< unsigned, 242, cudaReadModeElementType> t, float x, float y, int layer, float level);
# 2486 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex2DLayeredLod(texture< int1, 242, cudaReadModeElementType> t, float x, float y, int layer, float level);
# 2488 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex2DLayeredLod(texture< uint1, 242, cudaReadModeElementType> t, float x, float y, int layer, float level);
# 2490 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex2DLayeredLod(texture< int2, 242, cudaReadModeElementType> t, float x, float y, int layer, float level);
# 2492 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex2DLayeredLod(texture< uint2, 242, cudaReadModeElementType> t, float x, float y, int layer, float level);
# 2494 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex2DLayeredLod(texture< int4, 242, cudaReadModeElementType> t, float x, float y, int layer, float level);
# 2496 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex2DLayeredLod(texture< uint4, 242, cudaReadModeElementType> t, float x, float y, int layer, float level);
# 2530 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayeredLod(texture< float, 242, cudaReadModeElementType> t, float x, float y, int layer, float level);
# 2532 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLayeredLod(texture< float1, 242, cudaReadModeElementType> t, float x, float y, int layer, float level);
# 2534 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLayeredLod(texture< float2, 242, cudaReadModeElementType> t, float x, float y, int layer, float level);
# 2536 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLayeredLod(texture< float4, 242, cudaReadModeElementType> t, float x, float y, int layer, float level);
# 2544 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayeredLod(texture< char, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level);
# 2546 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayeredLod(texture< signed char, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level);
# 2548 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayeredLod(texture< unsigned char, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level);
# 2550 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLayeredLod(texture< char1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level);
# 2552 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLayeredLod(texture< uchar1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level);
# 2554 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLayeredLod(texture< char2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level);
# 2556 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLayeredLod(texture< uchar2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level);
# 2558 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLayeredLod(texture< char4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level);
# 2560 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLayeredLod(texture< uchar4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level);
# 2568 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayeredLod(texture< short, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level);
# 2570 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayeredLod(texture< unsigned short, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level);
# 2572 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLayeredLod(texture< short1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level);
# 2574 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLayeredLod(texture< ushort1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level);
# 2576 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLayeredLod(texture< short2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level);
# 2578 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLayeredLod(texture< ushort2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level);
# 2580 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLayeredLod(texture< short4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level);
# 2582 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLayeredLod(texture< ushort4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level);
# 2590 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char tex3DLod(texture< char, 3, cudaReadModeElementType> t, float x, float y, float z, float level);
# 2592 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex3DLod(texture< signed char, 3, cudaReadModeElementType> t, float x, float y, float z, float level);
# 2594 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex3DLod(texture< unsigned char, 3, cudaReadModeElementType> t, float x, float y, float z, float level);
# 2596 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex3DLod(texture< char1, 3, cudaReadModeElementType> t, float x, float y, float z, float level);
# 2598 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex3DLod(texture< uchar1, 3, cudaReadModeElementType> t, float x, float y, float z, float level);
# 2600 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex3DLod(texture< char2, 3, cudaReadModeElementType> t, float x, float y, float z, float level);
# 2602 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex3DLod(texture< uchar2, 3, cudaReadModeElementType> t, float x, float y, float z, float level);
# 2604 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex3DLod(texture< char4, 3, cudaReadModeElementType> t, float x, float y, float z, float level);
# 2606 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex3DLod(texture< uchar4, 3, cudaReadModeElementType> t, float x, float y, float z, float level);
# 2614 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short tex3DLod(texture< short, 3, cudaReadModeElementType> t, float x, float y, float z, float level);
# 2616 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex3DLod(texture< unsigned short, 3, cudaReadModeElementType> t, float x, float y, float z, float level);
# 2618 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex3DLod(texture< short1, 3, cudaReadModeElementType> t, float x, float y, float z, float level);
# 2620 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex3DLod(texture< ushort1, 3, cudaReadModeElementType> t, float x, float y, float z, float level);
# 2622 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex3DLod(texture< short2, 3, cudaReadModeElementType> t, float x, float y, float z, float level);
# 2624 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex3DLod(texture< ushort2, 3, cudaReadModeElementType> t, float x, float y, float z, float level);
# 2626 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex3DLod(texture< short4, 3, cudaReadModeElementType> t, float x, float y, float z, float level);
# 2628 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex3DLod(texture< ushort4, 3, cudaReadModeElementType> t, float x, float y, float z, float level);
# 2636 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int tex3DLod(texture< int, 3, cudaReadModeElementType> t, float x, float y, float z, float level);
# 2638 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex3DLod(texture< unsigned, 3, cudaReadModeElementType> t, float x, float y, float z, float level);
# 2640 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex3DLod(texture< int1, 3, cudaReadModeElementType> t, float x, float y, float z, float level);
# 2642 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex3DLod(texture< uint1, 3, cudaReadModeElementType> t, float x, float y, float z, float level);
# 2644 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex3DLod(texture< int2, 3, cudaReadModeElementType> t, float x, float y, float z, float level);
# 2646 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex3DLod(texture< uint2, 3, cudaReadModeElementType> t, float x, float y, float z, float level);
# 2648 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex3DLod(texture< int4, 3, cudaReadModeElementType> t, float x, float y, float z, float level);
# 2650 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex3DLod(texture< uint4, 3, cudaReadModeElementType> t, float x, float y, float z, float level);
# 2684 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex3DLod(texture< float, 3, cudaReadModeElementType> t, float x, float y, float z, float level);
# 2686 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex3DLod(texture< float1, 3, cudaReadModeElementType> t, float x, float y, float z, float level);
# 2688 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex3DLod(texture< float2, 3, cudaReadModeElementType> t, float x, float y, float z, float level);
# 2690 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex3DLod(texture< float4, 3, cudaReadModeElementType> t, float x, float y, float z, float level);
# 2698 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex3DLod(texture< char, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level);
# 2700 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex3DLod(texture< signed char, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level);
# 2702 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex3DLod(texture< unsigned char, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level);
# 2704 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex3DLod(texture< char1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level);
# 2706 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex3DLod(texture< uchar1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level);
# 2708 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex3DLod(texture< char2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level);
# 2710 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex3DLod(texture< uchar2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level);
# 2712 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex3DLod(texture< char4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level);
# 2714 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex3DLod(texture< uchar4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level);
# 2722 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex3DLod(texture< short, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level);
# 2724 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex3DLod(texture< unsigned short, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level);
# 2726 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex3DLod(texture< short1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level);
# 2728 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex3DLod(texture< ushort1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level);
# 2730 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex3DLod(texture< short2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level);
# 2732 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex3DLod(texture< ushort2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level);
# 2734 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex3DLod(texture< short4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level);
# 2736 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex3DLod(texture< ushort4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level);
# 2744 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char texCubemapLod(texture< char, 12, cudaReadModeElementType> t, float x, float y, float z, float level);
# 2746 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline signed char texCubemapLod(texture< signed char, 12, cudaReadModeElementType> t, float x, float y, float z, float level);
# 2748 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char texCubemapLod(texture< unsigned char, 12, cudaReadModeElementType> t, float x, float y, float z, float level);
# 2750 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char1 texCubemapLod(texture< char1, 12, cudaReadModeElementType> t, float x, float y, float z, float level);
# 2752 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 texCubemapLod(texture< uchar1, 12, cudaReadModeElementType> t, float x, float y, float z, float level);
# 2754 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char2 texCubemapLod(texture< char2, 12, cudaReadModeElementType> t, float x, float y, float z, float level);
# 2756 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 texCubemapLod(texture< uchar2, 12, cudaReadModeElementType> t, float x, float y, float z, float level);
# 2758 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char4 texCubemapLod(texture< char4, 12, cudaReadModeElementType> t, float x, float y, float z, float level);
# 2760 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 texCubemapLod(texture< uchar4, 12, cudaReadModeElementType> t, float x, float y, float z, float level);
# 2768 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short texCubemapLod(texture< short, 12, cudaReadModeElementType> t, float x, float y, float z, float level);
# 2770 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short texCubemapLod(texture< unsigned short, 12, cudaReadModeElementType> t, float x, float y, float z, float level);
# 2772 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short1 texCubemapLod(texture< short1, 12, cudaReadModeElementType> t, float x, float y, float z, float level);
# 2774 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 texCubemapLod(texture< ushort1, 12, cudaReadModeElementType> t, float x, float y, float z, float level);
# 2776 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short2 texCubemapLod(texture< short2, 12, cudaReadModeElementType> t, float x, float y, float z, float level);
# 2778 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 texCubemapLod(texture< ushort2, 12, cudaReadModeElementType> t, float x, float y, float z, float level);
# 2780 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short4 texCubemapLod(texture< short4, 12, cudaReadModeElementType> t, float x, float y, float z, float level);
# 2782 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 texCubemapLod(texture< ushort4, 12, cudaReadModeElementType> t, float x, float y, float z, float level);
# 2790 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int texCubemapLod(texture< int, 12, cudaReadModeElementType> t, float x, float y, float z, float level);
# 2792 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned texCubemapLod(texture< unsigned, 12, cudaReadModeElementType> t, float x, float y, float z, float level);
# 2794 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int1 texCubemapLod(texture< int1, 12, cudaReadModeElementType> t, float x, float y, float z, float level);
# 2796 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint1 texCubemapLod(texture< uint1, 12, cudaReadModeElementType> t, float x, float y, float z, float level);
# 2798 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int2 texCubemapLod(texture< int2, 12, cudaReadModeElementType> t, float x, float y, float z, float level);
# 2800 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint2 texCubemapLod(texture< uint2, 12, cudaReadModeElementType> t, float x, float y, float z, float level);
# 2802 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4 texCubemapLod(texture< int4, 12, cudaReadModeElementType> t, float x, float y, float z, float level);
# 2804 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4 texCubemapLod(texture< uint4, 12, cudaReadModeElementType> t, float x, float y, float z, float level);
# 2838 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLod(texture< float, 12, cudaReadModeElementType> t, float x, float y, float z, float level);
# 2840 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemapLod(texture< float1, 12, cudaReadModeElementType> t, float x, float y, float z, float level);
# 2842 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemapLod(texture< float2, 12, cudaReadModeElementType> t, float x, float y, float z, float level);
# 2844 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemapLod(texture< float4, 12, cudaReadModeElementType> t, float x, float y, float z, float level);
# 2852 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLod(texture< char, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level);
# 2854 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLod(texture< signed char, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level);
# 2856 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLod(texture< unsigned char, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level);
# 2858 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemapLod(texture< char1, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level);
# 2860 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemapLod(texture< uchar1, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level);
# 2862 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemapLod(texture< char2, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level);
# 2864 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemapLod(texture< uchar2, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level);
# 2866 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemapLod(texture< char4, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level);
# 2868 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemapLod(texture< uchar4, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level);
# 2876 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLod(texture< short, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level);
# 2878 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLod(texture< unsigned short, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level);
# 2880 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemapLod(texture< short1, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level);
# 2882 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemapLod(texture< ushort1, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level);
# 2884 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemapLod(texture< short2, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level);
# 2886 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemapLod(texture< ushort2, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level);
# 2888 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemapLod(texture< short4, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level);
# 2890 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemapLod(texture< ushort4, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level);
# 2898 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char texCubemapLayeredLod(texture< char, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level);
# 2900 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline signed char texCubemapLayeredLod(texture< signed char, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level);
# 2902 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char texCubemapLayeredLod(texture< unsigned char, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level);
# 2904 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char1 texCubemapLayeredLod(texture< char1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level);
# 2906 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 texCubemapLayeredLod(texture< uchar1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level);
# 2908 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char2 texCubemapLayeredLod(texture< char2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level);
# 2910 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 texCubemapLayeredLod(texture< uchar2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level);
# 2912 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char4 texCubemapLayeredLod(texture< char4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level);
# 2914 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 texCubemapLayeredLod(texture< uchar4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level);
# 2922 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short texCubemapLayeredLod(texture< short, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level);
# 2924 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short texCubemapLayeredLod(texture< unsigned short, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level);
# 2926 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short1 texCubemapLayeredLod(texture< short1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level);
# 2928 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 texCubemapLayeredLod(texture< ushort1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level);
# 2930 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short2 texCubemapLayeredLod(texture< short2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level);
# 2932 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 texCubemapLayeredLod(texture< ushort2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level);
# 2934 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short4 texCubemapLayeredLod(texture< short4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level);
# 2936 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 texCubemapLayeredLod(texture< ushort4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level);
# 2944 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int texCubemapLayeredLod(texture< int, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level);
# 2946 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned texCubemapLayeredLod(texture< unsigned, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level);
# 2948 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int1 texCubemapLayeredLod(texture< int1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level);
# 2950 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint1 texCubemapLayeredLod(texture< uint1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level);
# 2952 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int2 texCubemapLayeredLod(texture< int2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level);
# 2954 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint2 texCubemapLayeredLod(texture< uint2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level);
# 2956 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4 texCubemapLayeredLod(texture< int4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level);
# 2958 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4 texCubemapLayeredLod(texture< uint4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level);
# 2992 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLayeredLod(texture< float, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level);
# 2994 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemapLayeredLod(texture< float1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level);
# 2996 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemapLayeredLod(texture< float2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level);
# 2998 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemapLayeredLod(texture< float4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level);
# 3006 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLayeredLod(texture< char, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level);
# 3008 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLayeredLod(texture< signed char, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level);
# 3010 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLayeredLod(texture< unsigned char, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level);
# 3012 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemapLayeredLod(texture< char1, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level);
# 3014 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemapLayeredLod(texture< uchar1, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level);
# 3016 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemapLayeredLod(texture< char2, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level);
# 3018 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemapLayeredLod(texture< uchar2, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level);
# 3020 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemapLayeredLod(texture< char4, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level);
# 3022 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemapLayeredLod(texture< uchar4, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level);
# 3030 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLayeredLod(texture< short, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level);
# 3032 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLayeredLod(texture< unsigned short, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level);
# 3034 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemapLayeredLod(texture< short1, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level);
# 3036 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemapLayeredLod(texture< ushort1, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level);
# 3038 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemapLayeredLod(texture< short2, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level);
# 3040 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemapLayeredLod(texture< ushort2, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level);
# 3042 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemapLayeredLod(texture< short4, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level);
# 3044 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemapLayeredLod(texture< ushort4, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level);
# 3047 "/usr/include/texture_fetch_functions.h" 3
template< class T, int texType, cudaTextureReadMode readMode>
# 3048 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4
# 3049 "/usr/include/texture_fetch_functions.h" 3
__utexfetchgrad(texture< T, texType, readMode> t, float4 i, float4 dPdx, float4 dPdy, int d = texType)
# 3050 "/usr/include/texture_fetch_functions.h" 3
{int volatile ___ = 1;(void)t;(void)i;(void)dPdx;(void)dPdy;(void)d;
# 3057 "/usr/include/texture_fetch_functions.h" 3
::exit(___);}
# 3059 "/usr/include/texture_fetch_functions.h" 3
template< class T, int texType, cudaTextureReadMode readMode>
# 3060 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4
# 3061 "/usr/include/texture_fetch_functions.h" 3
__itexfetchgrad(texture< T, texType, readMode> t, float4 i, float4 dPdx, float4 dPdy, int d = texType)
# 3062 "/usr/include/texture_fetch_functions.h" 3
{int volatile ___ = 1;(void)t;(void)i;(void)dPdx;(void)dPdy;(void)d;
# 3069 "/usr/include/texture_fetch_functions.h" 3
::exit(___);}
# 3071 "/usr/include/texture_fetch_functions.h" 3
template< class T, int texType, cudaTextureReadMode readMode>
# 3072 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4
# 3073 "/usr/include/texture_fetch_functions.h" 3
__ftexfetchgrad(texture< T, texType, readMode> t, float4 i, float4 dPdx, float4 dPdy, int d = texType)
# 3074 "/usr/include/texture_fetch_functions.h" 3
{int volatile ___ = 1;(void)t;(void)i;(void)dPdx;(void)dPdy;(void)d;
# 3081 "/usr/include/texture_fetch_functions.h" 3
::exit(___);}
# 3083 "/usr/include/texture_fetch_functions.h" 3
template< class T, int texType, cudaTextureReadMode readMode>
# 3084 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4
# 3085 "/usr/include/texture_fetch_functions.h" 3
__utexfetchgradl(texture< T, texType, readMode> t, float4 i, int l, float4 dPdx, float4 dPdy, int d = texType & 15)
# 3086 "/usr/include/texture_fetch_functions.h" 3
{int volatile ___ = 1;(void)t;(void)i;(void)l;(void)dPdx;(void)dPdy;(void)d;
# 3092 "/usr/include/texture_fetch_functions.h" 3
::exit(___);}
# 3094 "/usr/include/texture_fetch_functions.h" 3
template< class T, int texType, cudaTextureReadMode readMode>
# 3095 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4
# 3096 "/usr/include/texture_fetch_functions.h" 3
__itexfetchgradl(texture< T, texType, readMode> t, float4 i, int l, float4 dPdx, float4 dPdy, int d = texType & 15)
# 3097 "/usr/include/texture_fetch_functions.h" 3
{int volatile ___ = 1;(void)t;(void)i;(void)l;(void)dPdx;(void)dPdy;(void)d;
# 3103 "/usr/include/texture_fetch_functions.h" 3
::exit(___);}
# 3105 "/usr/include/texture_fetch_functions.h" 3
template< class T, int texType, cudaTextureReadMode readMode>
# 3106 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4
# 3107 "/usr/include/texture_fetch_functions.h" 3
__ftexfetchgradl(texture< T, texType, readMode> t, float4 i, int l, float4 dPdx, float4 dPdy, int d = texType & 15)
# 3108 "/usr/include/texture_fetch_functions.h" 3
{int volatile ___ = 1;(void)t;(void)i;(void)l;(void)dPdx;(void)dPdy;(void)d;
# 3114 "/usr/include/texture_fetch_functions.h" 3
::exit(___);}
# 3123 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char tex1DGrad(texture< char, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy);
# 3125 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex1DGrad(texture< signed char, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy);
# 3127 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex1DGrad(texture< unsigned char, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy);
# 3129 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex1DGrad(texture< char1, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy);
# 3131 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex1DGrad(texture< uchar1, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy);
# 3133 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex1DGrad(texture< char2, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy);
# 3135 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex1DGrad(texture< uchar2, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy);
# 3137 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex1DGrad(texture< char4, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy);
# 3139 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex1DGrad(texture< uchar4, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy);
# 3147 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short tex1DGrad(texture< short, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy);
# 3149 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex1DGrad(texture< unsigned short, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy);
# 3151 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex1DGrad(texture< short1, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy);
# 3153 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex1DGrad(texture< ushort1, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy);
# 3155 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex1DGrad(texture< short2, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy);
# 3157 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex1DGrad(texture< ushort2, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy);
# 3159 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex1DGrad(texture< short4, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy);
# 3161 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex1DGrad(texture< ushort4, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy);
# 3169 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int tex1DGrad(texture< int, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy);
# 3171 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex1DGrad(texture< unsigned, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy);
# 3173 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex1DGrad(texture< int1, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy);
# 3175 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex1DGrad(texture< uint1, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy);
# 3177 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex1DGrad(texture< int2, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy);
# 3179 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex1DGrad(texture< uint2, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy);
# 3181 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex1DGrad(texture< int4, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy);
# 3183 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex1DGrad(texture< uint4, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy);
# 3223 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DGrad(texture< float, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy);
# 3225 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DGrad(texture< float1, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy);
# 3227 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DGrad(texture< float2, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy);
# 3229 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DGrad(texture< float4, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy);
# 3237 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DGrad(texture< char, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy);
# 3239 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DGrad(texture< signed char, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy);
# 3241 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DGrad(texture< unsigned char, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy);
# 3243 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DGrad(texture< char1, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy);
# 3245 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DGrad(texture< uchar1, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy);
# 3247 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DGrad(texture< char2, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy);
# 3249 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DGrad(texture< uchar2, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy);
# 3251 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DGrad(texture< char4, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy);
# 3253 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DGrad(texture< uchar4, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy);
# 3261 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DGrad(texture< short, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy);
# 3263 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DGrad(texture< unsigned short, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy);
# 3265 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DGrad(texture< short1, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy);
# 3267 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DGrad(texture< ushort1, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy);
# 3269 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DGrad(texture< short2, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy);
# 3271 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DGrad(texture< ushort2, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy);
# 3273 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DGrad(texture< short4, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy);
# 3275 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DGrad(texture< ushort4, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy);
# 3283 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char tex2DGrad(texture< char, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy);
# 3285 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex2DGrad(texture< signed char, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy);
# 3287 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex2DGrad(texture< unsigned char, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy);
# 3289 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex2DGrad(texture< char1, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy);
# 3291 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex2DGrad(texture< uchar1, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy);
# 3293 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex2DGrad(texture< char2, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy);
# 3295 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex2DGrad(texture< uchar2, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy);
# 3297 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex2DGrad(texture< char4, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy);
# 3299 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex2DGrad(texture< uchar4, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy);
# 3307 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short tex2DGrad(texture< short, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy);
# 3309 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex2DGrad(texture< unsigned short, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy);
# 3311 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex2DGrad(texture< short1, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy);
# 3313 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex2DGrad(texture< ushort1, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy);
# 3315 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex2DGrad(texture< short2, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy);
# 3317 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex2DGrad(texture< ushort2, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy);
# 3319 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex2DGrad(texture< short4, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy);
# 3321 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex2DGrad(texture< ushort4, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy);
# 3329 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int tex2DGrad(texture< int, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy);
# 3331 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex2DGrad(texture< unsigned, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy);
# 3333 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex2DGrad(texture< int1, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy);
# 3335 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex2DGrad(texture< uint1, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy);
# 3337 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex2DGrad(texture< int2, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy);
# 3339 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex2DGrad(texture< uint2, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy);
# 3341 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex2DGrad(texture< int4, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy);
# 3343 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex2DGrad(texture< uint4, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy);
# 3377 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DGrad(texture< float, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy);
# 3379 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DGrad(texture< float1, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy);
# 3381 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DGrad(texture< float2, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy);
# 3383 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DGrad(texture< float4, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy);
# 3391 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DGrad(texture< char, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy);
# 3393 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DGrad(texture< signed char, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy);
# 3395 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DGrad(texture< unsigned char, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy);
# 3397 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DGrad(texture< char1, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy);
# 3399 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DGrad(texture< uchar1, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy);
# 3401 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DGrad(texture< char2, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy);
# 3403 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DGrad(texture< uchar2, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy);
# 3405 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DGrad(texture< char4, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy);
# 3407 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DGrad(texture< uchar4, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy);
# 3415 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DGrad(texture< short, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy);
# 3417 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DGrad(texture< unsigned short, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy);
# 3419 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DGrad(texture< short1, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy);
# 3421 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DGrad(texture< ushort1, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy);
# 3423 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DGrad(texture< short2, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy);
# 3425 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DGrad(texture< ushort2, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy);
# 3427 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DGrad(texture< short4, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy);
# 3429 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DGrad(texture< ushort4, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy);
# 3437 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char tex1DLayeredGrad(texture< char, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy);
# 3439 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex1DLayeredGrad(texture< signed char, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy);
# 3441 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex1DLayeredGrad(texture< unsigned char, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy);
# 3443 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex1DLayeredGrad(texture< char1, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy);
# 3445 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex1DLayeredGrad(texture< uchar1, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy);
# 3447 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex1DLayeredGrad(texture< char2, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy);
# 3449 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex1DLayeredGrad(texture< uchar2, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy);
# 3451 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex1DLayeredGrad(texture< char4, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy);
# 3453 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex1DLayeredGrad(texture< uchar4, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy);
# 3461 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short tex1DLayeredGrad(texture< short, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy);
# 3463 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex1DLayeredGrad(texture< unsigned short, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy);
# 3465 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex1DLayeredGrad(texture< short1, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy);
# 3467 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex1DLayeredGrad(texture< ushort1, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy);
# 3469 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex1DLayeredGrad(texture< short2, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy);
# 3471 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex1DLayeredGrad(texture< ushort2, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy);
# 3473 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex1DLayeredGrad(texture< short4, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy);
# 3475 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex1DLayeredGrad(texture< ushort4, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy);
# 3483 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int tex1DLayeredGrad(texture< int, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy);
# 3485 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex1DLayeredGrad(texture< unsigned, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy);
# 3487 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex1DLayeredGrad(texture< int1, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy);
# 3489 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex1DLayeredGrad(texture< uint1, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy);
# 3491 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex1DLayeredGrad(texture< int2, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy);
# 3493 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex1DLayeredGrad(texture< uint2, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy);
# 3495 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex1DLayeredGrad(texture< int4, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy);
# 3497 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex1DLayeredGrad(texture< uint4, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy);
# 3531 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayeredGrad(texture< float, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy);
# 3533 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLayeredGrad(texture< float1, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy);
# 3535 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLayeredGrad(texture< float2, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy);
# 3537 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLayeredGrad(texture< float4, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy);
# 3545 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayeredGrad(texture< char, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy);
# 3547 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayeredGrad(texture< signed char, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy);
# 3549 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayeredGrad(texture< unsigned char, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy);
# 3551 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLayeredGrad(texture< char1, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy);
# 3553 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLayeredGrad(texture< uchar1, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy);
# 3555 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLayeredGrad(texture< char2, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy);
# 3557 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLayeredGrad(texture< uchar2, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy);
# 3559 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLayeredGrad(texture< char4, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy);
# 3561 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLayeredGrad(texture< uchar4, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy);
# 3569 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayeredGrad(texture< short, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy);
# 3571 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayeredGrad(texture< unsigned short, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy);
# 3573 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLayeredGrad(texture< short1, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy);
# 3575 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLayeredGrad(texture< ushort1, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy);
# 3577 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLayeredGrad(texture< short2, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy);
# 3579 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLayeredGrad(texture< ushort2, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy);
# 3581 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLayeredGrad(texture< short4, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy);
# 3583 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLayeredGrad(texture< ushort4, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy);
# 3591 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char tex2DLayeredGrad(texture< char, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 3593 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex2DLayeredGrad(texture< signed char, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 3595 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex2DLayeredGrad(texture< unsigned char, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 3597 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex2DLayeredGrad(texture< char1, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 3599 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex2DLayeredGrad(texture< uchar1, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 3601 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex2DLayeredGrad(texture< char2, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 3603 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex2DLayeredGrad(texture< uchar2, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 3605 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex2DLayeredGrad(texture< char4, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 3607 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex2DLayeredGrad(texture< uchar4, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 3615 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short tex2DLayeredGrad(texture< short, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 3617 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex2DLayeredGrad(texture< unsigned short, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 3619 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex2DLayeredGrad(texture< short1, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 3621 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex2DLayeredGrad(texture< ushort1, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 3623 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex2DLayeredGrad(texture< short2, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 3625 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex2DLayeredGrad(texture< ushort2, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 3627 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex2DLayeredGrad(texture< short4, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 3629 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex2DLayeredGrad(texture< ushort4, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 3637 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int tex2DLayeredGrad(texture< int, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 3639 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex2DLayeredGrad(texture< unsigned, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 3641 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex2DLayeredGrad(texture< int1, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 3643 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex2DLayeredGrad(texture< uint1, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 3645 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex2DLayeredGrad(texture< int2, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 3647 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex2DLayeredGrad(texture< uint2, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 3649 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex2DLayeredGrad(texture< int4, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 3651 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex2DLayeredGrad(texture< uint4, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 3685 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayeredGrad(texture< float, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 3687 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLayeredGrad(texture< float1, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 3689 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLayeredGrad(texture< float2, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 3691 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLayeredGrad(texture< float4, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 3699 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayeredGrad(texture< char, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 3701 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayeredGrad(texture< signed char, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 3703 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayeredGrad(texture< unsigned char, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 3705 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLayeredGrad(texture< char1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 3707 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLayeredGrad(texture< uchar1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 3709 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLayeredGrad(texture< char2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 3711 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLayeredGrad(texture< uchar2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 3713 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLayeredGrad(texture< char4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 3715 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLayeredGrad(texture< uchar4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 3723 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayeredGrad(texture< short, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 3725 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayeredGrad(texture< unsigned short, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 3727 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLayeredGrad(texture< short1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 3729 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLayeredGrad(texture< ushort1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 3731 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLayeredGrad(texture< short2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 3733 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLayeredGrad(texture< ushort2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 3735 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLayeredGrad(texture< short4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 3737 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLayeredGrad(texture< ushort4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 3745 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char tex3DGrad(texture< char, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy);
# 3747 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex3DGrad(texture< signed char, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy);
# 3749 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex3DGrad(texture< unsigned char, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy);
# 3751 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex3DGrad(texture< char1, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy);
# 3753 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex3DGrad(texture< uchar1, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy);
# 3755 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex3DGrad(texture< char2, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy);
# 3757 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex3DGrad(texture< uchar2, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy);
# 3759 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex3DGrad(texture< char4, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy);
# 3761 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex3DGrad(texture< uchar4, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy);
# 3769 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short tex3DGrad(texture< short, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy);
# 3771 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex3DGrad(texture< unsigned short, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy);
# 3773 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex3DGrad(texture< short1, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy);
# 3775 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex3DGrad(texture< ushort1, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy);
# 3777 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex3DGrad(texture< short2, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy);
# 3779 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex3DGrad(texture< ushort2, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy);
# 3781 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex3DGrad(texture< short4, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy);
# 3783 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex3DGrad(texture< ushort4, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy);
# 3791 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int tex3DGrad(texture< int, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy);
# 3793 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex3DGrad(texture< unsigned, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy);
# 3795 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex3DGrad(texture< int1, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy);
# 3797 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex3DGrad(texture< uint1, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy);
# 3799 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex3DGrad(texture< int2, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy);
# 3801 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex3DGrad(texture< uint2, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy);
# 3803 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex3DGrad(texture< int4, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy);
# 3805 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex3DGrad(texture< uint4, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy);
# 3839 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex3DGrad(texture< float, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy);
# 3841 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex3DGrad(texture< float1, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy);
# 3843 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex3DGrad(texture< float2, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy);
# 3845 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex3DGrad(texture< float4, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy);
# 3853 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex3DGrad(texture< char, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy);
# 3855 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex3DGrad(texture< signed char, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy);
# 3857 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex3DGrad(texture< unsigned char, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy);
# 3859 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex3DGrad(texture< char1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy);
# 3861 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex3DGrad(texture< uchar1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy);
# 3863 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex3DGrad(texture< char2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy);
# 3865 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex3DGrad(texture< uchar2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy);
# 3867 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex3DGrad(texture< char4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy);
# 3869 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex3DGrad(texture< uchar4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy);
# 3877 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex3DGrad(texture< short, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy);
# 3879 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex3DGrad(texture< unsigned short, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy);
# 3881 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex3DGrad(texture< short1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy);
# 3883 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex3DGrad(texture< ushort1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy);
# 3885 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex3DGrad(texture< short2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy);
# 3887 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex3DGrad(texture< ushort2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy);
# 3889 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex3DGrad(texture< short4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy);
# 3891 "/usr/include/texture_fetch_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex3DGrad(texture< ushort4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy);
# 80 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char tex1Dfetch(texture< char, 1, cudaReadModeElementType> t, int x)
# 81 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 89 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 91 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex1Dfetch(texture< signed char, 1, cudaReadModeElementType> t, int x)
# 92 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 96 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 98 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex1Dfetch(texture< unsigned char, 1, cudaReadModeElementType> t, int x)
# 99 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 103 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 105 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex1Dfetch(texture< char1, 1, cudaReadModeElementType> t, int x)
# 106 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 110 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 112 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex1Dfetch(texture< uchar1, 1, cudaReadModeElementType> t, int x)
# 113 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 117 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 119 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex1Dfetch(texture< char2, 1, cudaReadModeElementType> t, int x)
# 120 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 124 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 126 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex1Dfetch(texture< uchar2, 1, cudaReadModeElementType> t, int x)
# 127 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 131 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 133 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex1Dfetch(texture< char4, 1, cudaReadModeElementType> t, int x)
# 134 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 138 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 140 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex1Dfetch(texture< uchar4, 1, cudaReadModeElementType> t, int x)
# 141 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 145 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 153 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short tex1Dfetch(texture< short, 1, cudaReadModeElementType> t, int x)
# 154 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 158 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 160 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex1Dfetch(texture< unsigned short, 1, cudaReadModeElementType> t, int x)
# 161 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 165 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 167 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex1Dfetch(texture< short1, 1, cudaReadModeElementType> t, int x)
# 168 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 172 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 174 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex1Dfetch(texture< ushort1, 1, cudaReadModeElementType> t, int x)
# 175 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 179 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 181 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex1Dfetch(texture< short2, 1, cudaReadModeElementType> t, int x)
# 182 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 186 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 188 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex1Dfetch(texture< ushort2, 1, cudaReadModeElementType> t, int x)
# 189 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 193 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 195 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex1Dfetch(texture< short4, 1, cudaReadModeElementType> t, int x)
# 196 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 200 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 202 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex1Dfetch(texture< ushort4, 1, cudaReadModeElementType> t, int x)
# 203 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 207 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 215 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int tex1Dfetch(texture< int, 1, cudaReadModeElementType> t, int x)
# 216 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 220 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 222 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex1Dfetch(texture< unsigned, 1, cudaReadModeElementType> t, int x)
# 223 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 227 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 229 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex1Dfetch(texture< int1, 1, cudaReadModeElementType> t, int x)
# 230 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 234 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 236 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex1Dfetch(texture< uint1, 1, cudaReadModeElementType> t, int x)
# 237 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 241 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 243 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex1Dfetch(texture< int2, 1, cudaReadModeElementType> t, int x)
# 244 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 248 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 250 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex1Dfetch(texture< uint2, 1, cudaReadModeElementType> t, int x)
# 251 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 255 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 257 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex1Dfetch(texture< int4, 1, cudaReadModeElementType> t, int x)
# 258 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 262 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 264 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex1Dfetch(texture< uint4, 1, cudaReadModeElementType> t, int x)
# 265 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 269 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 343 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1Dfetch(texture< float, 1, cudaReadModeElementType> t, int x)
# 344 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 348 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 350 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1Dfetch(texture< float1, 1, cudaReadModeElementType> t, int x)
# 351 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 355 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 357 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1Dfetch(texture< float2, 1, cudaReadModeElementType> t, int x)
# 358 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 362 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 364 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1Dfetch(texture< float4, 1, cudaReadModeElementType> t, int x)
# 365 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 369 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 377 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1Dfetch(texture< char, 1, cudaReadModeNormalizedFloat> t, int x)
# 378 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 387 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 389 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1Dfetch(texture< signed char, 1, cudaReadModeNormalizedFloat> t, int x)
# 390 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 395 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 397 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1Dfetch(texture< unsigned char, 1, cudaReadModeNormalizedFloat> t, int x)
# 398 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 403 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 405 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1Dfetch(texture< char1, 1, cudaReadModeNormalizedFloat> t, int x)
# 406 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 411 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 413 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1Dfetch(texture< uchar1, 1, cudaReadModeNormalizedFloat> t, int x)
# 414 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 419 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 421 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1Dfetch(texture< char2, 1, cudaReadModeNormalizedFloat> t, int x)
# 422 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 427 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 429 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1Dfetch(texture< uchar2, 1, cudaReadModeNormalizedFloat> t, int x)
# 430 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 435 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 437 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1Dfetch(texture< char4, 1, cudaReadModeNormalizedFloat> t, int x)
# 438 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 443 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 445 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1Dfetch(texture< uchar4, 1, cudaReadModeNormalizedFloat> t, int x)
# 446 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 451 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 459 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1Dfetch(texture< short, 1, cudaReadModeNormalizedFloat> t, int x)
# 460 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 465 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 467 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1Dfetch(texture< unsigned short, 1, cudaReadModeNormalizedFloat> t, int x)
# 468 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 473 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 475 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1Dfetch(texture< short1, 1, cudaReadModeNormalizedFloat> t, int x)
# 476 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 481 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 483 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1Dfetch(texture< ushort1, 1, cudaReadModeNormalizedFloat> t, int x)
# 484 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 489 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 491 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1Dfetch(texture< short2, 1, cudaReadModeNormalizedFloat> t, int x)
# 492 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 497 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 499 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1Dfetch(texture< ushort2, 1, cudaReadModeNormalizedFloat> t, int x)
# 500 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 505 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 507 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1Dfetch(texture< short4, 1, cudaReadModeNormalizedFloat> t, int x)
# 508 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 513 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 515 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1Dfetch(texture< ushort4, 1, cudaReadModeNormalizedFloat> t, int x)
# 516 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 521 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 529 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char tex1D(texture< char, 1, cudaReadModeElementType> t, float x)
# 530 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 538 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 540 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex1D(texture< signed char, 1, cudaReadModeElementType> t, float x)
# 541 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 545 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 547 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex1D(texture< unsigned char, 1, cudaReadModeElementType> t, float x)
# 548 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 552 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 554 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex1D(texture< char1, 1, cudaReadModeElementType> t, float x)
# 555 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 559 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 561 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex1D(texture< uchar1, 1, cudaReadModeElementType> t, float x)
# 562 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 566 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 568 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex1D(texture< char2, 1, cudaReadModeElementType> t, float x)
# 569 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 573 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 575 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex1D(texture< uchar2, 1, cudaReadModeElementType> t, float x)
# 576 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 580 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 582 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex1D(texture< char4, 1, cudaReadModeElementType> t, float x)
# 583 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 587 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 589 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex1D(texture< uchar4, 1, cudaReadModeElementType> t, float x)
# 590 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 594 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 602 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short tex1D(texture< short, 1, cudaReadModeElementType> t, float x)
# 603 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 607 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 609 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex1D(texture< unsigned short, 1, cudaReadModeElementType> t, float x)
# 610 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 614 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 616 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex1D(texture< short1, 1, cudaReadModeElementType> t, float x)
# 617 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 621 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 623 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex1D(texture< ushort1, 1, cudaReadModeElementType> t, float x)
# 624 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 628 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 630 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex1D(texture< short2, 1, cudaReadModeElementType> t, float x)
# 631 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 635 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 637 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex1D(texture< ushort2, 1, cudaReadModeElementType> t, float x)
# 638 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 642 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 644 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex1D(texture< short4, 1, cudaReadModeElementType> t, float x)
# 645 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 649 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 651 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex1D(texture< ushort4, 1, cudaReadModeElementType> t, float x)
# 652 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 656 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 664 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int tex1D(texture< int, 1, cudaReadModeElementType> t, float x)
# 665 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 669 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 671 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex1D(texture< unsigned, 1, cudaReadModeElementType> t, float x)
# 672 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 676 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 678 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex1D(texture< int1, 1, cudaReadModeElementType> t, float x)
# 679 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 683 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 685 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex1D(texture< uint1, 1, cudaReadModeElementType> t, float x)
# 686 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 690 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 692 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex1D(texture< int2, 1, cudaReadModeElementType> t, float x)
# 693 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 697 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 699 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex1D(texture< uint2, 1, cudaReadModeElementType> t, float x)
# 700 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 704 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 706 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex1D(texture< int4, 1, cudaReadModeElementType> t, float x)
# 707 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 711 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 713 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex1D(texture< uint4, 1, cudaReadModeElementType> t, float x)
# 714 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 718 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 798 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1D(texture< float, 1, cudaReadModeElementType> t, float x)
# 799 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 803 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 805 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1D(texture< float1, 1, cudaReadModeElementType> t, float x)
# 806 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 810 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 812 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1D(texture< float2, 1, cudaReadModeElementType> t, float x)
# 813 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 817 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 819 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1D(texture< float4, 1, cudaReadModeElementType> t, float x)
# 820 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 824 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 832 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1D(texture< char, 1, cudaReadModeNormalizedFloat> t, float x)
# 833 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 842 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 844 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1D(texture< signed char, 1, cudaReadModeNormalizedFloat> t, float x)
# 845 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 850 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 852 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1D(texture< unsigned char, 1, cudaReadModeNormalizedFloat> t, float x)
# 853 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 858 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 860 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1D(texture< char1, 1, cudaReadModeNormalizedFloat> t, float x)
# 861 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 866 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 868 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1D(texture< uchar1, 1, cudaReadModeNormalizedFloat> t, float x)
# 869 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 874 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 876 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1D(texture< char2, 1, cudaReadModeNormalizedFloat> t, float x)
# 877 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 882 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 884 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1D(texture< uchar2, 1, cudaReadModeNormalizedFloat> t, float x)
# 885 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 890 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 892 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1D(texture< char4, 1, cudaReadModeNormalizedFloat> t, float x)
# 893 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 898 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 900 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1D(texture< uchar4, 1, cudaReadModeNormalizedFloat> t, float x)
# 901 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 906 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 914 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1D(texture< short, 1, cudaReadModeNormalizedFloat> t, float x)
# 915 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 920 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 922 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1D(texture< unsigned short, 1, cudaReadModeNormalizedFloat> t, float x)
# 923 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 928 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 930 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1D(texture< short1, 1, cudaReadModeNormalizedFloat> t, float x)
# 931 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 936 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 938 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1D(texture< ushort1, 1, cudaReadModeNormalizedFloat> t, float x)
# 939 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 944 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 946 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1D(texture< short2, 1, cudaReadModeNormalizedFloat> t, float x)
# 947 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 952 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 954 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1D(texture< ushort2, 1, cudaReadModeNormalizedFloat> t, float x)
# 955 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 960 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 962 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1D(texture< short4, 1, cudaReadModeNormalizedFloat> t, float x)
# 963 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 968 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 970 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1D(texture< ushort4, 1, cudaReadModeNormalizedFloat> t, float x)
# 971 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;
# 976 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 984 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char tex2D(texture< char, 2, cudaReadModeElementType> t, float x, float y)
# 985 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 993 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 995 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex2D(texture< signed char, 2, cudaReadModeElementType> t, float x, float y)
# 996 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1000 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1002 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex2D(texture< unsigned char, 2, cudaReadModeElementType> t, float x, float y)
# 1003 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1007 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1009 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex2D(texture< char1, 2, cudaReadModeElementType> t, float x, float y)
# 1010 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1014 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1016 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex2D(texture< uchar1, 2, cudaReadModeElementType> t, float x, float y)
# 1017 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1021 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1023 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex2D(texture< char2, 2, cudaReadModeElementType> t, float x, float y)
# 1024 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1028 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1030 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex2D(texture< uchar2, 2, cudaReadModeElementType> t, float x, float y)
# 1031 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1035 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1037 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex2D(texture< char4, 2, cudaReadModeElementType> t, float x, float y)
# 1038 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1042 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1044 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex2D(texture< uchar4, 2, cudaReadModeElementType> t, float x, float y)
# 1045 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1049 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1057 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short tex2D(texture< short, 2, cudaReadModeElementType> t, float x, float y)
# 1058 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1062 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1064 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex2D(texture< unsigned short, 2, cudaReadModeElementType> t, float x, float y)
# 1065 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1069 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1071 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex2D(texture< short1, 2, cudaReadModeElementType> t, float x, float y)
# 1072 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1076 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1078 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex2D(texture< ushort1, 2, cudaReadModeElementType> t, float x, float y)
# 1079 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1083 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1085 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex2D(texture< short2, 2, cudaReadModeElementType> t, float x, float y)
# 1086 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1090 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1092 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex2D(texture< ushort2, 2, cudaReadModeElementType> t, float x, float y)
# 1093 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1097 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1099 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex2D(texture< short4, 2, cudaReadModeElementType> t, float x, float y)
# 1100 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1104 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1106 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex2D(texture< ushort4, 2, cudaReadModeElementType> t, float x, float y)
# 1107 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1111 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1119 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int tex2D(texture< int, 2, cudaReadModeElementType> t, float x, float y)
# 1120 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1124 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1126 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex2D(texture< unsigned, 2, cudaReadModeElementType> t, float x, float y)
# 1127 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1131 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1133 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex2D(texture< int1, 2, cudaReadModeElementType> t, float x, float y)
# 1134 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1138 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1140 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex2D(texture< uint1, 2, cudaReadModeElementType> t, float x, float y)
# 1141 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1145 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1147 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex2D(texture< int2, 2, cudaReadModeElementType> t, float x, float y)
# 1148 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1152 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1154 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex2D(texture< uint2, 2, cudaReadModeElementType> t, float x, float y)
# 1155 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1159 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1161 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex2D(texture< int4, 2, cudaReadModeElementType> t, float x, float y)
# 1162 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1166 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1168 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex2D(texture< uint4, 2, cudaReadModeElementType> t, float x, float y)
# 1169 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1173 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1247 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2D(texture< float, 2, cudaReadModeElementType> t, float x, float y)
# 1248 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1252 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1254 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2D(texture< float1, 2, cudaReadModeElementType> t, float x, float y)
# 1255 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1259 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1261 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2D(texture< float2, 2, cudaReadModeElementType> t, float x, float y)
# 1262 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1266 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1268 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2D(texture< float4, 2, cudaReadModeElementType> t, float x, float y)
# 1269 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1273 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1281 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2D(texture< char, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1282 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1291 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1293 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2D(texture< signed char, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1294 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1299 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1301 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2D(texture< unsigned char, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1302 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1307 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1309 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2D(texture< char1, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1310 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1315 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1317 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2D(texture< uchar1, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1318 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1323 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1325 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2D(texture< char2, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1326 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1331 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1333 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2D(texture< uchar2, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1334 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1339 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1341 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2D(texture< char4, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1342 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1347 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1349 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2D(texture< uchar4, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1350 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1355 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1363 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2D(texture< short, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1364 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1369 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1371 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2D(texture< unsigned short, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1372 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1377 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1379 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2D(texture< short1, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1380 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1385 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1387 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2D(texture< ushort1, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1388 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1393 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1395 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2D(texture< short2, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1396 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1401 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1403 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2D(texture< ushort2, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1404 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1409 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1411 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2D(texture< short4, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1412 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1417 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1419 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2D(texture< ushort4, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1420 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1425 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1433 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char tex1DLayered(texture< char, 241, cudaReadModeElementType> t, float x, int layer)
# 1434 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1442 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1444 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex1DLayered(texture< signed char, 241, cudaReadModeElementType> t, float x, int layer)
# 1445 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1449 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1451 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex1DLayered(texture< unsigned char, 241, cudaReadModeElementType> t, float x, int layer)
# 1452 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1456 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1458 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex1DLayered(texture< char1, 241, cudaReadModeElementType> t, float x, int layer)
# 1459 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1463 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1465 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex1DLayered(texture< uchar1, 241, cudaReadModeElementType> t, float x, int layer)
# 1466 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1470 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1472 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex1DLayered(texture< char2, 241, cudaReadModeElementType> t, float x, int layer)
# 1473 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1477 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1479 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex1DLayered(texture< uchar2, 241, cudaReadModeElementType> t, float x, int layer)
# 1480 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1484 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1486 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex1DLayered(texture< char4, 241, cudaReadModeElementType> t, float x, int layer)
# 1487 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1491 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1493 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex1DLayered(texture< uchar4, 241, cudaReadModeElementType> t, float x, int layer)
# 1494 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1498 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1506 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short tex1DLayered(texture< short, 241, cudaReadModeElementType> t, float x, int layer)
# 1507 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1511 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1513 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex1DLayered(texture< unsigned short, 241, cudaReadModeElementType> t, float x, int layer)
# 1514 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1518 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1520 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex1DLayered(texture< short1, 241, cudaReadModeElementType> t, float x, int layer)
# 1521 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1525 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1527 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex1DLayered(texture< ushort1, 241, cudaReadModeElementType> t, float x, int layer)
# 1528 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1532 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1534 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex1DLayered(texture< short2, 241, cudaReadModeElementType> t, float x, int layer)
# 1535 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1539 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1541 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex1DLayered(texture< ushort2, 241, cudaReadModeElementType> t, float x, int layer)
# 1542 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1546 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1548 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex1DLayered(texture< short4, 241, cudaReadModeElementType> t, float x, int layer)
# 1549 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1553 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1555 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex1DLayered(texture< ushort4, 241, cudaReadModeElementType> t, float x, int layer)
# 1556 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1560 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1568 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int tex1DLayered(texture< int, 241, cudaReadModeElementType> t, float x, int layer)
# 1569 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1573 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1575 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex1DLayered(texture< unsigned, 241, cudaReadModeElementType> t, float x, int layer)
# 1576 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1580 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1582 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex1DLayered(texture< int1, 241, cudaReadModeElementType> t, float x, int layer)
# 1583 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1587 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1589 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex1DLayered(texture< uint1, 241, cudaReadModeElementType> t, float x, int layer)
# 1590 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1594 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1596 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex1DLayered(texture< int2, 241, cudaReadModeElementType> t, float x, int layer)
# 1597 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1601 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1603 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex1DLayered(texture< uint2, 241, cudaReadModeElementType> t, float x, int layer)
# 1604 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1608 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1610 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex1DLayered(texture< int4, 241, cudaReadModeElementType> t, float x, int layer)
# 1611 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1615 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1617 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex1DLayered(texture< uint4, 241, cudaReadModeElementType> t, float x, int layer)
# 1618 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1622 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1696 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayered(texture< float, 241, cudaReadModeElementType> t, float x, int layer)
# 1697 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1701 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1703 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLayered(texture< float1, 241, cudaReadModeElementType> t, float x, int layer)
# 1704 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1708 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1710 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLayered(texture< float2, 241, cudaReadModeElementType> t, float x, int layer)
# 1711 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1715 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1717 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLayered(texture< float4, 241, cudaReadModeElementType> t, float x, int layer)
# 1718 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1722 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1730 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayered(texture< char, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1731 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1740 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1742 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayered(texture< signed char, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1743 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1748 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1750 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayered(texture< unsigned char, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1751 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1756 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1758 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLayered(texture< char1, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1759 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1764 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1766 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLayered(texture< uchar1, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1767 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1772 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1774 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLayered(texture< char2, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1775 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1780 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1782 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLayered(texture< uchar2, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1783 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1788 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1790 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLayered(texture< char4, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1791 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1796 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1798 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLayered(texture< uchar4, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1799 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1804 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1812 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayered(texture< short, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1813 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1818 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1820 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayered(texture< unsigned short, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1821 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1826 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1828 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLayered(texture< short1, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1829 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1834 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1836 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLayered(texture< ushort1, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1837 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1842 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1844 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLayered(texture< short2, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1845 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1850 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1852 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLayered(texture< ushort2, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1853 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1858 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1860 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLayered(texture< short4, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1861 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1866 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1868 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLayered(texture< ushort4, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1869 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1874 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1882 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char tex2DLayered(texture< char, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1883 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1891 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1893 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex2DLayered(texture< signed char, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1894 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1898 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1900 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex2DLayered(texture< unsigned char, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1901 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1905 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1907 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex2DLayered(texture< char1, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1908 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1912 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1914 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex2DLayered(texture< uchar1, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1915 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1919 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1921 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex2DLayered(texture< char2, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1922 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1926 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1928 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex2DLayered(texture< uchar2, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1929 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1933 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1935 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex2DLayered(texture< char4, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1936 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1940 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1942 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex2DLayered(texture< uchar4, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1943 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1947 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1955 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short tex2DLayered(texture< short, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1956 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1960 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1962 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex2DLayered(texture< unsigned short, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1963 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1967 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1969 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex2DLayered(texture< short1, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1970 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1974 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1976 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex2DLayered(texture< ushort1, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1977 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1981 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1983 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex2DLayered(texture< short2, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1984 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1988 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1990 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex2DLayered(texture< ushort2, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1991 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1995 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 1997 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex2DLayered(texture< short4, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1998 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2002 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2004 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex2DLayered(texture< ushort4, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2005 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2009 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2017 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int tex2DLayered(texture< int, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2018 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2022 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2024 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex2DLayered(texture< unsigned, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2025 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2029 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2031 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex2DLayered(texture< int1, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2032 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2036 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2038 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex2DLayered(texture< uint1, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2039 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2043 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2045 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex2DLayered(texture< int2, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2046 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2050 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2052 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex2DLayered(texture< uint2, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2053 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2057 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2059 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex2DLayered(texture< int4, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2060 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2064 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2066 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex2DLayered(texture< uint4, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2067 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2071 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2145 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayered(texture< float, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2146 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2150 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2152 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLayered(texture< float1, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2153 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2157 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2159 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLayered(texture< float2, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2160 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2164 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2166 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLayered(texture< float4, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2167 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2171 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2179 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayered(texture< char, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2180 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2189 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2191 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayered(texture< signed char, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2192 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2197 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2199 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayered(texture< unsigned char, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2200 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2205 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2207 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLayered(texture< char1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2208 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2213 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2215 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLayered(texture< uchar1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2216 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2221 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2223 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLayered(texture< char2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2224 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2229 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2231 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLayered(texture< uchar2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2232 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2237 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2239 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLayered(texture< char4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2240 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2245 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2247 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLayered(texture< uchar4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2248 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2253 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2261 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayered(texture< short, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2262 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2267 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2269 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayered(texture< unsigned short, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2270 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2275 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2277 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLayered(texture< short1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2278 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2283 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2285 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLayered(texture< ushort1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2286 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2291 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2293 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLayered(texture< short2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2294 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2299 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2301 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLayered(texture< ushort2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2302 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2307 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2309 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLayered(texture< short4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2310 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2315 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2317 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLayered(texture< ushort4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2318 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2323 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2331 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char tex3D(texture< char, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2332 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2340 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2342 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex3D(texture< signed char, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2343 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2347 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2349 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex3D(texture< unsigned char, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2350 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2354 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2356 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex3D(texture< char1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2357 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2361 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2363 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex3D(texture< uchar1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2364 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2368 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2370 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex3D(texture< char2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2371 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2375 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2377 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex3D(texture< uchar2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2378 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2382 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2384 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex3D(texture< char4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2385 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2389 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2391 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex3D(texture< uchar4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2392 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2396 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2404 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short tex3D(texture< short, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2405 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2409 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2411 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex3D(texture< unsigned short, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2412 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2416 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2418 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex3D(texture< short1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2419 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2423 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2425 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex3D(texture< ushort1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2426 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2430 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2432 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex3D(texture< short2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2433 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2437 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2439 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex3D(texture< ushort2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2440 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2444 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2446 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex3D(texture< short4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2447 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2451 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2453 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex3D(texture< ushort4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2454 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2458 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2466 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int tex3D(texture< int, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2467 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2471 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2473 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex3D(texture< unsigned, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2474 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2478 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2480 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex3D(texture< int1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2481 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2485 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2487 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex3D(texture< uint1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2488 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2492 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2494 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex3D(texture< int2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2495 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2499 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2501 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex3D(texture< uint2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2502 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2506 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2508 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex3D(texture< int4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2509 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2513 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2515 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex3D(texture< uint4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2516 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2520 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2594 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex3D(texture< float, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2595 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2599 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2601 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex3D(texture< float1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2602 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2606 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2608 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex3D(texture< float2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2609 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2613 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2615 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex3D(texture< float4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2616 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2620 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2628 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex3D(texture< char, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2629 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2638 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2640 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex3D(texture< signed char, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2641 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2646 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2648 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex3D(texture< unsigned char, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2649 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2654 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2656 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex3D(texture< char1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2657 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2662 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2664 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex3D(texture< uchar1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2665 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2670 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2672 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex3D(texture< char2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2673 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2678 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2680 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex3D(texture< uchar2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2681 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2686 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2688 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex3D(texture< char4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2689 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2694 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2696 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex3D(texture< uchar4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2697 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2702 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2710 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex3D(texture< short, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2711 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2716 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2718 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex3D(texture< unsigned short, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2719 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2724 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2726 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex3D(texture< short1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2727 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2732 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2734 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex3D(texture< ushort1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2735 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2740 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2742 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex3D(texture< short2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2743 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2748 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2750 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex3D(texture< ushort2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2751 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2756 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2758 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex3D(texture< short4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2759 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2764 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2766 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex3D(texture< ushort4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2767 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2772 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2780 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char texCubemap(texture< char, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2781 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2789 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2791 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline signed char texCubemap(texture< signed char, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2792 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2796 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2798 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char texCubemap(texture< unsigned char, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2799 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2803 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2805 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char1 texCubemap(texture< char1, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2806 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2810 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2812 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 texCubemap(texture< uchar1, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2813 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2817 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2819 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char2 texCubemap(texture< char2, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2820 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2824 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2826 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 texCubemap(texture< uchar2, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2827 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2831 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2833 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char4 texCubemap(texture< char4, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2834 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2838 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2840 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 texCubemap(texture< uchar4, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2841 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2845 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2853 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short texCubemap(texture< short, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2854 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2858 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2860 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short texCubemap(texture< unsigned short, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2861 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2865 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2867 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short1 texCubemap(texture< short1, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2868 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2872 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2874 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 texCubemap(texture< ushort1, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2875 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2879 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2881 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short2 texCubemap(texture< short2, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2882 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2886 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2888 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 texCubemap(texture< ushort2, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2889 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2893 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2895 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short4 texCubemap(texture< short4, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2896 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2900 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2902 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 texCubemap(texture< ushort4, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2903 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2907 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2915 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int texCubemap(texture< int, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2916 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2920 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2922 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned texCubemap(texture< unsigned, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2923 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2927 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2929 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int1 texCubemap(texture< int1, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2930 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2934 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2936 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint1 texCubemap(texture< uint1, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2937 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2941 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2943 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int2 texCubemap(texture< int2, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2944 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2948 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2950 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint2 texCubemap(texture< uint2, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2951 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2955 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2957 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4 texCubemap(texture< int4, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2958 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2962 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 2964 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4 texCubemap(texture< uint4, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2965 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2969 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3043 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemap(texture< float, 12, cudaReadModeElementType> t, float x, float y, float z)
# 3044 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3048 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3050 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemap(texture< float1, 12, cudaReadModeElementType> t, float x, float y, float z)
# 3051 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3055 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3057 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemap(texture< float2, 12, cudaReadModeElementType> t, float x, float y, float z)
# 3058 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3062 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3064 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemap(texture< float4, 12, cudaReadModeElementType> t, float x, float y, float z)
# 3065 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3069 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3077 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemap(texture< char, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3078 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3087 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3089 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemap(texture< signed char, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3090 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3095 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3097 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemap(texture< unsigned char, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3098 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3103 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3105 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemap(texture< char1, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3106 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3111 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3113 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemap(texture< uchar1, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3114 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3119 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3121 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemap(texture< char2, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3122 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3127 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3129 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemap(texture< uchar2, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3130 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3135 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3137 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemap(texture< char4, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3138 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3143 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3145 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemap(texture< uchar4, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3146 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3151 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3159 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemap(texture< short, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3160 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3165 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3167 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemap(texture< unsigned short, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3168 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3173 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3175 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemap(texture< short1, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3176 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3181 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3183 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemap(texture< ushort1, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3184 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3189 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3191 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemap(texture< short2, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3192 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3197 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3199 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemap(texture< ushort2, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3200 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3205 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3207 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemap(texture< short4, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3208 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3213 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3215 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemap(texture< ushort4, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3216 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3221 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3229 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char texCubemapLayered(texture< char, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3230 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3238 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3240 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline signed char texCubemapLayered(texture< signed char, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3241 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3245 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3247 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char texCubemapLayered(texture< unsigned char, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3248 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3252 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3254 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char1 texCubemapLayered(texture< char1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3255 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3259 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3261 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 texCubemapLayered(texture< uchar1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3262 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3266 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3268 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char2 texCubemapLayered(texture< char2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3269 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3273 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3275 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 texCubemapLayered(texture< uchar2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3276 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3280 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3282 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char4 texCubemapLayered(texture< char4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3283 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3287 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3289 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 texCubemapLayered(texture< uchar4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3290 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3294 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3302 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short texCubemapLayered(texture< short, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3303 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3307 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3309 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short texCubemapLayered(texture< unsigned short, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3310 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3314 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3316 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short1 texCubemapLayered(texture< short1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3317 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3321 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3323 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 texCubemapLayered(texture< ushort1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3324 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3328 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3330 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short2 texCubemapLayered(texture< short2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3331 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3335 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3337 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 texCubemapLayered(texture< ushort2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3338 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3342 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3344 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short4 texCubemapLayered(texture< short4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3345 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3349 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3351 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 texCubemapLayered(texture< ushort4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3352 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3356 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3364 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int texCubemapLayered(texture< int, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3365 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3369 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3371 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned texCubemapLayered(texture< unsigned, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3372 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3376 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3378 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int1 texCubemapLayered(texture< int1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3379 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3383 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3385 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint1 texCubemapLayered(texture< uint1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3386 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3390 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3392 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int2 texCubemapLayered(texture< int2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3393 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3397 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3399 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint2 texCubemapLayered(texture< uint2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3400 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3404 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3406 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4 texCubemapLayered(texture< int4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3407 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3411 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3413 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4 texCubemapLayered(texture< uint4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3414 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3418 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3492 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLayered(texture< float, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3493 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3497 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3499 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemapLayered(texture< float1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3500 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3504 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3506 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemapLayered(texture< float2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3507 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3511 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3513 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemapLayered(texture< float4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3514 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3518 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3526 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLayered(texture< char, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3527 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3536 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3538 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLayered(texture< signed char, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3539 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3544 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3546 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLayered(texture< unsigned char, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3547 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3552 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3554 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemapLayered(texture< char1, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3555 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3560 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3562 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemapLayered(texture< uchar1, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3563 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3568 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3570 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemapLayered(texture< char2, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3571 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3576 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3578 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemapLayered(texture< uchar2, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3579 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3584 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3586 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemapLayered(texture< char4, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3587 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3592 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3594 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemapLayered(texture< uchar4, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3595 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3600 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3608 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLayered(texture< short, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3609 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3614 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3616 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLayered(texture< unsigned short, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3617 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3622 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3624 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemapLayered(texture< short1, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3625 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3630 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3632 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemapLayered(texture< ushort1, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3633 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3638 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3640 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemapLayered(texture< short2, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3641 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3646 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3648 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemapLayered(texture< ushort2, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3649 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3654 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3656 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemapLayered(texture< short4, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3657 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3662 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3664 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemapLayered(texture< ushort4, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3665 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3670 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3703 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex2Dgather(texture< char, 2, cudaReadModeElementType> t, float x, float y, int comp)
# 3704 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3706 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3708 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex2Dgather(texture< signed char, 2, cudaReadModeElementType> t, float x, float y, int comp)
# 3709 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3711 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3713 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex2Dgather(texture< unsigned char, 2, cudaReadModeElementType> t, float x, float y, int comp)
# 3714 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3716 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3718 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex2Dgather(texture< char1, 2, cudaReadModeElementType> t, float x, float y, int comp)
# 3719 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3721 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3723 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex2Dgather(texture< uchar1, 2, cudaReadModeElementType> t, float x, float y, int comp)
# 3724 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3726 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3728 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex2Dgather(texture< char2, 2, cudaReadModeElementType> t, float x, float y, int comp)
# 3729 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3731 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3733 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex2Dgather(texture< uchar2, 2, cudaReadModeElementType> t, float x, float y, int comp)
# 3734 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3736 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3738 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex2Dgather(texture< char3, 2, cudaReadModeElementType> t, float x, float y, int comp)
# 3739 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3741 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3743 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex2Dgather(texture< uchar3, 2, cudaReadModeElementType> t, float x, float y, int comp)
# 3744 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3746 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3748 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex2Dgather(texture< char4, 2, cudaReadModeElementType> t, float x, float y, int comp)
# 3749 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3751 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3753 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex2Dgather(texture< uchar4, 2, cudaReadModeElementType> t, float x, float y, int comp)
# 3754 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3756 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3758 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex2Dgather(texture< short, 2, cudaReadModeElementType> t, float x, float y, int comp)
# 3759 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3761 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3763 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex2Dgather(texture< unsigned short, 2, cudaReadModeElementType> t, float x, float y, int comp)
# 3764 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3766 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3768 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex2Dgather(texture< short1, 2, cudaReadModeElementType> t, float x, float y, int comp)
# 3769 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3771 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3773 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex2Dgather(texture< ushort1, 2, cudaReadModeElementType> t, float x, float y, int comp)
# 3774 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3776 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3778 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex2Dgather(texture< short2, 2, cudaReadModeElementType> t, float x, float y, int comp)
# 3779 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3781 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3783 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex2Dgather(texture< ushort2, 2, cudaReadModeElementType> t, float x, float y, int comp)
# 3784 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3786 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3788 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex2Dgather(texture< short3, 2, cudaReadModeElementType> t, float x, float y, int comp)
# 3789 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3791 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3793 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex2Dgather(texture< ushort3, 2, cudaReadModeElementType> t, float x, float y, int comp)
# 3794 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3796 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3798 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex2Dgather(texture< short4, 2, cudaReadModeElementType> t, float x, float y, int comp)
# 3799 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3801 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3803 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex2Dgather(texture< ushort4, 2, cudaReadModeElementType> t, float x, float y, int comp)
# 3804 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3806 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3808 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex2Dgather(texture< int, 2, cudaReadModeElementType> t, float x, float y, int comp)
# 3809 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3811 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3813 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex2Dgather(texture< unsigned, 2, cudaReadModeElementType> t, float x, float y, int comp)
# 3814 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3816 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3818 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex2Dgather(texture< int1, 2, cudaReadModeElementType> t, float x, float y, int comp)
# 3819 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3821 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3823 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex2Dgather(texture< uint1, 2, cudaReadModeElementType> t, float x, float y, int comp)
# 3824 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3826 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3828 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex2Dgather(texture< int2, 2, cudaReadModeElementType> t, float x, float y, int comp)
# 3829 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3831 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3833 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex2Dgather(texture< uint2, 2, cudaReadModeElementType> t, float x, float y, int comp)
# 3834 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3836 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3838 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex2Dgather(texture< int3, 2, cudaReadModeElementType> t, float x, float y, int comp)
# 3839 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3841 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3843 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex2Dgather(texture< uint3, 2, cudaReadModeElementType> t, float x, float y, int comp)
# 3844 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3846 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3848 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex2Dgather(texture< int4, 2, cudaReadModeElementType> t, float x, float y, int comp)
# 3849 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3851 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3853 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex2Dgather(texture< uint4, 2, cudaReadModeElementType> t, float x, float y, int comp)
# 3854 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3856 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3858 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< float, 2, cudaReadModeElementType> t, float x, float y, int comp)
# 3859 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3861 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3863 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< float1, 2, cudaReadModeElementType> t, float x, float y, int comp)
# 3864 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3866 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3868 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< float2, 2, cudaReadModeElementType> t, float x, float y, int comp)
# 3869 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3871 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3873 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< float3, 2, cudaReadModeElementType> t, float x, float y, int comp)
# 3874 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3876 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3878 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< float4, 2, cudaReadModeElementType> t, float x, float y, int comp)
# 3879 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3881 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3890 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< char, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp)
# 3891 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3893 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3895 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< signed char, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp)
# 3896 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3898 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3900 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< unsigned char, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp)
# 3901 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3903 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3905 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< char1, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp)
# 3906 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3908 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3910 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< uchar1, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp)
# 3911 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3913 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3915 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< char2, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp)
# 3916 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3918 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3920 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< uchar2, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp)
# 3921 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3923 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3925 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< char3, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp)
# 3926 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3928 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3930 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< uchar3, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp)
# 3931 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3933 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3935 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< char4, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp)
# 3936 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3938 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3940 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< uchar4, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp)
# 3941 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3943 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3945 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< short, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp)
# 3946 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3948 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3950 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< unsigned short, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp)
# 3951 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3953 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3955 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< short1, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp)
# 3956 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3958 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3960 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< ushort1, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp)
# 3961 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3963 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3965 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< short2, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp)
# 3966 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3968 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3970 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< ushort2, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp)
# 3971 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3973 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3975 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< short3, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp)
# 3976 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3978 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3980 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< ushort3, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp)
# 3981 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3983 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3985 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< short4, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp)
# 3986 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3988 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 3990 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< ushort4, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp)
# 3991 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3993 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4007 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char tex1DLod(texture< char, 1, cudaReadModeElementType> t, float x, float level)
# 4008 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4016 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4018 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex1DLod(texture< signed char, 1, cudaReadModeElementType> t, float x, float level)
# 4019 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4023 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4025 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex1DLod(texture< unsigned char, 1, cudaReadModeElementType> t, float x, float level)
# 4026 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4030 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4032 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex1DLod(texture< char1, 1, cudaReadModeElementType> t, float x, float level)
# 4033 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4037 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4039 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex1DLod(texture< uchar1, 1, cudaReadModeElementType> t, float x, float level)
# 4040 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4044 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4046 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex1DLod(texture< char2, 1, cudaReadModeElementType> t, float x, float level)
# 4047 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4051 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4053 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex1DLod(texture< uchar2, 1, cudaReadModeElementType> t, float x, float level)
# 4054 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4058 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4060 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex1DLod(texture< char4, 1, cudaReadModeElementType> t, float x, float level)
# 4061 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4065 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4067 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex1DLod(texture< uchar4, 1, cudaReadModeElementType> t, float x, float level)
# 4068 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4072 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4080 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short tex1DLod(texture< short, 1, cudaReadModeElementType> t, float x, float level)
# 4081 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4085 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4087 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex1DLod(texture< unsigned short, 1, cudaReadModeElementType> t, float x, float level)
# 4088 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4092 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4094 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex1DLod(texture< short1, 1, cudaReadModeElementType> t, float x, float level)
# 4095 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4099 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4101 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex1DLod(texture< ushort1, 1, cudaReadModeElementType> t, float x, float level)
# 4102 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4106 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4108 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex1DLod(texture< short2, 1, cudaReadModeElementType> t, float x, float level)
# 4109 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4113 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4115 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex1DLod(texture< ushort2, 1, cudaReadModeElementType> t, float x, float level)
# 4116 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4120 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4122 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex1DLod(texture< short4, 1, cudaReadModeElementType> t, float x, float level)
# 4123 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4127 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4129 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex1DLod(texture< ushort4, 1, cudaReadModeElementType> t, float x, float level)
# 4130 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4134 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4142 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int tex1DLod(texture< int, 1, cudaReadModeElementType> t, float x, float level)
# 4143 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4147 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4149 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex1DLod(texture< unsigned, 1, cudaReadModeElementType> t, float x, float level)
# 4150 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4154 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4156 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex1DLod(texture< int1, 1, cudaReadModeElementType> t, float x, float level)
# 4157 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4161 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4163 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex1DLod(texture< uint1, 1, cudaReadModeElementType> t, float x, float level)
# 4164 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4168 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4170 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex1DLod(texture< int2, 1, cudaReadModeElementType> t, float x, float level)
# 4171 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4175 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4177 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex1DLod(texture< uint2, 1, cudaReadModeElementType> t, float x, float level)
# 4178 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4182 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4184 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex1DLod(texture< int4, 1, cudaReadModeElementType> t, float x, float level)
# 4185 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4189 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4191 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex1DLod(texture< uint4, 1, cudaReadModeElementType> t, float x, float level)
# 4192 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4196 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4276 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLod(texture< float, 1, cudaReadModeElementType> t, float x, float level)
# 4277 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4281 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4283 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLod(texture< float1, 1, cudaReadModeElementType> t, float x, float level)
# 4284 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4288 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4290 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLod(texture< float2, 1, cudaReadModeElementType> t, float x, float level)
# 4291 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4295 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4297 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLod(texture< float4, 1, cudaReadModeElementType> t, float x, float level)
# 4298 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4302 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4310 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLod(texture< char, 1, cudaReadModeNormalizedFloat> t, float x, float level)
# 4311 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4320 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4322 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLod(texture< signed char, 1, cudaReadModeNormalizedFloat> t, float x, float level)
# 4323 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4328 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4330 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLod(texture< unsigned char, 1, cudaReadModeNormalizedFloat> t, float x, float level)
# 4331 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4336 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4338 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLod(texture< char1, 1, cudaReadModeNormalizedFloat> t, float x, float level)
# 4339 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4344 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4346 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLod(texture< uchar1, 1, cudaReadModeNormalizedFloat> t, float x, float level)
# 4347 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4352 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4354 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLod(texture< char2, 1, cudaReadModeNormalizedFloat> t, float x, float level)
# 4355 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4360 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4362 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLod(texture< uchar2, 1, cudaReadModeNormalizedFloat> t, float x, float level)
# 4363 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4368 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4370 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLod(texture< char4, 1, cudaReadModeNormalizedFloat> t, float x, float level)
# 4371 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4376 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4378 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLod(texture< uchar4, 1, cudaReadModeNormalizedFloat> t, float x, float level)
# 4379 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4384 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4392 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLod(texture< short, 1, cudaReadModeNormalizedFloat> t, float x, float level)
# 4393 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4398 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4400 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLod(texture< unsigned short, 1, cudaReadModeNormalizedFloat> t, float x, float level)
# 4401 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4406 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4408 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLod(texture< short1, 1, cudaReadModeNormalizedFloat> t, float x, float level)
# 4409 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4414 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4416 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLod(texture< ushort1, 1, cudaReadModeNormalizedFloat> t, float x, float level)
# 4417 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4422 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4424 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLod(texture< short2, 1, cudaReadModeNormalizedFloat> t, float x, float level)
# 4425 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4430 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4432 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLod(texture< ushort2, 1, cudaReadModeNormalizedFloat> t, float x, float level)
# 4433 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4438 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4440 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLod(texture< short4, 1, cudaReadModeNormalizedFloat> t, float x, float level)
# 4441 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4446 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4448 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLod(texture< ushort4, 1, cudaReadModeNormalizedFloat> t, float x, float level)
# 4449 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4454 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4462 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char tex2DLod(texture< char, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4463 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4471 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4473 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex2DLod(texture< signed char, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4474 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4478 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4480 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex2DLod(texture< unsigned char, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4481 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4485 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4487 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex2DLod(texture< char1, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4488 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4492 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4494 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex2DLod(texture< uchar1, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4495 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4499 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4501 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex2DLod(texture< char2, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4502 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4506 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4508 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex2DLod(texture< uchar2, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4509 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4513 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4515 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex2DLod(texture< char4, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4516 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4520 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4522 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex2DLod(texture< uchar4, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4523 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4527 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4535 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short tex2DLod(texture< short, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4536 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4540 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4542 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex2DLod(texture< unsigned short, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4543 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4547 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4549 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex2DLod(texture< short1, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4550 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4554 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4556 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex2DLod(texture< ushort1, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4557 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4561 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4563 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex2DLod(texture< short2, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4564 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4568 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4570 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex2DLod(texture< ushort2, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4571 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4575 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4577 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex2DLod(texture< short4, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4578 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4582 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4584 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex2DLod(texture< ushort4, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4585 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4589 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4597 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int tex2DLod(texture< int, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4598 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4602 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4604 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex2DLod(texture< unsigned, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4605 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4609 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4611 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex2DLod(texture< int1, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4612 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4616 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4618 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex2DLod(texture< uint1, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4619 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4623 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4625 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex2DLod(texture< int2, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4626 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4630 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4632 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex2DLod(texture< uint2, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4633 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4637 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4639 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex2DLod(texture< int4, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4640 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4644 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4646 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex2DLod(texture< uint4, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4647 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4651 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4725 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLod(texture< float, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4726 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4730 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4732 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLod(texture< float1, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4733 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4737 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4739 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLod(texture< float2, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4740 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4744 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4746 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLod(texture< float4, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4747 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4751 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4759 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLod(texture< char, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level)
# 4760 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4769 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4771 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLod(texture< signed char, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level)
# 4772 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4777 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4779 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLod(texture< unsigned char, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level)
# 4780 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4785 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4787 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLod(texture< char1, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level)
# 4788 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4793 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4795 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLod(texture< uchar1, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level)
# 4796 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4801 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4803 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLod(texture< char2, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level)
# 4804 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4809 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4811 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLod(texture< uchar2, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level)
# 4812 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4817 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4819 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLod(texture< char4, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level)
# 4820 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4825 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4827 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLod(texture< uchar4, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level)
# 4828 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4833 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4841 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLod(texture< short, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level)
# 4842 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4847 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4849 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLod(texture< unsigned short, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level)
# 4850 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4855 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4857 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLod(texture< short1, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level)
# 4858 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4863 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4865 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLod(texture< ushort1, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level)
# 4866 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4871 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4873 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLod(texture< short2, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level)
# 4874 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4879 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4881 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLod(texture< ushort2, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level)
# 4882 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4887 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4889 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLod(texture< short4, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level)
# 4890 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4895 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4897 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLod(texture< ushort4, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level)
# 4898 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4903 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4911 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char tex1DLayeredLod(texture< char, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 4912 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 4920 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4922 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex1DLayeredLod(texture< signed char, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 4923 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 4927 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4929 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex1DLayeredLod(texture< unsigned char, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 4930 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 4934 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4936 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex1DLayeredLod(texture< char1, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 4937 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 4941 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4943 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex1DLayeredLod(texture< uchar1, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 4944 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 4948 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4950 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex1DLayeredLod(texture< char2, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 4951 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 4955 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4957 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex1DLayeredLod(texture< uchar2, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 4958 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 4962 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4964 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex1DLayeredLod(texture< char4, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 4965 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 4969 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4971 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex1DLayeredLod(texture< uchar4, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 4972 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 4976 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4984 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short tex1DLayeredLod(texture< short, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 4985 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 4989 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4991 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex1DLayeredLod(texture< unsigned short, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 4992 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 4996 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 4998 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex1DLayeredLod(texture< short1, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 4999 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5003 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5005 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex1DLayeredLod(texture< ushort1, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5006 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5010 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5012 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex1DLayeredLod(texture< short2, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5013 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5017 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5019 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex1DLayeredLod(texture< ushort2, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5020 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5024 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5026 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex1DLayeredLod(texture< short4, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5027 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5031 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5033 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex1DLayeredLod(texture< ushort4, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5034 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5038 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5046 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int tex1DLayeredLod(texture< int, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5047 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5051 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5053 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex1DLayeredLod(texture< unsigned, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5054 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5058 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5060 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex1DLayeredLod(texture< int1, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5061 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5065 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5067 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex1DLayeredLod(texture< uint1, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5068 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5072 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5074 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex1DLayeredLod(texture< int2, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5075 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5079 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5081 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex1DLayeredLod(texture< uint2, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5082 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5086 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5088 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex1DLayeredLod(texture< int4, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5089 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5093 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5095 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex1DLayeredLod(texture< uint4, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5096 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5100 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5174 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayeredLod(texture< float, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5175 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5179 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5181 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLayeredLod(texture< float1, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5182 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5186 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5188 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLayeredLod(texture< float2, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5189 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5193 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5195 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLayeredLod(texture< float4, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5196 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5200 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5208 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayeredLod(texture< char, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level)
# 5209 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5218 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5220 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayeredLod(texture< signed char, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level)
# 5221 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5226 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5228 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayeredLod(texture< unsigned char, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level)
# 5229 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5234 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5236 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLayeredLod(texture< char1, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level)
# 5237 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5242 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5244 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLayeredLod(texture< uchar1, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level)
# 5245 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5250 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5252 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLayeredLod(texture< char2, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level)
# 5253 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5258 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5260 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLayeredLod(texture< uchar2, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level)
# 5261 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5266 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5268 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLayeredLod(texture< char4, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level)
# 5269 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5274 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5276 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLayeredLod(texture< uchar4, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level)
# 5277 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5282 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5290 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayeredLod(texture< short, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level)
# 5291 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5296 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5298 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayeredLod(texture< unsigned short, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level)
# 5299 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5304 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5306 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLayeredLod(texture< short1, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level)
# 5307 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5312 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5314 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLayeredLod(texture< ushort1, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level)
# 5315 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5320 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5322 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLayeredLod(texture< short2, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level)
# 5323 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5328 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5330 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLayeredLod(texture< ushort2, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level)
# 5331 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5336 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5338 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLayeredLod(texture< short4, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level)
# 5339 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5344 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5346 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLayeredLod(texture< ushort4, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level)
# 5347 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5352 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5360 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char tex2DLayeredLod(texture< char, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5361 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5369 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5371 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex2DLayeredLod(texture< signed char, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5372 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5376 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5378 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex2DLayeredLod(texture< unsigned char, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5379 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5383 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5385 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex2DLayeredLod(texture< char1, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5386 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5390 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5392 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex2DLayeredLod(texture< uchar1, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5393 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5397 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5399 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex2DLayeredLod(texture< char2, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5400 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5404 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5406 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex2DLayeredLod(texture< uchar2, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5407 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5411 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5413 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex2DLayeredLod(texture< char4, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5414 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5418 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5420 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex2DLayeredLod(texture< uchar4, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5421 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5425 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5433 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short tex2DLayeredLod(texture< short, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5434 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5438 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5440 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex2DLayeredLod(texture< unsigned short, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5441 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5445 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5447 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex2DLayeredLod(texture< short1, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5448 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5452 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5454 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex2DLayeredLod(texture< ushort1, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5455 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5459 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5461 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex2DLayeredLod(texture< short2, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5462 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5466 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5468 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex2DLayeredLod(texture< ushort2, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5469 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5473 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5475 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex2DLayeredLod(texture< short4, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5476 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5480 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5482 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex2DLayeredLod(texture< ushort4, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5483 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5487 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5495 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int tex2DLayeredLod(texture< int, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5496 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5500 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5502 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex2DLayeredLod(texture< unsigned, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5503 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5507 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5509 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex2DLayeredLod(texture< int1, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5510 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5514 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5516 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex2DLayeredLod(texture< uint1, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5517 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5521 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5523 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex2DLayeredLod(texture< int2, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5524 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5528 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5530 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex2DLayeredLod(texture< uint2, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5531 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5535 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5537 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex2DLayeredLod(texture< int4, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5538 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5542 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5544 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex2DLayeredLod(texture< uint4, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5545 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5549 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5623 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayeredLod(texture< float, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5624 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5628 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5630 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLayeredLod(texture< float1, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5631 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5635 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5637 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLayeredLod(texture< float2, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5638 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5642 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5644 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLayeredLod(texture< float4, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5645 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5649 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5657 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayeredLod(texture< char, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level)
# 5658 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5667 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5669 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayeredLod(texture< signed char, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level)
# 5670 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5675 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5677 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayeredLod(texture< unsigned char, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level)
# 5678 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5683 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5685 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLayeredLod(texture< char1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level)
# 5686 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5691 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5693 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLayeredLod(texture< uchar1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level)
# 5694 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5699 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5701 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLayeredLod(texture< char2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level)
# 5702 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5707 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5709 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLayeredLod(texture< uchar2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level)
# 5710 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5715 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5717 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLayeredLod(texture< char4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level)
# 5718 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5723 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5725 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLayeredLod(texture< uchar4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level)
# 5726 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5731 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5739 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayeredLod(texture< short, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level)
# 5740 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5745 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5747 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayeredLod(texture< unsigned short, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level)
# 5748 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5753 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5755 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLayeredLod(texture< short1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level)
# 5756 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5761 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5763 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLayeredLod(texture< ushort1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level)
# 5764 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5769 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5771 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLayeredLod(texture< short2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level)
# 5772 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5777 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5779 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLayeredLod(texture< ushort2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level)
# 5780 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5785 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5787 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLayeredLod(texture< short4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level)
# 5788 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5793 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5795 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLayeredLod(texture< ushort4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level)
# 5796 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5801 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5809 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char tex3DLod(texture< char, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 5810 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 5818 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5820 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex3DLod(texture< signed char, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 5821 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 5825 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5827 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex3DLod(texture< unsigned char, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 5828 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 5832 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5834 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex3DLod(texture< char1, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 5835 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 5839 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5841 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex3DLod(texture< uchar1, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 5842 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 5846 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5848 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex3DLod(texture< char2, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 5849 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 5853 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5855 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex3DLod(texture< uchar2, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 5856 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 5860 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5862 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex3DLod(texture< char4, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 5863 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 5867 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5869 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex3DLod(texture< uchar4, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 5870 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 5874 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5882 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short tex3DLod(texture< short, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 5883 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 5887 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5889 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex3DLod(texture< unsigned short, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 5890 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 5894 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5896 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex3DLod(texture< short1, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 5897 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 5901 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5903 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex3DLod(texture< ushort1, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 5904 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 5908 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5910 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex3DLod(texture< short2, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 5911 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 5915 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5917 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex3DLod(texture< ushort2, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 5918 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 5922 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5924 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex3DLod(texture< short4, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 5925 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 5929 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5931 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex3DLod(texture< ushort4, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 5932 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 5936 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5944 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int tex3DLod(texture< int, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 5945 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 5949 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5951 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex3DLod(texture< unsigned, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 5952 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 5956 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5958 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex3DLod(texture< int1, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 5959 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 5963 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5965 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex3DLod(texture< uint1, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 5966 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 5970 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5972 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex3DLod(texture< int2, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 5973 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 5977 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5979 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex3DLod(texture< uint2, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 5980 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 5984 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5986 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex3DLod(texture< int4, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 5987 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 5991 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 5993 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex3DLod(texture< uint4, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 5994 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 5998 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6072 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex3DLod(texture< float, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6073 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6077 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6079 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex3DLod(texture< float1, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6080 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6084 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6086 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex3DLod(texture< float2, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6087 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6091 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6093 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex3DLod(texture< float4, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6094 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6098 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6106 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex3DLod(texture< char, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6107 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6116 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6118 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex3DLod(texture< signed char, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6119 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6124 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6126 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex3DLod(texture< unsigned char, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6127 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6132 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6134 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex3DLod(texture< char1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6135 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6140 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6142 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex3DLod(texture< uchar1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6143 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6148 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6150 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex3DLod(texture< char2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6151 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6156 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6158 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex3DLod(texture< uchar2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6159 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6164 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6166 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex3DLod(texture< char4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6167 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6172 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6174 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex3DLod(texture< uchar4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6175 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6180 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6188 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex3DLod(texture< short, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6189 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6194 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6196 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex3DLod(texture< unsigned short, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6197 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6202 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6204 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex3DLod(texture< short1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6205 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6210 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6212 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex3DLod(texture< ushort1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6213 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6218 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6220 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex3DLod(texture< short2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6221 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6226 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6228 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex3DLod(texture< ushort2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6229 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6234 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6236 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex3DLod(texture< short4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6237 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6242 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6244 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex3DLod(texture< ushort4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6245 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6250 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6258 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char texCubemapLod(texture< char, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6259 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6267 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6269 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline signed char texCubemapLod(texture< signed char, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6270 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6274 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6276 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char texCubemapLod(texture< unsigned char, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6277 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6281 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6283 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char1 texCubemapLod(texture< char1, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6284 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6288 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6290 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 texCubemapLod(texture< uchar1, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6291 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6295 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6297 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char2 texCubemapLod(texture< char2, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6298 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6302 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6304 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 texCubemapLod(texture< uchar2, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6305 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6309 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6311 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char4 texCubemapLod(texture< char4, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6312 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6316 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6318 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 texCubemapLod(texture< uchar4, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6319 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6323 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6331 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short texCubemapLod(texture< short, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6332 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6336 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6338 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short texCubemapLod(texture< unsigned short, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6339 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6343 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6345 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short1 texCubemapLod(texture< short1, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6346 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6350 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6352 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 texCubemapLod(texture< ushort1, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6353 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6357 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6359 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short2 texCubemapLod(texture< short2, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6360 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6364 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6366 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 texCubemapLod(texture< ushort2, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6367 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6371 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6373 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short4 texCubemapLod(texture< short4, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6374 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6378 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6380 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 texCubemapLod(texture< ushort4, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6381 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6385 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6393 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int texCubemapLod(texture< int, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6394 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6398 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6400 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned texCubemapLod(texture< unsigned, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6401 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6405 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6407 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int1 texCubemapLod(texture< int1, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6408 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6412 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6414 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint1 texCubemapLod(texture< uint1, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6415 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6419 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6421 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int2 texCubemapLod(texture< int2, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6422 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6426 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6428 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint2 texCubemapLod(texture< uint2, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6429 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6433 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6435 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4 texCubemapLod(texture< int4, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6436 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6440 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6442 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4 texCubemapLod(texture< uint4, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6443 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6447 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6521 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLod(texture< float, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6522 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6526 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6528 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemapLod(texture< float1, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6529 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6533 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6535 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemapLod(texture< float2, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6536 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6540 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6542 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemapLod(texture< float4, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6543 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6547 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6555 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLod(texture< char, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6556 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6565 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6567 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLod(texture< signed char, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6568 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6573 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6575 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLod(texture< unsigned char, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6576 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6581 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6583 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemapLod(texture< char1, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6584 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6589 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6591 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemapLod(texture< uchar1, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6592 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6597 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6599 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemapLod(texture< char2, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6600 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6605 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6607 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemapLod(texture< uchar2, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6608 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6613 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6615 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemapLod(texture< char4, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6616 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6621 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6623 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemapLod(texture< uchar4, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6624 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6629 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6637 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLod(texture< short, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6638 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6643 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6645 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLod(texture< unsigned short, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6646 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6651 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6653 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemapLod(texture< short1, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6654 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6659 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6661 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemapLod(texture< ushort1, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6662 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6667 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6669 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemapLod(texture< short2, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6670 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6675 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6677 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemapLod(texture< ushort2, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6678 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6683 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6685 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemapLod(texture< short4, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6686 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6691 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6693 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemapLod(texture< ushort4, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6694 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6699 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6707 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char texCubemapLayeredLod(texture< char, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6708 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6716 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6718 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline signed char texCubemapLayeredLod(texture< signed char, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6719 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6723 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6725 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char texCubemapLayeredLod(texture< unsigned char, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6726 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6730 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6732 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char1 texCubemapLayeredLod(texture< char1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6733 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6737 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6739 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 texCubemapLayeredLod(texture< uchar1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6740 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6744 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6746 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char2 texCubemapLayeredLod(texture< char2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6747 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6751 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6753 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 texCubemapLayeredLod(texture< uchar2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6754 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6758 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6760 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char4 texCubemapLayeredLod(texture< char4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6761 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6765 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6767 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 texCubemapLayeredLod(texture< uchar4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6768 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6772 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6780 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short texCubemapLayeredLod(texture< short, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6781 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6785 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6787 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short texCubemapLayeredLod(texture< unsigned short, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6788 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6792 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6794 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short1 texCubemapLayeredLod(texture< short1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6795 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6799 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6801 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 texCubemapLayeredLod(texture< ushort1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6802 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6806 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6808 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short2 texCubemapLayeredLod(texture< short2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6809 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6813 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6815 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 texCubemapLayeredLod(texture< ushort2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6816 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6820 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6822 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short4 texCubemapLayeredLod(texture< short4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6823 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6827 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6829 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 texCubemapLayeredLod(texture< ushort4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6830 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6834 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6842 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int texCubemapLayeredLod(texture< int, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6843 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6847 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6849 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned texCubemapLayeredLod(texture< unsigned, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6850 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6854 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6856 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int1 texCubemapLayeredLod(texture< int1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6857 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6861 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6863 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint1 texCubemapLayeredLod(texture< uint1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6864 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6868 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6870 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int2 texCubemapLayeredLod(texture< int2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6871 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6875 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6877 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint2 texCubemapLayeredLod(texture< uint2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6878 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6882 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6884 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4 texCubemapLayeredLod(texture< int4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6885 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6889 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6891 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4 texCubemapLayeredLod(texture< uint4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6892 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6896 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6970 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLayeredLod(texture< float, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6971 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6975 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6977 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemapLayeredLod(texture< float1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6978 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6982 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6984 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemapLayeredLod(texture< float2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6985 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6989 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 6991 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemapLayeredLod(texture< float4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6992 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6996 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7004 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLayeredLod(texture< char, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level)
# 7005 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7014 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7016 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLayeredLod(texture< signed char, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level)
# 7017 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7022 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7024 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLayeredLod(texture< unsigned char, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level)
# 7025 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7030 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7032 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemapLayeredLod(texture< char1, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level)
# 7033 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7038 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7040 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemapLayeredLod(texture< uchar1, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level)
# 7041 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7046 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7048 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemapLayeredLod(texture< char2, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level)
# 7049 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7054 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7056 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemapLayeredLod(texture< uchar2, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level)
# 7057 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7062 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7064 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemapLayeredLod(texture< char4, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level)
# 7065 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7070 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7072 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemapLayeredLod(texture< uchar4, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level)
# 7073 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7078 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7086 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLayeredLod(texture< short, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level)
# 7087 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7092 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7094 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLayeredLod(texture< unsigned short, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level)
# 7095 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7100 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7102 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemapLayeredLod(texture< short1, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level)
# 7103 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7108 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7110 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemapLayeredLod(texture< ushort1, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level)
# 7111 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7116 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7118 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemapLayeredLod(texture< short2, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level)
# 7119 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7124 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7126 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemapLayeredLod(texture< ushort2, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level)
# 7127 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7132 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7134 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemapLayeredLod(texture< short4, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level)
# 7135 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7140 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7142 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemapLayeredLod(texture< ushort4, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level)
# 7143 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7148 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7157 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char tex1DGrad(texture< char, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7158 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7166 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7168 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex1DGrad(texture< signed char, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7169 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7173 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7175 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex1DGrad(texture< unsigned char, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7176 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7180 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7182 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex1DGrad(texture< char1, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7183 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7187 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7189 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex1DGrad(texture< uchar1, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7190 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7194 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7196 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex1DGrad(texture< char2, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7197 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7201 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7203 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex1DGrad(texture< uchar2, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7204 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7208 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7210 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex1DGrad(texture< char4, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7211 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7215 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7217 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex1DGrad(texture< uchar4, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7218 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7222 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7230 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short tex1DGrad(texture< short, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7231 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7235 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7237 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex1DGrad(texture< unsigned short, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7238 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7242 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7244 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex1DGrad(texture< short1, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7245 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7249 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7251 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex1DGrad(texture< ushort1, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7252 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7256 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7258 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex1DGrad(texture< short2, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7259 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7263 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7265 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex1DGrad(texture< ushort2, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7266 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7270 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7272 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex1DGrad(texture< short4, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7273 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7277 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7279 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex1DGrad(texture< ushort4, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7280 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7284 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7292 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int tex1DGrad(texture< int, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7293 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7297 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7299 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex1DGrad(texture< unsigned, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7300 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7304 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7306 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex1DGrad(texture< int1, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7307 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7311 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7313 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex1DGrad(texture< uint1, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7314 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7318 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7320 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex1DGrad(texture< int2, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7321 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7325 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7327 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex1DGrad(texture< uint2, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7328 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7332 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7334 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex1DGrad(texture< int4, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7335 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7339 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7341 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex1DGrad(texture< uint4, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7342 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7346 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7426 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DGrad(texture< float, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7427 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7431 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7433 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DGrad(texture< float1, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7434 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7438 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7440 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DGrad(texture< float2, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7441 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7445 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7447 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DGrad(texture< float4, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7448 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7452 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7460 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DGrad(texture< char, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy)
# 7461 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7470 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7472 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DGrad(texture< signed char, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy)
# 7473 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7478 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7480 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DGrad(texture< unsigned char, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy)
# 7481 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7486 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7488 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DGrad(texture< char1, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy)
# 7489 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7494 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7496 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DGrad(texture< uchar1, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy)
# 7497 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7502 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7504 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DGrad(texture< char2, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy)
# 7505 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7510 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7512 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DGrad(texture< uchar2, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy)
# 7513 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7518 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7520 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DGrad(texture< char4, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy)
# 7521 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7526 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7528 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DGrad(texture< uchar4, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy)
# 7529 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7534 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7542 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DGrad(texture< short, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy)
# 7543 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7548 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7550 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DGrad(texture< unsigned short, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy)
# 7551 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7556 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7558 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DGrad(texture< short1, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy)
# 7559 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7564 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7566 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DGrad(texture< ushort1, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy)
# 7567 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7572 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7574 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DGrad(texture< short2, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy)
# 7575 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7580 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7582 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DGrad(texture< ushort2, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy)
# 7583 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7588 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7590 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DGrad(texture< short4, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy)
# 7591 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7596 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7598 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DGrad(texture< ushort4, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy)
# 7599 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7604 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7612 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char tex2DGrad(texture< char, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7613 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7621 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7623 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex2DGrad(texture< signed char, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7624 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7628 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7630 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex2DGrad(texture< unsigned char, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7631 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7635 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7637 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex2DGrad(texture< char1, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7638 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7642 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7644 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex2DGrad(texture< uchar1, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7645 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7649 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7651 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex2DGrad(texture< char2, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7652 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7656 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7658 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex2DGrad(texture< uchar2, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7659 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7663 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7665 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex2DGrad(texture< char4, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7666 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7670 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7672 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex2DGrad(texture< uchar4, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7673 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7677 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7685 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short tex2DGrad(texture< short, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7686 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7690 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7692 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex2DGrad(texture< unsigned short, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7693 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7697 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7699 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex2DGrad(texture< short1, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7700 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7704 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7706 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex2DGrad(texture< ushort1, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7707 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7711 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7713 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex2DGrad(texture< short2, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7714 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7718 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7720 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex2DGrad(texture< ushort2, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7721 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7725 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7727 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex2DGrad(texture< short4, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7728 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7732 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7734 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex2DGrad(texture< ushort4, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7735 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7739 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7747 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int tex2DGrad(texture< int, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7748 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7752 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7754 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex2DGrad(texture< unsigned, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7755 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7759 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7761 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex2DGrad(texture< int1, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7762 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7766 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7768 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex2DGrad(texture< uint1, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7769 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7773 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7775 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex2DGrad(texture< int2, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7776 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7780 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7782 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex2DGrad(texture< uint2, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7783 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7787 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7789 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex2DGrad(texture< int4, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7790 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7794 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7796 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex2DGrad(texture< uint4, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7797 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7801 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7875 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DGrad(texture< float, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7876 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7880 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7882 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DGrad(texture< float1, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7883 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7887 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7889 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DGrad(texture< float2, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7890 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7894 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7896 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DGrad(texture< float4, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7897 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7901 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7909 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DGrad(texture< char, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy)
# 7910 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7919 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7921 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DGrad(texture< signed char, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy)
# 7922 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7927 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7929 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DGrad(texture< unsigned char, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy)
# 7930 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7935 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7937 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DGrad(texture< char1, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy)
# 7938 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7943 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7945 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DGrad(texture< uchar1, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy)
# 7946 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7951 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7953 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DGrad(texture< char2, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy)
# 7954 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7959 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7961 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DGrad(texture< uchar2, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy)
# 7962 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7967 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7969 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DGrad(texture< char4, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy)
# 7970 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7975 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7977 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DGrad(texture< uchar4, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy)
# 7978 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7983 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7991 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DGrad(texture< short, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy)
# 7992 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7997 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 7999 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DGrad(texture< unsigned short, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy)
# 8000 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 8005 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8007 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DGrad(texture< short1, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy)
# 8008 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 8013 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8015 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DGrad(texture< ushort1, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy)
# 8016 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 8021 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8023 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DGrad(texture< short2, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy)
# 8024 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 8029 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8031 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DGrad(texture< ushort2, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy)
# 8032 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 8037 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8039 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DGrad(texture< short4, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy)
# 8040 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 8045 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8047 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DGrad(texture< ushort4, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy)
# 8048 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 8053 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8061 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char tex1DLayeredGrad(texture< char, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8062 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8070 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8072 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex1DLayeredGrad(texture< signed char, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8073 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8077 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8079 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex1DLayeredGrad(texture< unsigned char, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8080 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8084 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8086 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex1DLayeredGrad(texture< char1, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8087 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8091 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8093 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex1DLayeredGrad(texture< uchar1, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8094 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8098 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8100 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex1DLayeredGrad(texture< char2, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8101 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8105 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8107 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex1DLayeredGrad(texture< uchar2, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8108 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8112 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8114 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex1DLayeredGrad(texture< char4, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8115 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8119 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8121 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex1DLayeredGrad(texture< uchar4, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8122 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8126 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8134 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short tex1DLayeredGrad(texture< short, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8135 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8139 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8141 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex1DLayeredGrad(texture< unsigned short, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8142 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8146 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8148 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex1DLayeredGrad(texture< short1, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8149 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8153 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8155 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex1DLayeredGrad(texture< ushort1, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8156 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8160 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8162 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex1DLayeredGrad(texture< short2, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8163 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8167 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8169 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex1DLayeredGrad(texture< ushort2, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8170 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8174 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8176 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex1DLayeredGrad(texture< short4, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8177 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8181 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8183 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex1DLayeredGrad(texture< ushort4, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8184 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8188 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8196 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int tex1DLayeredGrad(texture< int, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8197 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8201 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8203 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex1DLayeredGrad(texture< unsigned, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8204 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8208 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8210 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex1DLayeredGrad(texture< int1, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8211 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8215 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8217 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex1DLayeredGrad(texture< uint1, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8218 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8222 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8224 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex1DLayeredGrad(texture< int2, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8225 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8229 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8231 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex1DLayeredGrad(texture< uint2, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8232 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8236 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8238 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex1DLayeredGrad(texture< int4, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8239 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8243 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8245 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex1DLayeredGrad(texture< uint4, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8246 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8250 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8324 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayeredGrad(texture< float, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8325 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8329 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8331 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLayeredGrad(texture< float1, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8332 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8336 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8338 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLayeredGrad(texture< float2, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8339 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8343 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8345 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLayeredGrad(texture< float4, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8346 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8350 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8358 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayeredGrad(texture< char, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy)
# 8359 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8368 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8370 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayeredGrad(texture< signed char, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy)
# 8371 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8376 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8378 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayeredGrad(texture< unsigned char, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy)
# 8379 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8384 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8386 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLayeredGrad(texture< char1, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy)
# 8387 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8392 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8394 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLayeredGrad(texture< uchar1, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy)
# 8395 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8400 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8402 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLayeredGrad(texture< char2, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy)
# 8403 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8408 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8410 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLayeredGrad(texture< uchar2, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy)
# 8411 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8416 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8418 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLayeredGrad(texture< char4, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy)
# 8419 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8424 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8426 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLayeredGrad(texture< uchar4, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy)
# 8427 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8432 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8440 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayeredGrad(texture< short, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy)
# 8441 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8446 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8448 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayeredGrad(texture< unsigned short, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy)
# 8449 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8454 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8456 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLayeredGrad(texture< short1, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy)
# 8457 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8462 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8464 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLayeredGrad(texture< ushort1, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy)
# 8465 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8470 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8472 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLayeredGrad(texture< short2, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy)
# 8473 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8478 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8480 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLayeredGrad(texture< ushort2, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy)
# 8481 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8486 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8488 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLayeredGrad(texture< short4, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy)
# 8489 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8494 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8496 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLayeredGrad(texture< ushort4, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy)
# 8497 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8502 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8510 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char tex2DLayeredGrad(texture< char, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8511 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8519 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8521 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex2DLayeredGrad(texture< signed char, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8522 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8526 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8528 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex2DLayeredGrad(texture< unsigned char, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8529 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8533 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8535 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex2DLayeredGrad(texture< char1, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8536 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8540 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8542 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex2DLayeredGrad(texture< uchar1, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8543 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8547 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8549 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex2DLayeredGrad(texture< char2, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8550 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8554 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8556 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex2DLayeredGrad(texture< uchar2, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8557 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8561 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8563 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex2DLayeredGrad(texture< char4, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8564 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8568 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8570 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex2DLayeredGrad(texture< uchar4, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8571 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8575 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8583 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short tex2DLayeredGrad(texture< short, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8584 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8588 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8590 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex2DLayeredGrad(texture< unsigned short, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8591 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8595 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8597 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex2DLayeredGrad(texture< short1, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8598 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8602 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8604 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex2DLayeredGrad(texture< ushort1, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8605 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8609 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8611 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex2DLayeredGrad(texture< short2, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8612 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8616 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8618 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex2DLayeredGrad(texture< ushort2, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8619 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8623 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8625 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex2DLayeredGrad(texture< short4, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8626 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8630 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8632 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex2DLayeredGrad(texture< ushort4, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8633 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8637 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8645 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int tex2DLayeredGrad(texture< int, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8646 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8650 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8652 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex2DLayeredGrad(texture< unsigned, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8653 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8657 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8659 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex2DLayeredGrad(texture< int1, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8660 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8664 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8666 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex2DLayeredGrad(texture< uint1, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8667 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8671 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8673 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex2DLayeredGrad(texture< int2, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8674 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8678 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8680 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex2DLayeredGrad(texture< uint2, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8681 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8685 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8687 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex2DLayeredGrad(texture< int4, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8688 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8692 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8694 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex2DLayeredGrad(texture< uint4, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8695 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8699 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8773 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayeredGrad(texture< float, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8774 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8778 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8780 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLayeredGrad(texture< float1, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8781 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8785 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8787 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLayeredGrad(texture< float2, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8788 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8792 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8794 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLayeredGrad(texture< float4, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8795 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8799 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8807 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayeredGrad(texture< char, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8808 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8817 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8819 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayeredGrad(texture< signed char, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8820 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8825 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8827 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayeredGrad(texture< unsigned char, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8828 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8833 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8835 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLayeredGrad(texture< char1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8836 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8841 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8843 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLayeredGrad(texture< uchar1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8844 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8849 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8851 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLayeredGrad(texture< char2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8852 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8857 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8859 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLayeredGrad(texture< uchar2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8860 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8865 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8867 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLayeredGrad(texture< char4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8868 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8873 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8875 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLayeredGrad(texture< uchar4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8876 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8881 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8889 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayeredGrad(texture< short, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8890 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8895 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8897 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayeredGrad(texture< unsigned short, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8898 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8903 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8905 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLayeredGrad(texture< short1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8906 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8911 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8913 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLayeredGrad(texture< ushort1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8914 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8919 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8921 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLayeredGrad(texture< short2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8922 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8927 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8929 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLayeredGrad(texture< ushort2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8930 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8935 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8937 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLayeredGrad(texture< short4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8938 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8943 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8945 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLayeredGrad(texture< ushort4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8946 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8951 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8959 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char tex3DGrad(texture< char, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 8960 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 8968 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8970 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex3DGrad(texture< signed char, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 8971 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 8975 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8977 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex3DGrad(texture< unsigned char, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 8978 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 8982 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8984 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex3DGrad(texture< char1, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 8985 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 8989 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8991 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex3DGrad(texture< uchar1, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 8992 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 8996 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 8998 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex3DGrad(texture< char2, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 8999 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9003 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 9005 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex3DGrad(texture< uchar2, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9006 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9010 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 9012 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex3DGrad(texture< char4, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9013 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9017 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 9019 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex3DGrad(texture< uchar4, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9020 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9024 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 9032 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short tex3DGrad(texture< short, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9033 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9037 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 9039 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex3DGrad(texture< unsigned short, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9040 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9044 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 9046 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex3DGrad(texture< short1, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9047 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9051 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 9053 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex3DGrad(texture< ushort1, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9054 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9058 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 9060 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex3DGrad(texture< short2, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9061 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9065 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 9067 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex3DGrad(texture< ushort2, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9068 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9072 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 9074 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex3DGrad(texture< short4, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9075 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9079 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 9081 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex3DGrad(texture< ushort4, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9082 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9086 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 9094 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int tex3DGrad(texture< int, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9095 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9099 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 9101 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex3DGrad(texture< unsigned, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9102 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9106 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 9108 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex3DGrad(texture< int1, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9109 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9113 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 9115 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex3DGrad(texture< uint1, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9116 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9120 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 9122 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex3DGrad(texture< int2, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9123 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9127 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 9129 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex3DGrad(texture< uint2, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9130 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9134 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 9136 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex3DGrad(texture< int4, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9137 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9141 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 9143 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex3DGrad(texture< uint4, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9144 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9148 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 9222 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex3DGrad(texture< float, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9223 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9227 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 9229 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex3DGrad(texture< float1, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9230 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9234 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 9236 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex3DGrad(texture< float2, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9237 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9241 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 9243 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex3DGrad(texture< float4, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9244 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9248 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 9256 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex3DGrad(texture< char, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9257 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9266 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 9268 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex3DGrad(texture< signed char, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9269 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9274 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 9276 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex3DGrad(texture< unsigned char, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9277 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9282 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 9284 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex3DGrad(texture< char1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9285 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9290 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 9292 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex3DGrad(texture< uchar1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9293 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9298 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 9300 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex3DGrad(texture< char2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9301 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9306 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 9308 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex3DGrad(texture< uchar2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9309 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9314 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 9316 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex3DGrad(texture< char4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9317 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9322 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 9324 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex3DGrad(texture< uchar4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9325 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9330 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 9338 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex3DGrad(texture< short, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9339 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9344 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 9346 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float tex3DGrad(texture< unsigned short, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9347 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9352 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 9354 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex3DGrad(texture< short1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9355 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9360 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 9362 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex3DGrad(texture< ushort1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9363 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9368 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 9370 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex3DGrad(texture< short2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9371 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9376 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 9378 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex3DGrad(texture< ushort2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9379 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9384 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 9386 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex3DGrad(texture< short4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9387 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9392 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 9394 "/usr/include/texture_fetch_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex3DGrad(texture< ushort4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9395 "/usr/include/texture_fetch_functions.hpp" 3
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9400 "/usr/include/texture_fetch_functions.hpp" 3
::exit(___);}
# 70 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_1d_v4f32_s32(cudaTextureObject_t, int, float *, float *, float *, float *); }
# 71 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_1d_v4f32_f32(cudaTextureObject_t, float, float *, float *, float *, float *); }
# 72 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_1d_level_v4f32_f32(cudaTextureObject_t, float, float, float *, float *, float *, float *); }
# 73 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_1d_grad_v4f32_f32(cudaTextureObject_t, float, float, float, float *, float *, float *, float *); }
# 74 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_1d_v4s32_s32(cudaTextureObject_t, int, int *, int *, int *, int *); }
# 75 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_1d_v4s32_f32(cudaTextureObject_t, float, int *, int *, int *, int *); }
# 76 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_1d_level_v4s32_f32(cudaTextureObject_t, float, float, int *, int *, int *, int *); }
# 77 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_1d_grad_v4s32_f32(cudaTextureObject_t, float, float, float, int *, int *, int *, int *); }
# 78 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_1d_v4u32_s32(cudaTextureObject_t, int, unsigned *, unsigned *, unsigned *, unsigned *); }
# 79 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_1d_v4u32_f32(cudaTextureObject_t, float, unsigned *, unsigned *, unsigned *, unsigned *); }
# 80 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_1d_level_v4u32_f32(cudaTextureObject_t, float, float, unsigned *, unsigned *, unsigned *, unsigned *); }
# 81 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_1d_grad_v4u32_f32(cudaTextureObject_t, float, float, float, unsigned *, unsigned *, unsigned *, unsigned *); }
# 83 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_1d_array_v4f32_s32(cudaTextureObject_t, int, int, float *, float *, float *, float *); }
# 84 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_1d_array_v4f32_f32(cudaTextureObject_t, int, float, float *, float *, float *, float *); }
# 85 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_1d_array_level_v4f32_f32(cudaTextureObject_t, int, float, float, float *, float *, float *, float *); }
# 86 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_1d_array_grad_v4f32_f32(cudaTextureObject_t, int, float, float, float, float *, float *, float *, float *); }
# 87 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_1d_array_v4s32_s32(cudaTextureObject_t, int, int, int *, int *, int *, int *); }
# 88 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_1d_array_v4s32_f32(cudaTextureObject_t, int, float, int *, int *, int *, int *); }
# 89 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_1d_array_level_v4s32_f32(cudaTextureObject_t, int, float, float, int *, int *, int *, int *); }
# 90 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_1d_array_grad_v4s32_f32(cudaTextureObject_t, int, float, float, float, int *, int *, int *, int *); }
# 91 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_1d_array_v4u32_s32(cudaTextureObject_t, int, int, unsigned *, unsigned *, unsigned *, unsigned *); }
# 92 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_1d_array_v4u32_f32(cudaTextureObject_t, int, float, unsigned *, unsigned *, unsigned *, unsigned *); }
# 93 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_1d_array_level_v4u32_f32(cudaTextureObject_t, int, float, float, unsigned *, unsigned *, unsigned *, unsigned *); }
# 94 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_1d_array_grad_v4u32_f32(cudaTextureObject_t, int, float, float, float, unsigned *, unsigned *, unsigned *, unsigned *); }
# 96 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_2d_v4f32_s32(cudaTextureObject_t, int, int, float *, float *, float *, float *); }
# 97 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_2d_v4f32_f32(cudaTextureObject_t, float, float, float *, float *, float *, float *); }
# 98 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_2d_level_v4f32_f32(cudaTextureObject_t, float, float, float, float *, float *, float *, float *); }
# 99 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_2d_grad_v4f32_f32(cudaTextureObject_t, float, float, float, float, float, float, float *, float *, float *, float *); }
# 100 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_2d_v4s32_s32(cudaTextureObject_t, int, int, int *, int *, int *, int *); }
# 101 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_2d_v4s32_f32(cudaTextureObject_t, float, float, int *, int *, int *, int *); }
# 102 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_2d_level_v4s32_f32(cudaTextureObject_t, float, float, float, int *, int *, int *, int *); }
# 103 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_2d_grad_v4s32_f32(cudaTextureObject_t, float, float, float, float, float, float, int *, int *, int *, int *); }
# 104 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_2d_v4u32_s32(cudaTextureObject_t, int, int, unsigned *, unsigned *, unsigned *, unsigned *); }
# 105 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_2d_v4u32_f32(cudaTextureObject_t, float, float, unsigned *, unsigned *, unsigned *, unsigned *); }
# 106 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_2d_level_v4u32_f32(cudaTextureObject_t, float, float, float, unsigned *, unsigned *, unsigned *, unsigned *); }
# 107 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_2d_grad_v4u32_f32(cudaTextureObject_t, float, float, float, float, float, float, unsigned *, unsigned *, unsigned *, unsigned *); }
# 109 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_2d_array_v4f32_s32(cudaTextureObject_t, int, int, int, float *, float *, float *, float *); }
# 110 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_2d_array_v4f32_f32(cudaTextureObject_t, int, float, float, float *, float *, float *, float *); }
# 111 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_2d_array_level_v4f32_f32(cudaTextureObject_t, int, float, float, float, float *, float *, float *, float *); }
# 112 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_2d_array_grad_v4f32_f32(cudaTextureObject_t, int, float, float, float, float, float, float, float *, float *, float *, float *); }
# 113 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_2d_array_v4s32_s32(cudaTextureObject_t, int, int, int, int *, int *, int *, int *); }
# 114 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_2d_array_v4s32_f32(cudaTextureObject_t, int, float, float, int *, int *, int *, int *); }
# 115 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_2d_array_level_v4s32_f32(cudaTextureObject_t, int, float, float, float, int *, int *, int *, int *); }
# 116 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_2d_array_grad_v4s32_f32(cudaTextureObject_t, int, float, float, float, float, float, float, int *, int *, int *, int *); }
# 117 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_2d_array_v4u32_s32(cudaTextureObject_t, int, int, int, unsigned *, unsigned *, unsigned *, unsigned *); }
# 118 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_2d_array_v4u32_f32(cudaTextureObject_t, int, float, float, unsigned *, unsigned *, unsigned *, unsigned *); }
# 119 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_2d_array_level_v4u32_f32(cudaTextureObject_t, int, float, float, float, unsigned *, unsigned *, unsigned *, unsigned *); }
# 120 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_2d_array_grad_v4u32_f32(cudaTextureObject_t, int, float, float, float, float, float, float, unsigned *, unsigned *, unsigned *, unsigned *); }
# 122 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_3d_v4f32_s32(cudaTextureObject_t, int, int, int, float *, float *, float *, float *); }
# 123 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_3d_v4f32_f32(cudaTextureObject_t, float, float, float, float *, float *, float *, float *); }
# 124 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_3d_level_v4f32_f32(cudaTextureObject_t, float, float, float, float, float *, float *, float *, float *); }
# 125 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_3d_grad_v4f32_f32(cudaTextureObject_t, float, float, float, float, float, float, float, float, float, float *, float *, float *, float *); }
# 126 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_3d_v4s32_s32(cudaTextureObject_t, int, int, int, int *, int *, int *, int *); }
# 127 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_3d_v4s32_f32(cudaTextureObject_t, float, float, float, int *, int *, int *, int *); }
# 128 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_3d_level_v4s32_f32(cudaTextureObject_t, float, float, float, float, int *, int *, int *, int *); }
# 129 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_3d_grad_v4s32_f32(cudaTextureObject_t, float, float, float, float, float, float, float, float, float, int *, int *, int *, int *); }
# 130 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_3d_v4u32_s32(cudaTextureObject_t, int, int, int, unsigned *, unsigned *, unsigned *, unsigned *); }
# 131 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_3d_v4u32_f32(cudaTextureObject_t, float, float, float, unsigned *, unsigned *, unsigned *, unsigned *); }
# 132 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_3d_level_v4u32_f32(cudaTextureObject_t, float, float, float, float, unsigned *, unsigned *, unsigned *, unsigned *); }
# 133 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_3d_grad_v4u32_f32(cudaTextureObject_t, float, float, float, float, float, float, float, float, float, unsigned *, unsigned *, unsigned *, unsigned *); }
# 135 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_cube_v4f32_f32(cudaTextureObject_t, float, float, float, float *, float *, float *, float *); }
# 136 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_cube_level_v4f32_f32(cudaTextureObject_t, float, float, float, float, float *, float *, float *, float *); }
# 137 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_cube_v4s32_f32(cudaTextureObject_t, float, float, float, int *, int *, int *, int *); }
# 138 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_cube_level_v4s32_f32(cudaTextureObject_t, float, float, float, float, int *, int *, int *, int *); }
# 139 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_cube_v4u32_f32(cudaTextureObject_t, float, float, float, unsigned *, unsigned *, unsigned *, unsigned *); }
# 140 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_cube_level_v4u32_f32(cudaTextureObject_t, float, float, float, float, unsigned *, unsigned *, unsigned *, unsigned *); }
# 142 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_cube_array_v4f32_f32(cudaTextureObject_t, int, float, float, float, float *, float *, float *, float *); }
# 143 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_cube_array_level_v4f32_f32(cudaTextureObject_t, int, float, float, float, float, float *, float *, float *, float *); }
# 144 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_cube_array_v4s32_f32(cudaTextureObject_t, int, float, float, float, int *, int *, int *, int *); }
# 145 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_cube_array_level_v4s32_f32(cudaTextureObject_t, int, float, float, float, float, int *, int *, int *, int *); }
# 146 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_cube_array_v4u32_f32(cudaTextureObject_t, int, float, float, float, unsigned *, unsigned *, unsigned *, unsigned *); }
# 147 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tex_cube_array_level_v4u32_f32(cudaTextureObject_t, int, float, float, float, float, unsigned *, unsigned *, unsigned *, unsigned *); }
# 149 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tld4_r_2d_v4f32_f32(cudaTextureObject_t, float, float, float *, float *, float *, float *); }
# 150 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tld4_g_2d_v4f32_f32(cudaTextureObject_t, float, float, float *, float *, float *, float *); }
# 151 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tld4_b_2d_v4f32_f32(cudaTextureObject_t, float, float, float *, float *, float *, float *); }
# 152 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tld4_a_2d_v4f32_f32(cudaTextureObject_t, float, float, float *, float *, float *, float *); }
# 153 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tld4_r_2d_v4s32_f32(cudaTextureObject_t, float, float, int *, int *, int *, int *); }
# 154 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tld4_g_2d_v4s32_f32(cudaTextureObject_t, float, float, int *, int *, int *, int *); }
# 155 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tld4_b_2d_v4s32_f32(cudaTextureObject_t, float, float, int *, int *, int *, int *); }
# 156 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tld4_a_2d_v4s32_f32(cudaTextureObject_t, float, float, int *, int *, int *, int *); }
# 157 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tld4_r_2d_v4u32_f32(cudaTextureObject_t, float, float, unsigned *, unsigned *, unsigned *, unsigned *); }
# 158 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tld4_g_2d_v4u32_f32(cudaTextureObject_t, float, float, unsigned *, unsigned *, unsigned *, unsigned *); }
# 159 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tld4_b_2d_v4u32_f32(cudaTextureObject_t, float, float, unsigned *, unsigned *, unsigned *, unsigned *); }
# 160 "/usr/include/texture_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __tld4_a_2d_v4u32_f32(cudaTextureObject_t, float, float, unsigned *, unsigned *, unsigned *, unsigned *); }
# 169 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(char * retVal, cudaTextureObject_t texObject, int x);
# 170 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(signed char * retVal, cudaTextureObject_t texObject, int x);
# 172 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(char1 * retVal, cudaTextureObject_t texObject, int x);
# 174 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(char2 * retVal, cudaTextureObject_t texObject, int x);
# 176 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(char4 * retVal, cudaTextureObject_t texObject, int x);
# 178 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(unsigned char * retVal, cudaTextureObject_t texObject, int x);
# 180 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(uchar1 * retVal, cudaTextureObject_t texObject, int x);
# 182 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(uchar2 * retVal, cudaTextureObject_t texObject, int x);
# 184 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(uchar4 * retVal, cudaTextureObject_t texObject, int x);
# 192 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(short * retVal, cudaTextureObject_t texObject, int x);
# 194 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(short1 * retVal, cudaTextureObject_t texObject, int x);
# 196 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(short2 * retVal, cudaTextureObject_t texObject, int x);
# 198 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(short4 * retVal, cudaTextureObject_t texObject, int x);
# 200 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(unsigned short * retVal, cudaTextureObject_t texObject, int x);
# 202 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(ushort1 * retVal, cudaTextureObject_t texObject, int x);
# 204 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(ushort2 * retVal, cudaTextureObject_t texObject, int x);
# 206 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(ushort4 * retVal, cudaTextureObject_t texObject, int x);
# 214 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(int * retVal, cudaTextureObject_t texObject, int x);
# 216 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(int1 * retVal, cudaTextureObject_t texObject, int x);
# 218 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(int2 * retVal, cudaTextureObject_t texObject, int x);
# 220 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(int4 * retVal, cudaTextureObject_t texObject, int x);
# 222 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(unsigned * retVal, cudaTextureObject_t texObject, int x);
# 224 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(uint1 * retVal, cudaTextureObject_t texObject, int x);
# 226 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(uint2 * retVal, cudaTextureObject_t texObject, int x);
# 228 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(uint4 * retVal, cudaTextureObject_t texObject, int x);
# 263 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(float * retVal, cudaTextureObject_t texObject, int x);
# 265 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(float1 * retVal, cudaTextureObject_t texObject, int x);
# 267 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(float2 * retVal, cudaTextureObject_t texObject, int x);
# 269 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(float4 * retVal, cudaTextureObject_t texObject, int x);
# 277 "/usr/include/texture_indirect_functions.h" 3
template< class T>
# 278 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline T tex1Dfetch(cudaTextureObject_t texObject, int x)
# 279 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;
# 283 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 291 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(char * retVal, cudaTextureObject_t texObject, float x);
# 292 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(signed char * retVal, cudaTextureObject_t texObject, float x);
# 294 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(char1 * retVal, cudaTextureObject_t texObject, float x);
# 296 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(char2 * retVal, cudaTextureObject_t texObject, float x);
# 298 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(char4 * retVal, cudaTextureObject_t texObject, float x);
# 300 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(unsigned char * retVal, cudaTextureObject_t texObject, float x);
# 302 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(uchar1 * retVal, cudaTextureObject_t texObject, float x);
# 304 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(uchar2 * retVal, cudaTextureObject_t texObject, float x);
# 306 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(uchar4 * retVal, cudaTextureObject_t texObject, float x);
# 314 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(short * retVal, cudaTextureObject_t texObject, float x);
# 316 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(short1 * retVal, cudaTextureObject_t texObject, float x);
# 318 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(short2 * retVal, cudaTextureObject_t texObject, float x);
# 320 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(short4 * retVal, cudaTextureObject_t texObject, float x);
# 322 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(unsigned short * retVal, cudaTextureObject_t texObject, float x);
# 324 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(ushort1 * retVal, cudaTextureObject_t texObject, float x);
# 326 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(ushort2 * retVal, cudaTextureObject_t texObject, float x);
# 328 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(ushort4 * retVal, cudaTextureObject_t texObject, float x);
# 336 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(int * retVal, cudaTextureObject_t texObject, float x);
# 338 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(int1 * retVal, cudaTextureObject_t texObject, float x);
# 340 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(int2 * retVal, cudaTextureObject_t texObject, float x);
# 342 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(int4 * retVal, cudaTextureObject_t texObject, float x);
# 344 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(unsigned * retVal, cudaTextureObject_t texObject, float x);
# 346 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(uint1 * retVal, cudaTextureObject_t texObject, float x);
# 348 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(uint2 * retVal, cudaTextureObject_t texObject, float x);
# 350 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(uint4 * retVal, cudaTextureObject_t texObject, float x);
# 385 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(float * retVal, cudaTextureObject_t texObject, float x);
# 387 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(float1 * retVal, cudaTextureObject_t texObject, float x);
# 389 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(float2 * retVal, cudaTextureObject_t texObject, float x);
# 391 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(float4 * retVal, cudaTextureObject_t texObject, float x);
# 399 "/usr/include/texture_indirect_functions.h" 3
template< class T>
# 400 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline T tex1D(cudaTextureObject_t texObject, float x)
# 401 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;
# 405 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 413 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(char * retVal, cudaTextureObject_t texObject, float x, float y);
# 414 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(signed char * retVal, cudaTextureObject_t texObject, float x, float y);
# 416 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(char1 * retVal, cudaTextureObject_t texObject, float x, float y);
# 418 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(char2 * retVal, cudaTextureObject_t texObject, float x, float y);
# 420 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(char4 * retVal, cudaTextureObject_t texObject, float x, float y);
# 422 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(unsigned char * retVal, cudaTextureObject_t texObject, float x, float y);
# 424 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(uchar1 * retVal, cudaTextureObject_t texObject, float x, float y);
# 426 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(uchar2 * retVal, cudaTextureObject_t texObject, float x, float y);
# 428 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(uchar4 * retVal, cudaTextureObject_t texObject, float x, float y);
# 436 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(short * retVal, cudaTextureObject_t texObject, float x, float y);
# 438 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(short1 * retVal, cudaTextureObject_t texObject, float x, float y);
# 440 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(short2 * retVal, cudaTextureObject_t texObject, float x, float y);
# 442 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(short4 * retVal, cudaTextureObject_t texObject, float x, float y);
# 444 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(unsigned short * retVal, cudaTextureObject_t texObject, float x, float y);
# 446 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(ushort1 * retVal, cudaTextureObject_t texObject, float x, float y);
# 448 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(ushort2 * retVal, cudaTextureObject_t texObject, float x, float y);
# 450 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(ushort4 * retVal, cudaTextureObject_t texObject, float x, float y);
# 458 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(int * retVal, cudaTextureObject_t texObject, float x, float y);
# 460 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(int1 * retVal, cudaTextureObject_t texObject, float x, float y);
# 462 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(int2 * retVal, cudaTextureObject_t texObject, float x, float y);
# 464 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(int4 * retVal, cudaTextureObject_t texObject, float x, float y);
# 466 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(unsigned * retVal, cudaTextureObject_t texObject, float x, float y);
# 468 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(uint1 * retVal, cudaTextureObject_t texObject, float x, float y);
# 470 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(uint2 * retVal, cudaTextureObject_t texObject, float x, float y);
# 472 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(uint4 * retVal, cudaTextureObject_t texObject, float x, float y);
# 507 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(float * retVal, cudaTextureObject_t texObject, float x, float y);
# 509 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(float1 * retVal, cudaTextureObject_t texObject, float x, float y);
# 511 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(float2 * retVal, cudaTextureObject_t texObject, float x, float y);
# 513 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(float4 * retVal, cudaTextureObject_t texObject, float x, float y);
# 521 "/usr/include/texture_indirect_functions.h" 3
template< class T>
# 522 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline T tex2D(cudaTextureObject_t texObject, float x, float y)
# 523 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;
# 527 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 535 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(char * retVal, cudaTextureObject_t texObject, float x, float y, float z);
# 536 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(signed char * retVal, cudaTextureObject_t texObject, float x, float y, float z);
# 538 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(char1 * retVal, cudaTextureObject_t texObject, float x, float y, float z);
# 540 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(char2 * retVal, cudaTextureObject_t texObject, float x, float y, float z);
# 542 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(char4 * retVal, cudaTextureObject_t texObject, float x, float y, float z);
# 544 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(unsigned char * retVal, cudaTextureObject_t texObject, float x, float y, float z);
# 546 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(uchar1 * retVal, cudaTextureObject_t texObject, float x, float y, float z);
# 548 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(uchar2 * retVal, cudaTextureObject_t texObject, float x, float y, float z);
# 550 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(uchar4 * retVal, cudaTextureObject_t texObject, float x, float y, float z);
# 558 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(short * retVal, cudaTextureObject_t texObject, float x, float y, float z);
# 560 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(short1 * retVal, cudaTextureObject_t texObject, float x, float y, float z);
# 562 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(short2 * retVal, cudaTextureObject_t texObject, float x, float y, float z);
# 564 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(short4 * retVal, cudaTextureObject_t texObject, float x, float y, float z);
# 566 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(unsigned short * retVal, cudaTextureObject_t texObject, float x, float y, float z);
# 568 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(ushort1 * retVal, cudaTextureObject_t texObject, float x, float y, float z);
# 570 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(ushort2 * retVal, cudaTextureObject_t texObject, float x, float y, float z);
# 572 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(ushort4 * retVal, cudaTextureObject_t texObject, float x, float y, float z);
# 580 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(int * retVal, cudaTextureObject_t texObject, float x, float y, float z);
# 582 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(int1 * retVal, cudaTextureObject_t texObject, float x, float y, float z);
# 584 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(int2 * retVal, cudaTextureObject_t texObject, float x, float y, float z);
# 586 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(int4 * retVal, cudaTextureObject_t texObject, float x, float y, float z);
# 588 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(unsigned * retVal, cudaTextureObject_t texObject, float x, float y, float z);
# 590 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(uint1 * retVal, cudaTextureObject_t texObject, float x, float y, float z);
# 592 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(uint2 * retVal, cudaTextureObject_t texObject, float x, float y, float z);
# 594 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(uint4 * retVal, cudaTextureObject_t texObject, float x, float y, float z);
# 629 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(float * retVal, cudaTextureObject_t texObject, float x, float y, float z);
# 631 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(float1 * retVal, cudaTextureObject_t texObject, float x, float y, float z);
# 633 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(float2 * retVal, cudaTextureObject_t texObject, float x, float y, float z);
# 635 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(float4 * retVal, cudaTextureObject_t texObject, float x, float y, float z);
# 643 "/usr/include/texture_indirect_functions.h" 3
template< class T>
# 644 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline T tex3D(cudaTextureObject_t texObject, float x, float y, float z)
# 645 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;
# 649 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 657 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(char * retVal, cudaTextureObject_t texObject, float x, int layer);
# 658 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(signed char * retVal, cudaTextureObject_t texObject, float x, int layer);
# 660 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(char1 * retVal, cudaTextureObject_t texObject, float x, int layer);
# 662 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(char2 * retVal, cudaTextureObject_t texObject, float x, int layer);
# 664 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(char4 * retVal, cudaTextureObject_t texObject, float x, int layer);
# 666 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(unsigned char * retVal, cudaTextureObject_t texObject, float x, int layer);
# 668 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(uchar1 * retVal, cudaTextureObject_t texObject, float x, int layer);
# 670 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(uchar2 * retVal, cudaTextureObject_t texObject, float x, int layer);
# 672 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(uchar4 * retVal, cudaTextureObject_t texObject, float x, int layer);
# 680 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(short * retVal, cudaTextureObject_t texObject, float x, int layer);
# 682 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(short1 * retVal, cudaTextureObject_t texObject, float x, int layer);
# 684 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(short2 * retVal, cudaTextureObject_t texObject, float x, int layer);
# 686 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(short4 * retVal, cudaTextureObject_t texObject, float x, int layer);
# 688 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(unsigned short * retVal, cudaTextureObject_t texObject, float x, int layer);
# 690 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(ushort1 * retVal, cudaTextureObject_t texObject, float x, int layer);
# 692 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(ushort2 * retVal, cudaTextureObject_t texObject, float x, int layer);
# 694 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(ushort4 * retVal, cudaTextureObject_t texObject, float x, int layer);
# 702 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(int * retVal, cudaTextureObject_t texObject, float x, int layer);
# 704 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(int1 * retVal, cudaTextureObject_t texObject, float x, int layer);
# 706 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(int2 * retVal, cudaTextureObject_t texObject, float x, int layer);
# 708 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(int4 * retVal, cudaTextureObject_t texObject, float x, int layer);
# 710 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(unsigned * retVal, cudaTextureObject_t texObject, float x, int layer);
# 712 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(uint1 * retVal, cudaTextureObject_t texObject, float x, int layer);
# 714 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(uint2 * retVal, cudaTextureObject_t texObject, float x, int layer);
# 716 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(uint4 * retVal, cudaTextureObject_t texObject, float x, int layer);
# 751 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(float * retVal, cudaTextureObject_t texObject, float x, int layer);
# 753 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(float1 * retVal, cudaTextureObject_t texObject, float x, int layer);
# 755 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(float2 * retVal, cudaTextureObject_t texObject, float x, int layer);
# 757 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(float4 * retVal, cudaTextureObject_t texObject, float x, int layer);
# 765 "/usr/include/texture_indirect_functions.h" 3
template< class T>
# 766 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline T tex1DLayered(cudaTextureObject_t texObject, float x, int layer)
# 767 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)layer;
# 771 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 779 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(char * retVal, cudaTextureObject_t texObject, float x, float y, int layer);
# 780 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(signed char * retVal, cudaTextureObject_t texObject, float x, float y, int layer);
# 782 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(char1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer);
# 784 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(char2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer);
# 786 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(char4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer);
# 788 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(unsigned char * retVal, cudaTextureObject_t texObject, float x, float y, int layer);
# 790 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(uchar1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer);
# 792 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(uchar2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer);
# 794 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(uchar4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer);
# 802 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(short * retVal, cudaTextureObject_t texObject, float x, float y, int layer);
# 804 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(short1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer);
# 806 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(short2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer);
# 808 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(short4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer);
# 810 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(unsigned short * retVal, cudaTextureObject_t texObject, float x, float y, int layer);
# 812 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(ushort1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer);
# 814 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(ushort2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer);
# 816 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(ushort4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer);
# 824 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(int * retVal, cudaTextureObject_t texObject, float x, float y, int layer);
# 826 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(int1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer);
# 828 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(int2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer);
# 830 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(int4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer);
# 832 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(unsigned * retVal, cudaTextureObject_t texObject, float x, float y, int layer);
# 834 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(uint1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer);
# 836 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(uint2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer);
# 838 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(uint4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer);
# 873 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(float * retVal, cudaTextureObject_t texObject, float x, float y, int layer);
# 875 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(float1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer);
# 877 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(float2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer);
# 879 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(float4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer);
# 887 "/usr/include/texture_indirect_functions.h" 3
template< class T>
# 888 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline T tex2DLayered(cudaTextureObject_t texObject, float x, float y, int layer)
# 889 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)layer;
# 893 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 901 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(char * retVal, cudaTextureObject_t texObject, float x, float y, float z);
# 902 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(signed char * retVal, cudaTextureObject_t texObject, float x, float y, float z);
# 904 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(char1 * retVal, cudaTextureObject_t texObject, float x, float y, float z);
# 906 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(char2 * retVal, cudaTextureObject_t texObject, float x, float y, float z);
# 908 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(char4 * retVal, cudaTextureObject_t texObject, float x, float y, float z);
# 910 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(unsigned char * retVal, cudaTextureObject_t texObject, float x, float y, float z);
# 912 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(uchar1 * retVal, cudaTextureObject_t texObject, float x, float y, float z);
# 914 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(uchar2 * retVal, cudaTextureObject_t texObject, float x, float y, float z);
# 916 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(uchar4 * retVal, cudaTextureObject_t texObject, float x, float y, float z);
# 924 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(short * retVal, cudaTextureObject_t texObject, float x, float y, float z);
# 926 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(short1 * retVal, cudaTextureObject_t texObject, float x, float y, float z);
# 928 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(short2 * retVal, cudaTextureObject_t texObject, float x, float y, float z);
# 930 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(short4 * retVal, cudaTextureObject_t texObject, float x, float y, float z);
# 932 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(unsigned short * retVal, cudaTextureObject_t texObject, float x, float y, float z);
# 934 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(ushort1 * retVal, cudaTextureObject_t texObject, float x, float y, float z);
# 936 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(ushort2 * retVal, cudaTextureObject_t texObject, float x, float y, float z);
# 938 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(ushort4 * retVal, cudaTextureObject_t texObject, float x, float y, float z);
# 946 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(int * retVal, cudaTextureObject_t texObject, float x, float y, float z);
# 948 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(int1 * retVal, cudaTextureObject_t texObject, float x, float y, float z);
# 950 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(int2 * retVal, cudaTextureObject_t texObject, float x, float y, float z);
# 952 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(int4 * retVal, cudaTextureObject_t texObject, float x, float y, float z);
# 954 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(unsigned * retVal, cudaTextureObject_t texObject, float x, float y, float z);
# 956 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(uint1 * retVal, cudaTextureObject_t texObject, float x, float y, float z);
# 958 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(uint2 * retVal, cudaTextureObject_t texObject, float x, float y, float z);
# 960 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(uint4 * retVal, cudaTextureObject_t texObject, float x, float y, float z);
# 995 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(float * retVal, cudaTextureObject_t texObject, float x, float y, float z);
# 997 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(float1 * retVal, cudaTextureObject_t texObject, float x, float y, float z);
# 999 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(float2 * retVal, cudaTextureObject_t texObject, float x, float y, float z);
# 1001 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(float4 * retVal, cudaTextureObject_t texObject, float x, float y, float z);
# 1009 "/usr/include/texture_indirect_functions.h" 3
template< class T>
# 1010 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline T texCubemap(cudaTextureObject_t texObject, float x, float y, float z)
# 1011 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;
# 1015 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 1023 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(char * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer);
# 1024 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(signed char * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer);
# 1026 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(char1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer);
# 1028 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(char2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer);
# 1030 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(char4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer);
# 1032 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(unsigned char * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer);
# 1034 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(uchar1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer);
# 1036 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(uchar2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer);
# 1038 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(uchar4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer);
# 1046 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(short * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer);
# 1048 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(short1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer);
# 1050 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(short2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer);
# 1052 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(short4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer);
# 1054 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(unsigned short * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer);
# 1056 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(ushort1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer);
# 1058 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(ushort2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer);
# 1060 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(ushort4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer);
# 1068 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(int * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer);
# 1070 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(int1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer);
# 1072 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(int2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer);
# 1074 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(int4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer);
# 1076 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(unsigned * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer);
# 1078 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(uint1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer);
# 1080 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(uint2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer);
# 1082 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(uint4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer);
# 1117 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(float * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer);
# 1119 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(float1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer);
# 1121 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(float2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer);
# 1123 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(float4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer);
# 1131 "/usr/include/texture_indirect_functions.h" 3
template< class T>
# 1132 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline T texCubemapLayered(cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 1133 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 1137 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 1145 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(char * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0);
# 1147 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(signed char * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0);
# 1149 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(char1 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0);
# 1151 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(char2 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0);
# 1153 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(char4 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0);
# 1155 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(unsigned char * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0);
# 1157 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(uchar1 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0);
# 1159 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(uchar2 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0);
# 1161 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(uchar4 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0);
# 1169 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(short * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0);
# 1171 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(short1 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0);
# 1173 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(short2 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0);
# 1175 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(short4 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0);
# 1177 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(unsigned short * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0);
# 1179 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(ushort1 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0);
# 1181 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(ushort2 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0);
# 1183 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(ushort4 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0);
# 1191 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(int * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0);
# 1193 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(int1 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0);
# 1195 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(int2 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0);
# 1197 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(int4 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0);
# 1199 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(unsigned * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0);
# 1201 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(uint1 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0);
# 1203 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(uint2 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0);
# 1205 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(uint4 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0);
# 1213 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(long * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0);
# 1215 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(long1 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0);
# 1217 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(long2 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0);
# 1219 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(long4 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0);
# 1221 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(unsigned long * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0);
# 1223 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(ulong1 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0);
# 1225 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(ulong2 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0);
# 1227 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(ulong4 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0);
# 1235 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(float * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0);
# 1237 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(float1 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0);
# 1239 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(float2 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0);
# 1241 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(float4 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0);
# 1249 "/usr/include/texture_indirect_functions.h" 3
template< class T>
# 1250 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline T tex2Dgather(cudaTextureObject_t to, float x, float y, int comp = 0)
# 1251 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)to;(void)x;(void)y;(void)comp;
# 1255 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 1263 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(char * retVal, cudaTextureObject_t texObject, float x, float level);
# 1264 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(signed char * retVal, cudaTextureObject_t texObject, float x, float level);
# 1266 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(char1 * retVal, cudaTextureObject_t texObject, float x, float level);
# 1268 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(char2 * retVal, cudaTextureObject_t texObject, float x, float level);
# 1270 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(char4 * retVal, cudaTextureObject_t texObject, float x, float level);
# 1272 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(unsigned char * retVal, cudaTextureObject_t texObject, float x, float level);
# 1274 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(uchar1 * retVal, cudaTextureObject_t texObject, float x, float level);
# 1276 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(uchar2 * retVal, cudaTextureObject_t texObject, float x, float level);
# 1278 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(uchar4 * retVal, cudaTextureObject_t texObject, float x, float level);
# 1286 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(short * retVal, cudaTextureObject_t texObject, float x, float level);
# 1288 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(short1 * retVal, cudaTextureObject_t texObject, float x, float level);
# 1290 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(short2 * retVal, cudaTextureObject_t texObject, float x, float level);
# 1292 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(short4 * retVal, cudaTextureObject_t texObject, float x, float level);
# 1294 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(unsigned short * retVal, cudaTextureObject_t texObject, float x, float level);
# 1296 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(ushort1 * retVal, cudaTextureObject_t texObject, float x, float level);
# 1298 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(ushort2 * retVal, cudaTextureObject_t texObject, float x, float level);
# 1300 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(ushort4 * retVal, cudaTextureObject_t texObject, float x, float level);
# 1308 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(int * retVal, cudaTextureObject_t texObject, float x, float level);
# 1310 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(int1 * retVal, cudaTextureObject_t texObject, float x, float level);
# 1312 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(int2 * retVal, cudaTextureObject_t texObject, float x, float level);
# 1314 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(int4 * retVal, cudaTextureObject_t texObject, float x, float level);
# 1316 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(unsigned * retVal, cudaTextureObject_t texObject, float x, float level);
# 1318 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(uint1 * retVal, cudaTextureObject_t texObject, float x, float level);
# 1320 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(uint2 * retVal, cudaTextureObject_t texObject, float x, float level);
# 1322 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(uint4 * retVal, cudaTextureObject_t texObject, float x, float level);
# 1357 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(float * retVal, cudaTextureObject_t texObject, float x, float level);
# 1359 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(float1 * retVal, cudaTextureObject_t texObject, float x, float level);
# 1361 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(float2 * retVal, cudaTextureObject_t texObject, float x, float level);
# 1363 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(float4 * retVal, cudaTextureObject_t texObject, float x, float level);
# 1371 "/usr/include/texture_indirect_functions.h" 3
template< class T>
# 1372 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline T tex1DLod(cudaTextureObject_t texObject, float x, float level)
# 1373 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)level;
# 1377 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 1385 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(char * retVal, cudaTextureObject_t texObject, float x, float y, float level);
# 1386 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(signed char * retVal, cudaTextureObject_t texObject, float x, float y, float level);
# 1388 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(char1 * retVal, cudaTextureObject_t texObject, float x, float y, float level);
# 1390 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(char2 * retVal, cudaTextureObject_t texObject, float x, float y, float level);
# 1392 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(char4 * retVal, cudaTextureObject_t texObject, float x, float y, float level);
# 1394 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(unsigned char * retVal, cudaTextureObject_t texObject, float x, float y, float level);
# 1396 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(uchar1 * retVal, cudaTextureObject_t texObject, float x, float y, float level);
# 1398 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(uchar2 * retVal, cudaTextureObject_t texObject, float x, float y, float level);
# 1400 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(uchar4 * retVal, cudaTextureObject_t texObject, float x, float y, float level);
# 1408 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(short * retVal, cudaTextureObject_t texObject, float x, float y, float level);
# 1410 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(short1 * retVal, cudaTextureObject_t texObject, float x, float y, float level);
# 1412 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(short2 * retVal, cudaTextureObject_t texObject, float x, float y, float level);
# 1414 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(short4 * retVal, cudaTextureObject_t texObject, float x, float y, float level);
# 1416 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(unsigned short * retVal, cudaTextureObject_t texObject, float x, float y, float level);
# 1418 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(ushort1 * retVal, cudaTextureObject_t texObject, float x, float y, float level);
# 1420 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(ushort2 * retVal, cudaTextureObject_t texObject, float x, float y, float level);
# 1422 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(ushort4 * retVal, cudaTextureObject_t texObject, float x, float y, float level);
# 1430 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(int * retVal, cudaTextureObject_t texObject, float x, float y, float level);
# 1432 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(int1 * retVal, cudaTextureObject_t texObject, float x, float y, float level);
# 1434 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(int2 * retVal, cudaTextureObject_t texObject, float x, float y, float level);
# 1436 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(int4 * retVal, cudaTextureObject_t texObject, float x, float y, float level);
# 1438 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(unsigned * retVal, cudaTextureObject_t texObject, float x, float y, float level);
# 1440 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(uint1 * retVal, cudaTextureObject_t texObject, float x, float y, float level);
# 1442 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(uint2 * retVal, cudaTextureObject_t texObject, float x, float y, float level);
# 1444 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(uint4 * retVal, cudaTextureObject_t texObject, float x, float y, float level);
# 1479 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(float * retVal, cudaTextureObject_t texObject, float x, float y, float level);
# 1481 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(float1 * retVal, cudaTextureObject_t texObject, float x, float y, float level);
# 1483 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(float2 * retVal, cudaTextureObject_t texObject, float x, float y, float level);
# 1485 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(float4 * retVal, cudaTextureObject_t texObject, float x, float y, float level);
# 1493 "/usr/include/texture_indirect_functions.h" 3
template< class T>
# 1494 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline T tex2DLod(cudaTextureObject_t texObject, float x, float y, float level)
# 1495 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)level;
# 1499 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 1507 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(char * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level);
# 1508 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(signed char * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level);
# 1510 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(char1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level);
# 1512 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(char2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level);
# 1514 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(char4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level);
# 1516 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(unsigned char * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level);
# 1518 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(uchar1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level);
# 1520 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(uchar2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level);
# 1522 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(uchar4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level);
# 1530 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(short * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level);
# 1532 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(short1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level);
# 1534 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(short2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level);
# 1536 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(short4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level);
# 1538 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(unsigned short * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level);
# 1540 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(ushort1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level);
# 1542 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(ushort2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level);
# 1544 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(ushort4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level);
# 1552 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(int * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level);
# 1554 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(int1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level);
# 1556 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(int2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level);
# 1558 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(int4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level);
# 1560 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(unsigned * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level);
# 1562 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(uint1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level);
# 1564 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(uint2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level);
# 1566 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(uint4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level);
# 1601 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(float * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level);
# 1603 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(float1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level);
# 1605 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(float2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level);
# 1607 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(float4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level);
# 1615 "/usr/include/texture_indirect_functions.h" 3
template< class T>
# 1616 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline T tex3DLod(cudaTextureObject_t texObject, float x, float y, float z, float level)
# 1617 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 1621 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 1629 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(char * retVal, cudaTextureObject_t texObject, float x, int layer, float level);
# 1630 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(signed char * retVal, cudaTextureObject_t texObject, float x, int layer, float level);
# 1632 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(char1 * retVal, cudaTextureObject_t texObject, float x, int layer, float level);
# 1634 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(char2 * retVal, cudaTextureObject_t texObject, float x, int layer, float level);
# 1636 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(char4 * retVal, cudaTextureObject_t texObject, float x, int layer, float level);
# 1638 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(unsigned char * retVal, cudaTextureObject_t texObject, float x, int layer, float level);
# 1640 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(uchar1 * retVal, cudaTextureObject_t texObject, float x, int layer, float level);
# 1642 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(uchar2 * retVal, cudaTextureObject_t texObject, float x, int layer, float level);
# 1644 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(uchar4 * retVal, cudaTextureObject_t texObject, float x, int layer, float level);
# 1652 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(short * retVal, cudaTextureObject_t texObject, float x, int layer, float level);
# 1654 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(short1 * retVal, cudaTextureObject_t texObject, float x, int layer, float level);
# 1656 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(short2 * retVal, cudaTextureObject_t texObject, float x, int layer, float level);
# 1658 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(short4 * retVal, cudaTextureObject_t texObject, float x, int layer, float level);
# 1660 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(unsigned short * retVal, cudaTextureObject_t texObject, float x, int layer, float level);
# 1662 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(ushort1 * retVal, cudaTextureObject_t texObject, float x, int layer, float level);
# 1664 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(ushort2 * retVal, cudaTextureObject_t texObject, float x, int layer, float level);
# 1666 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(ushort4 * retVal, cudaTextureObject_t texObject, float x, int layer, float level);
# 1674 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(int * retVal, cudaTextureObject_t texObject, float x, int layer, float level);
# 1676 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(int1 * retVal, cudaTextureObject_t texObject, float x, int layer, float level);
# 1678 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(int2 * retVal, cudaTextureObject_t texObject, float x, int layer, float level);
# 1680 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(int4 * retVal, cudaTextureObject_t texObject, float x, int layer, float level);
# 1682 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(unsigned * retVal, cudaTextureObject_t texObject, float x, int layer, float level);
# 1684 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(uint1 * retVal, cudaTextureObject_t texObject, float x, int layer, float level);
# 1686 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(uint2 * retVal, cudaTextureObject_t texObject, float x, int layer, float level);
# 1688 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(uint4 * retVal, cudaTextureObject_t texObject, float x, int layer, float level);
# 1723 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(float * retVal, cudaTextureObject_t texObject, float x, int layer, float level);
# 1725 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(float1 * retVal, cudaTextureObject_t texObject, float x, int layer, float level);
# 1727 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(float2 * retVal, cudaTextureObject_t texObject, float x, int layer, float level);
# 1729 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(float4 * retVal, cudaTextureObject_t texObject, float x, int layer, float level);
# 1737 "/usr/include/texture_indirect_functions.h" 3
template< class T>
# 1738 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline T tex1DLayeredLod(cudaTextureObject_t texObject, float x, int layer, float level)
# 1739 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)layer;(void)level;
# 1743 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 1751 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(char * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level);
# 1752 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(signed char * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level);
# 1754 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(char1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level);
# 1756 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(char2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level);
# 1758 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(char4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level);
# 1760 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(unsigned char * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level);
# 1762 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(uchar1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level);
# 1764 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(uchar2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level);
# 1766 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(uchar4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level);
# 1774 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(short * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level);
# 1776 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(short1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level);
# 1778 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(short2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level);
# 1780 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(short4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level);
# 1782 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(unsigned short * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level);
# 1784 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(ushort1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level);
# 1786 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(ushort2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level);
# 1788 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(ushort4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level);
# 1796 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(int * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level);
# 1798 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(int1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level);
# 1800 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(int2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level);
# 1802 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(int4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level);
# 1804 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(unsigned * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level);
# 1806 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(uint1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level);
# 1808 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(uint2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level);
# 1810 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(uint4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level);
# 1845 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(float * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level);
# 1847 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(float1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level);
# 1849 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(float2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level);
# 1851 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(float4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level);
# 1859 "/usr/include/texture_indirect_functions.h" 3
template< class T>
# 1860 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline T tex2DLayeredLod(cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 1861 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 1865 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 1873 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(char * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level);
# 1874 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(signed char * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level);
# 1876 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(char1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level);
# 1878 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(char2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level);
# 1880 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(char4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level);
# 1882 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(unsigned char * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level);
# 1884 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(uchar1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level);
# 1886 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(uchar2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level);
# 1888 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(uchar4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level);
# 1896 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(short * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level);
# 1898 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(short1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level);
# 1900 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(short2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level);
# 1902 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(short4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level);
# 1904 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(unsigned short * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level);
# 1906 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(ushort1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level);
# 1908 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(ushort2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level);
# 1910 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(ushort4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level);
# 1918 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(int * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level);
# 1920 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(int1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level);
# 1922 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(int2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level);
# 1924 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(int4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level);
# 1926 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(unsigned * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level);
# 1928 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(uint1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level);
# 1930 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(uint2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level);
# 1932 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(uint4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level);
# 1967 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(float * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level);
# 1969 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(float1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level);
# 1971 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(float2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level);
# 1973 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(float4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level);
# 1981 "/usr/include/texture_indirect_functions.h" 3
template< class T>
# 1982 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline T texCubemapLod(cudaTextureObject_t texObject, float x, float y, float z, float level)
# 1983 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 1987 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 1995 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(char * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level);
# 1996 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(signed char * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level);
# 1998 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(char1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level);
# 2000 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(char2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level);
# 2002 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(char4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level);
# 2004 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(unsigned char * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level);
# 2006 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(uchar1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level);
# 2008 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(uchar2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level);
# 2010 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(uchar4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level);
# 2018 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(short * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level);
# 2020 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(short1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level);
# 2022 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(short2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level);
# 2024 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(short4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level);
# 2026 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(unsigned short * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level);
# 2028 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(ushort1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level);
# 2030 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(ushort2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level);
# 2032 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(ushort4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level);
# 2040 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(int * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level);
# 2042 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(int1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level);
# 2044 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(int2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level);
# 2046 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(int4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level);
# 2048 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(unsigned * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level);
# 2050 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(uint1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level);
# 2052 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(uint2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level);
# 2054 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(uint4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level);
# 2089 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(float * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level);
# 2091 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(float1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level);
# 2093 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(float2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level);
# 2095 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(float4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level);
# 2103 "/usr/include/texture_indirect_functions.h" 3
template< class T>
# 2104 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline T texCubemapLayeredLod(cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 2105 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 2109 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 2117 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(char * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy);
# 2118 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(signed char * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy);
# 2120 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(char1 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy);
# 2122 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(char2 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy);
# 2124 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(char4 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy);
# 2126 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(unsigned char * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy);
# 2128 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(uchar1 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy);
# 2130 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(uchar2 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy);
# 2132 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(uchar4 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy);
# 2140 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(short * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy);
# 2142 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(short1 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy);
# 2144 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(short2 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy);
# 2146 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(short4 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy);
# 2148 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(unsigned short * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy);
# 2150 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(ushort1 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy);
# 2152 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(ushort2 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy);
# 2154 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(ushort4 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy);
# 2162 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(int * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy);
# 2164 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(int1 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy);
# 2166 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(int2 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy);
# 2168 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(int4 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy);
# 2170 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(unsigned * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy);
# 2172 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(uint1 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy);
# 2174 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(uint2 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy);
# 2176 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(uint4 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy);
# 2211 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(float * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy);
# 2213 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(float1 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy);
# 2215 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(float2 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy);
# 2217 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(float4 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy);
# 2225 "/usr/include/texture_indirect_functions.h" 3
template< class T>
# 2226 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline T tex1DGrad(cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 2227 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 2231 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 2239 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(char * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy);
# 2240 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(signed char * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy);
# 2242 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(char1 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy);
# 2244 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(char2 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy);
# 2246 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(char4 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy);
# 2248 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(unsigned char * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy);
# 2250 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(uchar1 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy);
# 2252 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(uchar2 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy);
# 2254 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(uchar4 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy);
# 2262 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(short * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy);
# 2264 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(short1 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy);
# 2266 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(short2 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy);
# 2268 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(short4 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy);
# 2270 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(unsigned short * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy);
# 2272 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(ushort1 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy);
# 2274 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(ushort2 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy);
# 2276 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(ushort4 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy);
# 2284 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(int * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy);
# 2286 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(int1 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy);
# 2288 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(int2 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy);
# 2290 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(int4 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy);
# 2292 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(unsigned * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy);
# 2294 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(uint1 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy);
# 2296 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(uint2 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy);
# 2298 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(uint4 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy);
# 2333 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(float * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy);
# 2335 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(float1 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy);
# 2337 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(float2 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy);
# 2339 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(float4 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy);
# 2347 "/usr/include/texture_indirect_functions.h" 3
template< class T>
# 2348 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline T tex2DGrad(cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 2349 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 2353 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 2361 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(char * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy);
# 2362 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(signed char * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy);
# 2364 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(char1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy);
# 2366 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(char2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy);
# 2368 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(char4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy);
# 2370 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(unsigned char * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy);
# 2372 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(uchar1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy);
# 2374 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(uchar2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy);
# 2376 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(uchar4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy);
# 2384 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(short * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy);
# 2386 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(short1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy);
# 2388 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(short2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy);
# 2390 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(short4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy);
# 2392 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(unsigned short * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy);
# 2394 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(ushort1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy);
# 2396 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(ushort2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy);
# 2398 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(ushort4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy);
# 2406 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(int * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy);
# 2408 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(int1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy);
# 2410 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(int2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy);
# 2412 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(int4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy);
# 2414 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(unsigned * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy);
# 2416 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(uint1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy);
# 2418 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(uint2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy);
# 2420 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(uint4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy);
# 2455 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(float * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy);
# 2457 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(float1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy);
# 2459 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(float2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy);
# 2461 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(float4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy);
# 2469 "/usr/include/texture_indirect_functions.h" 3
template< class T>
# 2470 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline T tex3DGrad(cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 2471 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 2475 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 2483 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(char * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy);
# 2484 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(signed char * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy);
# 2486 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(char1 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy);
# 2488 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(char2 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy);
# 2490 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(char4 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy);
# 2492 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(unsigned char * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy);
# 2494 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(uchar1 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy);
# 2496 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(uchar2 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy);
# 2498 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(uchar4 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy);
# 2506 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(short * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy);
# 2508 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(short1 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy);
# 2510 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(short2 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy);
# 2512 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(short4 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy);
# 2514 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(unsigned short * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy);
# 2516 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(ushort1 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy);
# 2518 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(ushort2 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy);
# 2520 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(ushort4 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy);
# 2528 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(int * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy);
# 2530 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(int1 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy);
# 2532 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(int2 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy);
# 2534 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(int4 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy);
# 2536 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(unsigned * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy);
# 2538 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(uint1 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy);
# 2540 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(uint2 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy);
# 2542 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(uint4 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy);
# 2577 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(float * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy);
# 2579 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(float1 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy);
# 2581 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(float2 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy);
# 2583 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(float4 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy);
# 2591 "/usr/include/texture_indirect_functions.h" 3
template< class T>
# 2592 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline T tex1DLayeredGrad(cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 2593 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 2597 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 2605 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(char * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 2606 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(signed char * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 2608 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(char1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 2610 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(char2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 2612 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(char4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 2614 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(unsigned char * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 2616 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(uchar1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 2618 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(uchar2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 2620 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(uchar4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 2628 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(short * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 2630 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(short1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 2632 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(short2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 2634 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(short4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 2636 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(unsigned short * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 2638 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(ushort1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 2640 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(ushort2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 2642 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(ushort4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 2650 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(int * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 2652 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(int1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 2654 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(int2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 2656 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(int4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 2658 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(unsigned * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 2660 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(uint1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 2662 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(uint2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 2664 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(uint4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 2699 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(float * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 2701 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(float1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 2703 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(float2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 2705 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(float4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy);
# 2713 "/usr/include/texture_indirect_functions.h" 3
template< class T>
# 2714 "/usr/include/texture_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline T tex2DLayeredGrad(cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 2715 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 2719 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 75 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(char *retVal, cudaTextureObject_t texObject, int x)
# 76 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 85 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 86 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(signed char *retVal, cudaTextureObject_t texObject, int x)
# 87 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 91 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 93 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(char1 *retVal, cudaTextureObject_t texObject, int x)
# 94 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 98 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 100 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(char2 *retVal, cudaTextureObject_t texObject, int x)
# 101 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 105 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 107 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(char4 *retVal, cudaTextureObject_t texObject, int x)
# 108 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 112 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 114 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(unsigned char *retVal, cudaTextureObject_t texObject, int x)
# 115 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 119 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 121 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(uchar1 *retVal, cudaTextureObject_t texObject, int x)
# 122 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 126 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 128 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(uchar2 *retVal, cudaTextureObject_t texObject, int x)
# 129 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 133 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 135 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(uchar4 *retVal, cudaTextureObject_t texObject, int x)
# 136 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 140 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 148 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(short *retVal, cudaTextureObject_t texObject, int x)
# 149 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 153 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 155 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(short1 *retVal, cudaTextureObject_t texObject, int x)
# 156 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 160 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 162 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(short2 *retVal, cudaTextureObject_t texObject, int x)
# 163 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 167 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 169 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(short4 *retVal, cudaTextureObject_t texObject, int x)
# 170 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 174 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 176 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(unsigned short *retVal, cudaTextureObject_t texObject, int x)
# 177 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 181 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 183 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(ushort1 *retVal, cudaTextureObject_t texObject, int x)
# 184 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 188 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 190 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(ushort2 *retVal, cudaTextureObject_t texObject, int x)
# 191 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 195 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 197 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(ushort4 *retVal, cudaTextureObject_t texObject, int x)
# 198 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 202 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 210 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(int *retVal, cudaTextureObject_t texObject, int x)
# 211 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 215 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 217 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(int1 *retVal, cudaTextureObject_t texObject, int x)
# 218 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 222 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 224 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(int2 *retVal, cudaTextureObject_t texObject, int x)
# 225 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 229 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 231 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(int4 *retVal, cudaTextureObject_t texObject, int x)
# 232 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 236 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 238 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(unsigned *retVal, cudaTextureObject_t texObject, int x)
# 239 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 243 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 245 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(uint1 *retVal, cudaTextureObject_t texObject, int x)
# 246 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 250 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 252 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(uint2 *retVal, cudaTextureObject_t texObject, int x)
# 253 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 257 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 259 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(uint4 *retVal, cudaTextureObject_t texObject, int x)
# 260 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 264 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 339 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(float *retVal, cudaTextureObject_t texObject, int x)
# 340 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 344 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 346 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(float1 *retVal, cudaTextureObject_t texObject, int x)
# 347 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 351 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 353 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(float2 *retVal, cudaTextureObject_t texObject, int x)
# 354 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 358 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 360 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(float4 *retVal, cudaTextureObject_t texObject, int x)
# 361 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 365 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 373 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(char *retVal, cudaTextureObject_t texObject, float x)
# 374 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 383 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 384 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(signed char *retVal, cudaTextureObject_t texObject, float x)
# 385 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 389 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 391 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(char1 *retVal, cudaTextureObject_t texObject, float x)
# 392 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 396 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 398 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(char2 *retVal, cudaTextureObject_t texObject, float x)
# 399 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 403 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 405 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(char4 *retVal, cudaTextureObject_t texObject, float x)
# 406 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 410 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 412 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(unsigned char *retVal, cudaTextureObject_t texObject, float x)
# 413 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 417 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 419 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(uchar1 *retVal, cudaTextureObject_t texObject, float x)
# 420 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 424 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 426 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(uchar2 *retVal, cudaTextureObject_t texObject, float x)
# 427 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 431 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 433 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(uchar4 *retVal, cudaTextureObject_t texObject, float x)
# 434 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 438 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 446 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(short *retVal, cudaTextureObject_t texObject, float x)
# 447 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 451 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 453 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(short1 *retVal, cudaTextureObject_t texObject, float x)
# 454 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 458 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 460 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(short2 *retVal, cudaTextureObject_t texObject, float x)
# 461 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 465 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 467 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(short4 *retVal, cudaTextureObject_t texObject, float x)
# 468 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 472 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 474 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(unsigned short *retVal, cudaTextureObject_t texObject, float x)
# 475 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 479 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 481 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(ushort1 *retVal, cudaTextureObject_t texObject, float x)
# 482 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 486 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 488 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(ushort2 *retVal, cudaTextureObject_t texObject, float x)
# 489 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 493 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 495 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(ushort4 *retVal, cudaTextureObject_t texObject, float x)
# 496 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 500 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 508 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(int *retVal, cudaTextureObject_t texObject, float x)
# 509 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 513 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 515 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(int1 *retVal, cudaTextureObject_t texObject, float x)
# 516 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 520 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 522 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(int2 *retVal, cudaTextureObject_t texObject, float x)
# 523 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 527 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 529 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(int4 *retVal, cudaTextureObject_t texObject, float x)
# 530 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 534 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 536 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(unsigned *retVal, cudaTextureObject_t texObject, float x)
# 537 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 541 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 543 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(uint1 *retVal, cudaTextureObject_t texObject, float x)
# 544 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 548 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 550 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(uint2 *retVal, cudaTextureObject_t texObject, float x)
# 551 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 555 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 557 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(uint4 *retVal, cudaTextureObject_t texObject, float x)
# 558 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 562 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 637 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(float *retVal, cudaTextureObject_t texObject, float x)
# 638 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 642 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 644 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(float1 *retVal, cudaTextureObject_t texObject, float x)
# 645 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 649 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 651 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(float2 *retVal, cudaTextureObject_t texObject, float x)
# 652 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 656 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 658 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(float4 *retVal, cudaTextureObject_t texObject, float x)
# 659 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 663 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 671 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(char *retVal, cudaTextureObject_t texObject, float x, float y)
# 672 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 681 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 682 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(signed char *retVal, cudaTextureObject_t texObject, float x, float y)
# 683 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 687 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 689 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(char1 *retVal, cudaTextureObject_t texObject, float x, float y)
# 690 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 694 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 696 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(char2 *retVal, cudaTextureObject_t texObject, float x, float y)
# 697 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 701 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 703 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(char4 *retVal, cudaTextureObject_t texObject, float x, float y)
# 704 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 708 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 710 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y)
# 711 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 715 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 717 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y)
# 718 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 722 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 724 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y)
# 725 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 729 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 731 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y)
# 732 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 736 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 744 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(short *retVal, cudaTextureObject_t texObject, float x, float y)
# 745 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 749 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 751 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(short1 *retVal, cudaTextureObject_t texObject, float x, float y)
# 752 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 756 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 758 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(short2 *retVal, cudaTextureObject_t texObject, float x, float y)
# 759 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 763 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 765 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(short4 *retVal, cudaTextureObject_t texObject, float x, float y)
# 766 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 770 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 772 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y)
# 773 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 777 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 779 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y)
# 780 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 784 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 786 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y)
# 787 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 791 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 793 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y)
# 794 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 798 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 806 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(int *retVal, cudaTextureObject_t texObject, float x, float y)
# 807 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 811 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 813 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(int1 *retVal, cudaTextureObject_t texObject, float x, float y)
# 814 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 818 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 820 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(int2 *retVal, cudaTextureObject_t texObject, float x, float y)
# 821 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 825 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 827 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(int4 *retVal, cudaTextureObject_t texObject, float x, float y)
# 828 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 832 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 834 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(unsigned *retVal, cudaTextureObject_t texObject, float x, float y)
# 835 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 839 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 841 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(uint1 *retVal, cudaTextureObject_t texObject, float x, float y)
# 842 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 846 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 848 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(uint2 *retVal, cudaTextureObject_t texObject, float x, float y)
# 849 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 853 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 855 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(uint4 *retVal, cudaTextureObject_t texObject, float x, float y)
# 856 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 860 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 935 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(float *retVal, cudaTextureObject_t texObject, float x, float y)
# 936 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 940 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 942 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(float1 *retVal, cudaTextureObject_t texObject, float x, float y)
# 943 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 947 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 949 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(float2 *retVal, cudaTextureObject_t texObject, float x, float y)
# 950 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 954 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 956 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(float4 *retVal, cudaTextureObject_t texObject, float x, float y)
# 957 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 961 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 969 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(char *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 970 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 979 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 980 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 981 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 985 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 987 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 988 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 992 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 994 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 995 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 999 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1001 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1002 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1006 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1008 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1009 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1013 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1015 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1016 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1020 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1022 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1023 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1027 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1029 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1030 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1034 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1042 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(short *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1043 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1047 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1049 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1050 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1054 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1056 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1057 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1061 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1063 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1064 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1068 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1070 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1071 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1075 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1077 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1078 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1082 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1084 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1085 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1089 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1091 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1092 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1096 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1104 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(int *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1105 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1109 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1111 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1112 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1116 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1118 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1119 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1123 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1125 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1126 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1130 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1132 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1133 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1137 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1139 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1140 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1144 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1146 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1147 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1151 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1153 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1154 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1158 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1233 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(float *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1234 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1238 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1240 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1241 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1245 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1247 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1248 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1252 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1254 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1255 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1259 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1267 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(char *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1268 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1277 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1278 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(signed char *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1279 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1283 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1285 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(char1 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1286 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1290 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1292 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(char2 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1293 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1297 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1299 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(char4 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1300 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1304 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1306 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(unsigned char *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1307 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1311 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1313 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(uchar1 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1314 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1318 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1320 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(uchar2 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1321 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1325 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1327 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(uchar4 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1328 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1332 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1340 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(short *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1341 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1345 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1347 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(short1 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1348 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1352 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1354 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(short2 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1355 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1359 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1361 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(short4 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1362 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1366 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1368 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(unsigned short *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1369 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1373 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1375 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(ushort1 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1376 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1380 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1382 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(ushort2 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1383 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1387 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1389 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(ushort4 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1390 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1394 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1402 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(int *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1403 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1407 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1409 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(int1 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1410 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1414 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1416 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(int2 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1417 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1421 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1423 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(int4 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1424 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1428 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1430 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(unsigned *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1431 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1435 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1437 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(uint1 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1438 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1442 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1444 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(uint2 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1445 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1449 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1451 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(uint4 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1452 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1456 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1531 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(float *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1532 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1536 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1538 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(float1 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1539 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1543 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1545 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(float2 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1546 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1550 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1552 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(float4 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1553 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1557 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1565 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(char *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1566 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1575 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1576 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(signed char *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1577 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1581 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1583 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(char1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1584 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1588 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1590 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(char2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1591 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1595 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1597 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(char4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1598 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1602 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1604 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1605 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1609 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1611 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1612 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1616 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1618 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1619 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1623 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1625 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1626 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1630 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1638 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(short *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1639 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1643 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1645 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(short1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1646 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1650 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1652 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(short2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1653 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1657 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1659 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(short4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1660 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1664 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1666 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1667 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1671 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1673 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1674 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1678 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1680 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1681 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1685 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1687 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1688 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1692 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1700 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(int *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1701 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1705 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1707 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(int1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1708 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1712 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1714 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(int2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1715 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1719 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1721 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(int4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1722 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1726 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1728 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1729 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1733 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1735 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1736 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1740 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1742 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1743 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1747 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1749 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1750 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1754 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1829 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(float *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1830 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1834 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1836 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(float1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1837 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1841 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1843 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(float2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1844 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1848 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1850 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(float4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1851 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1855 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1863 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(char *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1864 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1873 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1874 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1875 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1879 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1881 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1882 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1886 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1888 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1889 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1893 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1895 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1896 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1900 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1902 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1903 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1907 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1909 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1910 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1914 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1916 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1917 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1921 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1923 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1924 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1928 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1936 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(short *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1937 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1941 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1943 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1944 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1948 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1950 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1951 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1955 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1957 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1958 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1962 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1964 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1965 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1969 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1971 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1972 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1976 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1978 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1979 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1983 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1985 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1986 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1990 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 1998 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(int *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1999 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 2003 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2005 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 2006 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 2010 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2012 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 2013 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 2017 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2019 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 2020 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 2024 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2026 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 2027 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 2031 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2033 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 2034 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 2038 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2040 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 2041 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 2045 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2047 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 2048 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 2052 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2127 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(float *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 2128 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 2132 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2134 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 2135 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 2139 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2141 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 2142 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 2146 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2148 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 2149 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 2153 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2161 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(char *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2162 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2171 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2172 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2173 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2177 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2179 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2180 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2184 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2186 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2187 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2191 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2193 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2194 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2198 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2200 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2201 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2205 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2207 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2208 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2212 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2214 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2215 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2219 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2221 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2222 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2226 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2234 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(short *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2235 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2239 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2241 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2242 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2246 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2248 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2249 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2253 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2255 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2256 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2260 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2262 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2263 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2267 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2269 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2270 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2274 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2276 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2277 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2281 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2283 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2284 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2288 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2296 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(int *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2297 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2301 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2303 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2304 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2308 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2310 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2311 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2315 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2317 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2318 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2322 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2324 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2325 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2329 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2331 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2332 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2336 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2338 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2339 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2343 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2345 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2346 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2350 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2425 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(float *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2426 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2430 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2432 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2433 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2437 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2439 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2440 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2444 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2446 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2447 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2451 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2459 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(char *retVal, cudaTextureObject_t texObject, float x, float y, int comp)
# 2460 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2475 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2477 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(signed char *retVal, cudaTextureObject_t texObject, float x, float y, int comp)
# 2478 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2493 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2495 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(char1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp)
# 2496 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2511 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2513 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(char2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp)
# 2514 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2529 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2531 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(char4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp)
# 2532 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2547 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2549 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, int comp)
# 2550 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2565 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2567 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp)
# 2568 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2583 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2585 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp)
# 2586 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2601 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2603 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp)
# 2604 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2619 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2627 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(short *retVal, cudaTextureObject_t texObject, float x, float y, int comp)
# 2628 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2643 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2645 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(short1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp)
# 2646 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2661 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2663 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(short2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp)
# 2664 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2679 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2681 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(short4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp)
# 2682 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2697 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2699 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, int comp)
# 2700 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2715 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2717 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp)
# 2718 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2733 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2735 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp)
# 2736 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2751 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2753 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp)
# 2754 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2769 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2777 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(int *retVal, cudaTextureObject_t texObject, float x, float y, int comp)
# 2778 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2793 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2795 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(int1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp)
# 2796 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2811 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2813 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(int2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp)
# 2814 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2829 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2831 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(int4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp)
# 2832 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2847 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2849 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, int comp)
# 2850 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2865 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2867 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp)
# 2868 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2883 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2885 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp)
# 2886 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2901 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2903 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp)
# 2904 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2919 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2927 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(long *retVal, cudaTextureObject_t texObject, float x, float y, int comp)
# 2928 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2943 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2945 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(long1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp)
# 2946 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2961 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2963 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(long2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp)
# 2964 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2979 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2981 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(long4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp)
# 2982 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2997 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 2999 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(unsigned long *retVal, cudaTextureObject_t texObject, float x, float y, int comp)
# 3000 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 3015 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3017 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(ulong1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp)
# 3018 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 3033 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3035 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(ulong2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp)
# 3036 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 3051 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3053 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(ulong4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp)
# 3054 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 3069 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3077 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(float *retVal, cudaTextureObject_t texObject, float x, float y, int comp)
# 3078 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 3093 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3095 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(float1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp)
# 3096 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 3111 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3113 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(float2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp)
# 3114 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 3129 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3131 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(float4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp)
# 3132 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 3147 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3155 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(char *retVal, cudaTextureObject_t texObject, float x, float level)
# 3156 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3165 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3166 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(signed char *retVal, cudaTextureObject_t texObject, float x, float level)
# 3167 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3171 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3173 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(char1 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3174 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3178 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3180 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(char2 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3181 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3185 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3187 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(char4 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3188 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3192 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3194 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(unsigned char *retVal, cudaTextureObject_t texObject, float x, float level)
# 3195 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3199 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3201 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(uchar1 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3202 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3206 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3208 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(uchar2 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3209 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3213 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3215 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(uchar4 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3216 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3220 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3228 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(short *retVal, cudaTextureObject_t texObject, float x, float level)
# 3229 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3233 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3235 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(short1 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3236 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3240 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3242 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(short2 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3243 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3247 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3249 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(short4 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3250 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3254 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3256 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(unsigned short *retVal, cudaTextureObject_t texObject, float x, float level)
# 3257 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3261 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3263 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(ushort1 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3264 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3268 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3270 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(ushort2 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3271 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3275 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3277 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(ushort4 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3278 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3282 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3290 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(int *retVal, cudaTextureObject_t texObject, float x, float level)
# 3291 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3295 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3297 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(int1 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3298 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3302 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3304 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(int2 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3305 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3309 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3311 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(int4 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3312 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3316 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3318 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(unsigned *retVal, cudaTextureObject_t texObject, float x, float level)
# 3319 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3323 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3325 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(uint1 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3326 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3330 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3332 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(uint2 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3333 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3337 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3339 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(uint4 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3340 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3344 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3419 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(float *retVal, cudaTextureObject_t texObject, float x, float level)
# 3420 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3424 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3426 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(float1 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3427 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3431 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3433 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(float2 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3434 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3438 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3440 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(float4 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3441 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3445 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3453 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(char *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3454 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3463 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3464 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3465 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3469 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3471 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3472 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3476 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3478 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3479 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3483 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3485 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3486 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3490 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3492 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3493 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3497 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3499 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3500 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3504 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3506 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3507 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3511 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3513 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3514 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3518 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3526 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(short *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3527 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3531 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3533 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3534 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3538 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3540 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3541 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3545 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3547 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3548 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3552 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3554 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3555 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3559 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3561 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3562 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3566 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3568 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3569 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3573 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3575 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3576 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3580 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3588 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(int *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3589 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3593 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3595 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3596 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3600 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3602 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3603 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3607 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3609 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3610 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3614 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3616 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3617 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3621 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3623 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3624 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3628 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3630 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3631 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3635 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3637 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3638 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3642 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3717 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(float *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3718 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3722 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3724 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3725 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3729 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3731 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3732 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3736 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3738 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3739 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3743 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3751 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 3752 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 3761 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3762 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 3763 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 3767 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3769 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 3770 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 3774 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3776 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 3777 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 3781 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3783 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 3784 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 3788 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3790 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 3791 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 3795 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3797 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 3798 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 3802 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3804 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 3805 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 3809 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3811 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 3812 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 3816 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3824 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(short *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 3825 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 3829 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3831 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 3832 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 3836 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3838 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 3839 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 3843 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3845 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 3846 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 3850 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3852 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 3853 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 3857 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3859 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 3860 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 3864 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3866 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 3867 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 3871 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3873 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 3874 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 3878 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3886 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(int *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 3887 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 3891 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3893 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 3894 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 3898 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3900 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 3901 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 3905 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3907 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 3908 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 3912 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3914 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 3915 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 3919 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3921 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 3922 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 3926 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3928 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 3929 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 3933 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 3935 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 3936 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 3940 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4015 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(float *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4016 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4020 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4022 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4023 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4027 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4029 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4030 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4034 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4036 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4037 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4041 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4049 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(char *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4050 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4059 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4060 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(signed char *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4061 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4065 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4067 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(char1 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4068 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4072 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4074 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(char2 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4075 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4079 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4081 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(char4 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4082 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4086 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4088 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(unsigned char *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4089 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4093 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4095 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(uchar1 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4096 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4100 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4102 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(uchar2 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4103 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4107 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4109 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(uchar4 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4110 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4114 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4122 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(short *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4123 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4127 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4129 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(short1 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4130 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4134 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4136 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(short2 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4137 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4141 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4143 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(short4 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4144 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4148 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4150 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(unsigned short *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4151 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4155 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4157 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(ushort1 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4158 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4162 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4164 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(ushort2 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4165 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4169 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4171 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(ushort4 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4172 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4176 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4184 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(int *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4185 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4189 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4191 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(int1 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4192 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4196 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4198 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(int2 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4199 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4203 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4205 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(int4 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4206 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4210 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4212 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(unsigned *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4213 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4217 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4219 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(uint1 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4220 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4224 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4226 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(uint2 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4227 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4231 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4233 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(uint4 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4234 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4238 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4313 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(float *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4314 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4318 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4320 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(float1 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4321 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4325 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4327 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(float2 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4328 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4332 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4334 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(float4 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4335 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4339 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4347 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(char *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4348 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4357 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4358 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(signed char *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4359 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4363 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4365 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(char1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4366 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4370 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4372 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(char2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4373 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4377 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4379 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(char4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4380 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4384 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4386 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4387 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4391 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4393 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4394 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4398 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4400 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4401 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4405 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4407 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4408 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4412 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4420 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(short *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4421 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4425 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4427 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(short1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4428 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4432 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4434 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(short2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4435 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4439 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4441 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(short4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4442 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4446 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4448 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4449 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4453 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4455 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4456 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4460 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4462 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4463 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4467 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4469 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4470 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4474 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4482 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(int *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4483 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4487 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4489 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(int1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4490 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4494 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4496 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(int2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4497 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4501 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4503 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(int4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4504 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4508 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4510 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4511 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4515 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4517 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4518 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4522 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4524 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4525 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4529 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4531 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4532 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4536 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4611 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(float *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4612 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4616 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4618 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(float1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4619 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4623 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4625 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(float2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4626 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4630 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4632 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(float4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4633 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4637 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4645 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4646 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4655 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4656 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4657 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4661 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4663 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4664 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4668 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4670 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4671 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4675 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4677 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4678 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4682 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4684 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4685 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4689 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4691 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4692 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4696 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4698 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4699 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4703 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4705 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4706 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4710 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4718 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(short *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4719 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4723 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4725 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4726 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4730 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4732 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4733 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4737 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4739 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4740 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4744 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4746 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4747 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4751 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4753 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4754 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4758 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4760 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4761 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4765 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4767 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4768 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4772 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4780 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(int *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4781 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4785 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4787 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4788 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4792 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4794 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4795 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4799 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4801 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4802 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4806 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4808 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4809 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4813 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4815 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4816 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4820 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4822 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4823 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4827 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4829 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4830 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4834 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4909 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(float *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4910 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4914 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4916 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4917 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4921 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4923 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4924 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4928 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4930 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4931 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4935 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4943 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(char *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 4944 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 4953 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4954 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 4955 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 4959 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4961 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 4962 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 4966 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4968 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 4969 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 4973 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4975 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 4976 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 4980 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4982 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 4983 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 4987 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4989 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 4990 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 4994 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 4996 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 4997 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5001 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5003 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5004 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5008 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5016 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(short *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5017 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5021 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5023 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5024 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5028 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5030 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5031 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5035 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5037 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5038 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5042 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5044 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5045 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5049 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5051 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5052 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5056 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5058 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5059 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5063 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5065 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5066 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5070 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5078 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(int *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5079 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5083 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5085 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5086 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5090 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5092 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5093 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5097 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5099 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5100 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5104 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5106 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5107 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5111 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5113 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5114 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5118 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5120 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5121 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5125 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5127 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5128 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5132 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5207 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(float *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5208 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5212 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5214 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5215 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5219 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5221 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5222 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5226 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5228 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5229 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5233 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5241 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(char *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5242 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5251 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5252 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(signed char *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5253 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5257 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5259 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(char1 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5260 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5264 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5266 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(char2 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5267 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5271 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5273 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(char4 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5274 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5278 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5280 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(unsigned char *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5281 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5285 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5287 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(uchar1 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5288 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5292 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5294 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(uchar2 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5295 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5299 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5301 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(uchar4 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5302 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5306 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5314 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(short *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5315 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5319 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5321 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(short1 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5322 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5326 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5328 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(short2 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5329 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5333 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5335 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(short4 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5336 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5340 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5342 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(unsigned short *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5343 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5347 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5349 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(ushort1 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5350 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5354 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5356 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(ushort2 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5357 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5361 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5363 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(ushort4 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5364 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5368 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5376 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(int *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5377 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5381 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5383 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(int1 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5384 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5388 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5390 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(int2 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5391 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5395 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5397 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(int4 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5398 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5402 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5404 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(unsigned *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5405 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5409 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5411 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(uint1 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5412 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5416 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5418 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(uint2 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5419 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5423 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5425 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(uint4 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5426 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5430 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5505 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(float *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5506 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5510 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5512 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(float1 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5513 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5517 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5519 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(float2 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5520 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5524 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5526 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(float4 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5527 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5531 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5539 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(char *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5540 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5549 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5550 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5551 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5555 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5557 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5558 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5562 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5564 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5565 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5569 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5571 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5572 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5576 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5578 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5579 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5583 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5585 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5586 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5590 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5592 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5593 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5597 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5599 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5600 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5604 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5612 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(short *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5613 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5617 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5619 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5620 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5624 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5626 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5627 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5631 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5633 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5634 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5638 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5640 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5641 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5645 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5647 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5648 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5652 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5654 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5655 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5659 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5661 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5662 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5666 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5674 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(int *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5675 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5679 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5681 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5682 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5686 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5688 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5689 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5693 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5695 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5696 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5700 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5702 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5703 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5707 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5709 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5710 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5714 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5716 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5717 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5721 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5723 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5724 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5728 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5803 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(float *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5804 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5808 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5810 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5811 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5815 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5817 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5818 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5822 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5824 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5825 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5829 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5837 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 5838 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 5847 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5848 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 5849 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 5853 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5855 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 5856 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 5860 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5862 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 5863 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 5867 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5869 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 5870 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 5874 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5876 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 5877 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 5881 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5883 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 5884 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 5888 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5890 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 5891 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 5895 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5897 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 5898 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 5902 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5910 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(short *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 5911 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 5915 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5917 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 5918 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 5922 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5924 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 5925 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 5929 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5931 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 5932 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 5936 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5938 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 5939 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 5943 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5945 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 5946 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 5950 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5952 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 5953 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 5957 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5959 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 5960 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 5964 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5972 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(int *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 5973 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 5977 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5979 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 5980 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 5984 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5986 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 5987 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 5991 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 5993 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 5994 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 5998 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6000 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6001 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6005 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6007 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6008 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6012 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6014 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6015 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6019 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6021 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6022 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6026 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6101 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(float *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6102 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6106 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6108 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6109 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6113 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6115 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6116 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6120 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6122 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6123 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6127 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6135 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(char *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6136 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6145 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6146 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(signed char *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6147 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6151 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6153 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(char1 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6154 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6158 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6160 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(char2 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6161 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6165 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6167 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(char4 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6168 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6172 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6174 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(unsigned char *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6175 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6179 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6181 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(uchar1 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6182 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6186 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6188 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(uchar2 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6189 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6193 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6195 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(uchar4 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6196 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6200 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6208 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(short *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6209 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6213 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6215 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(short1 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6216 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6220 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6222 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(short2 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6223 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6227 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6229 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(short4 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6230 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6234 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6236 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(unsigned short *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6237 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6241 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6243 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(ushort1 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6244 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6248 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6250 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(ushort2 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6251 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6255 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6257 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(ushort4 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6258 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6262 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6270 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(int *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6271 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6275 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6277 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(int1 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6278 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6282 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6284 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(int2 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6285 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6289 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6291 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(int4 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6292 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6296 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6298 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(unsigned *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6299 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6303 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6305 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(uint1 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6306 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6310 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6312 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(uint2 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6313 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6317 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6319 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(uint4 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6320 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6324 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6399 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(float *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6400 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6404 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6406 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(float1 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6407 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6411 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6413 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(float2 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6414 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6418 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6420 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(float4 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6421 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6425 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6433 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(char *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6434 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6443 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6444 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(signed char *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6445 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6449 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6451 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(char1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6452 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6456 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6458 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(char2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6459 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6463 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6465 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(char4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6466 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6470 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6472 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6473 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6477 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6479 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6480 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6484 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6486 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6487 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6491 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6493 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6494 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6498 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6506 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(short *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6507 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6511 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6513 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(short1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6514 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6518 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6520 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(short2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6521 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6525 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6527 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(short4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6528 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6532 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6534 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6535 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6539 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6541 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6542 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6546 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6548 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6549 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6553 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6555 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6556 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6560 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6568 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(int *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6569 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6573 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6575 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(int1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6576 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6580 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6582 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(int2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6583 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6587 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6589 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(int4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6590 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6594 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6596 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6597 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6601 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6603 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6604 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6608 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6610 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6611 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6615 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6617 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6618 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6622 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6697 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(float *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6698 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6702 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6704 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(float1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6705 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6709 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6711 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(float2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6712 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6716 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 6718 "/usr/include/texture_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(float4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6719 "/usr/include/texture_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6723 "/usr/include/texture_indirect_functions.hpp" 3
::exit(___);}
# 77 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_i8_clamp(char *, unsigned long long, int); }
# 78 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_i16_clamp(short *, unsigned long long, int); }
# 79 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_i32_clamp(int *, unsigned long long, int); }
# 80 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_i64_clamp(long long *, unsigned long long, int); }
# 81 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_v2i8_clamp(char *, char *, unsigned long long, int); }
# 82 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_v2i16_clamp(short *, short *, unsigned long long, int); }
# 83 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_v2i32_clamp(int *, int *, unsigned long long, int); }
# 84 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_v2i64_clamp(long long *, long long *, unsigned long long, int); }
# 85 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_v4i8_clamp(char *, char *, char *, char *, unsigned long long, int); }
# 86 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_v4i16_clamp(short *, short *, short *, short *, unsigned long long, int); }
# 87 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_v4i32_clamp(int *, int *, int *, int *, unsigned long long, int); }
# 88 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_array_i8_clamp(char *, unsigned long long, int, int); }
# 89 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_array_i16_clamp(short *, unsigned long long, int, int); }
# 90 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_array_i32_clamp(int *, unsigned long long, int, int); }
# 91 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_array_i64_clamp(long long *, unsigned long long, int, int); }
# 92 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_array_v2i8_clamp(char *, char *, unsigned long long, int, int); }
# 93 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_array_v2i16_clamp(short *, short *, unsigned long long, int, int); }
# 94 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_array_v2i32_clamp(int *, int *, unsigned long long, int, int); }
# 95 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_array_v2i64_clamp(long long *, long long *, unsigned long long, int, int); }
# 96 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_array_v4i8_clamp(char *, char *, char *, char *, unsigned long long, int, int); }
# 97 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_array_v4i16_clamp(short *, short *, short *, short *, unsigned long long, int, int); }
# 98 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_array_v4i32_clamp(int *, int *, int *, int *, unsigned long long, int, int); }
# 99 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_i8_clamp(char *, unsigned long long, int, int); }
# 100 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_i16_clamp(short *, unsigned long long, int, int); }
# 101 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_i32_clamp(int *, unsigned long long, int, int); }
# 102 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_i64_clamp(long long *, unsigned long long, int, int); }
# 103 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_v2i8_clamp(char *, char *, unsigned long long, int, int); }
# 104 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_v2i16_clamp(short *, short *, unsigned long long, int, int); }
# 105 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_v2i32_clamp(int *, int *, unsigned long long, int, int); }
# 106 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_v2i64_clamp(long long *, long long *, unsigned long long, int, int); }
# 107 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_v4i8_clamp(char *, char *, char *, char *, unsigned long long, int, int); }
# 108 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_v4i16_clamp(short *, short *, short *, short *, unsigned long long, int, int); }
# 109 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_v4i32_clamp(int *, int *, int *, int *, unsigned long long, int, int); }
# 110 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_array_i8_clamp(char *, unsigned long long, int, int, int); }
# 111 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_array_i16_clamp(short *, unsigned long long, int, int, int); }
# 112 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_array_i32_clamp(int *, unsigned long long, int, int, int); }
# 113 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_array_i64_clamp(long long *, unsigned long long, int, int, int); }
# 114 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_array_v2i8_clamp(char *, char *, unsigned long long, int, int, int); }
# 115 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_array_v2i16_clamp(short *, short *, unsigned long long, int, int, int); }
# 116 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_array_v2i32_clamp(int *, int *, unsigned long long, int, int, int); }
# 117 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_array_v2i64_clamp(long long *, long long *, unsigned long long, int, int, int); }
# 118 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_array_v4i8_clamp(char *, char *, char *, char *, unsigned long long, int, int, int); }
# 119 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_array_v4i16_clamp(short *, short *, short *, short *, unsigned long long, int, int, int); }
# 120 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_array_v4i32_clamp(int *, int *, int *, int *, unsigned long long, int, int, int); }
# 121 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_3d_i8_clamp(char *, unsigned long long, int, int, int); }
# 122 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_3d_i16_clamp(short *, unsigned long long, int, int, int); }
# 123 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_3d_i32_clamp(int *, unsigned long long, int, int, int); }
# 124 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_3d_i64_clamp(long long *, unsigned long long, int, int, int); }
# 125 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_3d_v2i8_clamp(char *, char *, unsigned long long, int, int, int); }
# 126 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_3d_v2i16_clamp(short *, short *, unsigned long long, int, int, int); }
# 127 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_3d_v2i32_clamp(int *, int *, unsigned long long, int, int, int); }
# 128 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_3d_v2i64_clamp(long long *, long long *, unsigned long long, int, int, int); }
# 129 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_3d_v4i8_clamp(char *, char *, char *, char *, unsigned long long, int, int, int); }
# 130 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_3d_v4i16_clamp(short *, short *, short *, short *, unsigned long long, int, int, int); }
# 131 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_3d_v4i32_clamp(int *, int *, int *, int *, unsigned long long, int, int, int); }
# 132 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_i8_trap(char *, unsigned long long, int); }
# 133 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_i16_trap(short *, unsigned long long, int); }
# 134 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_i32_trap(int *, unsigned long long, int); }
# 135 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_i64_trap(long long *, unsigned long long, int); }
# 136 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_v2i8_trap(char *, char *, unsigned long long, int); }
# 137 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_v2i16_trap(short *, short *, unsigned long long, int); }
# 138 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_v2i32_trap(int *, int *, unsigned long long, int); }
# 139 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_v2i64_trap(long long *, long long *, unsigned long long, int); }
# 140 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_v4i8_trap(char *, char *, char *, char *, unsigned long long, int); }
# 141 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_v4i16_trap(short *, short *, short *, short *, unsigned long long, int); }
# 142 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_v4i32_trap(int *, int *, int *, int *, unsigned long long, int); }
# 143 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_array_i8_trap(char *, unsigned long long, int, int); }
# 144 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_array_i16_trap(short *, unsigned long long, int, int); }
# 145 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_array_i32_trap(int *, unsigned long long, int, int); }
# 146 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_array_i64_trap(long long *, unsigned long long, int, int); }
# 147 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_array_v2i8_trap(char *, char *, unsigned long long, int, int); }
# 148 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_array_v2i16_trap(short *, short *, unsigned long long, int, int); }
# 149 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_array_v2i32_trap(int *, int *, unsigned long long, int, int); }
# 150 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_array_v2i64_trap(long long *, long long *, unsigned long long, int, int); }
# 151 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_array_v4i8_trap(char *, char *, char *, char *, unsigned long long, int, int); }
# 152 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_array_v4i16_trap(short *, short *, short *, short *, unsigned long long, int, int); }
# 153 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_array_v4i32_trap(int *, int *, int *, int *, unsigned long long, int, int); }
# 154 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_i8_trap(char *, unsigned long long, int, int); }
# 155 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_i16_trap(short *, unsigned long long, int, int); }
# 156 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_i32_trap(int *, unsigned long long, int, int); }
# 157 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_i64_trap(long long *, unsigned long long, int, int); }
# 158 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_v2i8_trap(char *, char *, unsigned long long, int, int); }
# 159 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_v2i16_trap(short *, short *, unsigned long long, int, int); }
# 160 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_v2i32_trap(int *, int *, unsigned long long, int, int); }
# 161 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_v2i64_trap(long long *, long long *, unsigned long long, int, int); }
# 162 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_v4i8_trap(char *, char *, char *, char *, unsigned long long, int, int); }
# 163 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_v4i16_trap(short *, short *, short *, short *, unsigned long long, int, int); }
# 164 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_v4i32_trap(int *, int *, int *, int *, unsigned long long, int, int); }
# 165 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_array_i8_trap(char *, unsigned long long, int, int, int); }
# 166 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_array_i16_trap(short *, unsigned long long, int, int, int); }
# 167 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_array_i32_trap(int *, unsigned long long, int, int, int); }
# 168 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_array_i64_trap(long long *, unsigned long long, int, int, int); }
# 169 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_array_v2i8_trap(char *, char *, unsigned long long, int, int, int); }
# 170 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_array_v2i16_trap(short *, short *, unsigned long long, int, int, int); }
# 171 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_array_v2i32_trap(int *, int *, unsigned long long, int, int, int); }
# 172 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_array_v2i64_trap(long long *, long long *, unsigned long long, int, int, int); }
# 173 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_array_v4i8_trap(char *, char *, char *, char *, unsigned long long, int, int, int); }
# 174 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_array_v4i16_trap(short *, short *, short *, short *, unsigned long long, int, int, int); }
# 175 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_array_v4i32_trap(int *, int *, int *, int *, unsigned long long, int, int, int); }
# 176 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_3d_i8_trap(char *, unsigned long long, int, int, int); }
# 177 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_3d_i16_trap(short *, unsigned long long, int, int, int); }
# 178 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_3d_i32_trap(int *, unsigned long long, int, int, int); }
# 179 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_3d_i64_trap(long long *, unsigned long long, int, int, int); }
# 180 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_3d_v2i8_trap(char *, char *, unsigned long long, int, int, int); }
# 181 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_3d_v2i16_trap(short *, short *, unsigned long long, int, int, int); }
# 182 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_3d_v2i32_trap(int *, int *, unsigned long long, int, int, int); }
# 183 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_3d_v2i64_trap(long long *, long long *, unsigned long long, int, int, int); }
# 184 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_3d_v4i8_trap(char *, char *, char *, char *, unsigned long long, int, int, int); }
# 185 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_3d_v4i16_trap(short *, short *, short *, short *, unsigned long long, int, int, int); }
# 186 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_3d_v4i32_trap(int *, int *, int *, int *, unsigned long long, int, int, int); }
# 187 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_i8_zero(char *, unsigned long long, int); }
# 188 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_i16_zero(short *, unsigned long long, int); }
# 189 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_i32_zero(int *, unsigned long long, int); }
# 190 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_i64_zero(long long *, unsigned long long, int); }
# 191 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_v2i8_zero(char *, char *, unsigned long long, int); }
# 192 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_v2i16_zero(short *, short *, unsigned long long, int); }
# 193 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_v2i32_zero(int *, int *, unsigned long long, int); }
# 194 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_v2i64_zero(long long *, long long *, unsigned long long, int); }
# 195 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_v4i8_zero(char *, char *, char *, char *, unsigned long long, int); }
# 196 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_v4i16_zero(short *, short *, short *, short *, unsigned long long, int); }
# 197 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_v4i32_zero(int *, int *, int *, int *, unsigned long long, int); }
# 198 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_array_i8_zero(char *, unsigned long long, int, int); }
# 199 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_array_i16_zero(short *, unsigned long long, int, int); }
# 200 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_array_i32_zero(int *, unsigned long long, int, int); }
# 201 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_array_i64_zero(long long *, unsigned long long, int, int); }
# 202 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_array_v2i8_zero(char *, char *, unsigned long long, int, int); }
# 203 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_array_v2i16_zero(short *, short *, unsigned long long, int, int); }
# 204 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_array_v2i32_zero(int *, int *, unsigned long long, int, int); }
# 205 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_array_v2i64_zero(long long *, long long *, unsigned long long, int, int); }
# 206 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_array_v4i8_zero(char *, char *, char *, char *, unsigned long long, int, int); }
# 207 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_array_v4i16_zero(short *, short *, short *, short *, unsigned long long, int, int); }
# 208 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_1d_array_v4i32_zero(int *, int *, int *, int *, unsigned long long, int, int); }
# 209 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_i8_zero(char *, unsigned long long, int, int); }
# 210 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_i16_zero(short *, unsigned long long, int, int); }
# 211 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_i32_zero(int *, unsigned long long, int, int); }
# 212 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_i64_zero(long long *, unsigned long long, int, int); }
# 213 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_v2i8_zero(char *, char *, unsigned long long, int, int); }
# 214 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_v2i16_zero(short *, short *, unsigned long long, int, int); }
# 215 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_v2i32_zero(int *, int *, unsigned long long, int, int); }
# 216 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_v2i64_zero(long long *, long long *, unsigned long long, int, int); }
# 217 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_v4i8_zero(char *, char *, char *, char *, unsigned long long, int, int); }
# 218 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_v4i16_zero(short *, short *, short *, short *, unsigned long long, int, int); }
# 219 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_v4i32_zero(int *, int *, int *, int *, unsigned long long, int, int); }
# 220 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_array_i8_zero(char *, unsigned long long, int, int, int); }
# 221 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_array_i16_zero(short *, unsigned long long, int, int, int); }
# 222 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_array_i32_zero(int *, unsigned long long, int, int, int); }
# 223 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_array_i64_zero(long long *, unsigned long long, int, int, int); }
# 224 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_array_v2i8_zero(char *, char *, unsigned long long, int, int, int); }
# 225 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_array_v2i16_zero(short *, short *, unsigned long long, int, int, int); }
# 226 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_array_v2i32_zero(int *, int *, unsigned long long, int, int, int); }
# 227 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_array_v2i64_zero(long long *, long long *, unsigned long long, int, int, int); }
# 228 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_array_v4i8_zero(char *, char *, char *, char *, unsigned long long, int, int, int); }
# 229 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_array_v4i16_zero(short *, short *, short *, short *, unsigned long long, int, int, int); }
# 230 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_2d_array_v4i32_zero(int *, int *, int *, int *, unsigned long long, int, int, int); }
# 231 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_3d_i8_zero(char *, unsigned long long, int, int, int); }
# 232 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_3d_i16_zero(short *, unsigned long long, int, int, int); }
# 233 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_3d_i32_zero(int *, unsigned long long, int, int, int); }
# 234 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_3d_i64_zero(long long *, unsigned long long, int, int, int); }
# 235 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_3d_v2i8_zero(char *, char *, unsigned long long, int, int, int); }
# 236 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_3d_v2i16_zero(short *, short *, unsigned long long, int, int, int); }
# 237 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_3d_v2i32_zero(int *, int *, unsigned long long, int, int, int); }
# 238 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_3d_v2i64_zero(long long *, long long *, unsigned long long, int, int, int); }
# 239 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_3d_v4i8_zero(char *, char *, char *, char *, unsigned long long, int, int, int); }
# 240 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_3d_v4i16_zero(short *, short *, short *, short *, unsigned long long, int, int, int); }
# 241 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __suld_3d_v4i32_zero(int *, int *, int *, int *, unsigned long long, int, int, int); }
# 243 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_i8_clamp(cudaSurfaceObject_t, int, unsigned char); }
# 244 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_i16_clamp(cudaSurfaceObject_t, int, unsigned short); }
# 245 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_i32_clamp(cudaSurfaceObject_t, int, unsigned); }
# 246 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_i64_clamp(cudaSurfaceObject_t, int, unsigned long long); }
# 247 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_v2i8_clamp(cudaSurfaceObject_t, int, uchar2); }
# 248 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_v2i16_clamp(cudaSurfaceObject_t, int, ushort2); }
# 249 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_v2i32_clamp(cudaSurfaceObject_t, int, uint2); }
# 250 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_v2i64_clamp(cudaSurfaceObject_t, int, ulonglong2); }
# 251 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_v4i8_clamp(cudaSurfaceObject_t, int, uchar4); }
# 252 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_v4i16_clamp(cudaSurfaceObject_t, int, ushort4); }
# 253 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_v4i32_clamp(cudaSurfaceObject_t, int, uint4); }
# 254 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_array_i8_clamp(cudaSurfaceObject_t, int, int, unsigned char); }
# 255 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_array_i16_clamp(cudaSurfaceObject_t, int, int, unsigned short); }
# 256 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_array_i32_clamp(cudaSurfaceObject_t, int, int, unsigned); }
# 257 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_array_i64_clamp(cudaSurfaceObject_t, int, int, unsigned long long); }
# 258 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_array_v2i8_clamp(cudaSurfaceObject_t, int, int, uchar2); }
# 259 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_array_v2i16_clamp(cudaSurfaceObject_t, int, int, ushort2); }
# 260 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_array_v2i32_clamp(cudaSurfaceObject_t, int, int, uint2); }
# 261 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_array_v2i64_clamp(cudaSurfaceObject_t, int, int, ulonglong2); }
# 262 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_array_v4i8_clamp(cudaSurfaceObject_t, int, int, uchar4); }
# 263 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_array_v4i16_clamp(cudaSurfaceObject_t, int, int, ushort4); }
# 264 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_array_v4i32_clamp(cudaSurfaceObject_t, int, int, uint4); }
# 265 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_i8_clamp(cudaSurfaceObject_t, int, int, unsigned char); }
# 266 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_i16_clamp(cudaSurfaceObject_t, int, int, unsigned short); }
# 267 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_i32_clamp(cudaSurfaceObject_t, int, int, unsigned); }
# 268 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_i64_clamp(cudaSurfaceObject_t, int, int, unsigned long long); }
# 269 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_v2i8_clamp(cudaSurfaceObject_t, int, int, uchar2); }
# 270 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_v2i16_clamp(cudaSurfaceObject_t, int, int, ushort2); }
# 271 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_v2i32_clamp(cudaSurfaceObject_t, int, int, uint2); }
# 272 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_v2i64_clamp(cudaSurfaceObject_t, int, int, ulonglong2); }
# 273 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_v4i8_clamp(cudaSurfaceObject_t, int, int, uchar4); }
# 274 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_v4i16_clamp(cudaSurfaceObject_t, int, int, ushort4); }
# 275 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_v4i32_clamp(cudaSurfaceObject_t, int, int, uint4); }
# 276 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_array_i8_clamp(cudaSurfaceObject_t, int, int, int, unsigned char); }
# 277 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_array_i16_clamp(cudaSurfaceObject_t, int, int, int, unsigned short); }
# 278 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_array_i32_clamp(cudaSurfaceObject_t, int, int, int, unsigned); }
# 279 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_array_i64_clamp(cudaSurfaceObject_t, int, int, int, unsigned long long); }
# 280 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_array_v2i8_clamp(cudaSurfaceObject_t, int, int, int, uchar2); }
# 281 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_array_v2i16_clamp(cudaSurfaceObject_t, int, int, int, ushort2); }
# 282 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_array_v2i32_clamp(cudaSurfaceObject_t, int, int, int, uint2); }
# 283 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_array_v2i64_clamp(cudaSurfaceObject_t, int, int, int, ulonglong2); }
# 284 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_array_v4i8_clamp(cudaSurfaceObject_t, int, int, int, uchar4); }
# 285 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_array_v4i16_clamp(cudaSurfaceObject_t, int, int, int, ushort4); }
# 286 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_array_v4i32_clamp(cudaSurfaceObject_t, int, int, int, uint4); }
# 287 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_3d_i8_clamp(cudaSurfaceObject_t, int, int, int, unsigned char); }
# 288 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_3d_i16_clamp(cudaSurfaceObject_t, int, int, int, unsigned short); }
# 289 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_3d_i32_clamp(cudaSurfaceObject_t, int, int, int, unsigned); }
# 290 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_3d_i64_clamp(cudaSurfaceObject_t, int, int, int, unsigned long long); }
# 291 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_3d_v2i8_clamp(cudaSurfaceObject_t, int, int, int, uchar2); }
# 292 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_3d_v2i16_clamp(cudaSurfaceObject_t, int, int, int, ushort2); }
# 293 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_3d_v2i32_clamp(cudaSurfaceObject_t, int, int, int, uint2); }
# 294 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_3d_v2i64_clamp(cudaSurfaceObject_t, int, int, int, ulonglong2); }
# 295 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_3d_v4i8_clamp(cudaSurfaceObject_t, int, int, int, uchar4); }
# 296 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_3d_v4i16_clamp(cudaSurfaceObject_t, int, int, int, ushort4); }
# 297 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_3d_v4i32_clamp(cudaSurfaceObject_t, int, int, int, uint4); }
# 298 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_i8_trap(cudaSurfaceObject_t, int, unsigned char); }
# 299 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_i16_trap(cudaSurfaceObject_t, int, unsigned short); }
# 300 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_i32_trap(cudaSurfaceObject_t, int, unsigned); }
# 301 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_i64_trap(cudaSurfaceObject_t, int, unsigned long long); }
# 302 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_v2i8_trap(cudaSurfaceObject_t, int, uchar2); }
# 303 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_v2i16_trap(cudaSurfaceObject_t, int, ushort2); }
# 304 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_v2i32_trap(cudaSurfaceObject_t, int, uint2); }
# 305 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_v2i64_trap(cudaSurfaceObject_t, int, ulonglong2); }
# 306 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_v4i8_trap(cudaSurfaceObject_t, int, uchar4); }
# 307 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_v4i16_trap(cudaSurfaceObject_t, int, ushort4); }
# 308 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_v4i32_trap(cudaSurfaceObject_t, int, uint4); }
# 309 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_array_i8_trap(cudaSurfaceObject_t, int, int, unsigned char); }
# 310 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_array_i16_trap(cudaSurfaceObject_t, int, int, unsigned short); }
# 311 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_array_i32_trap(cudaSurfaceObject_t, int, int, unsigned); }
# 312 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_array_i64_trap(cudaSurfaceObject_t, int, int, unsigned long long); }
# 313 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_array_v2i8_trap(cudaSurfaceObject_t, int, int, uchar2); }
# 314 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_array_v2i16_trap(cudaSurfaceObject_t, int, int, ushort2); }
# 315 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_array_v2i32_trap(cudaSurfaceObject_t, int, int, uint2); }
# 316 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_array_v2i64_trap(cudaSurfaceObject_t, int, int, ulonglong2); }
# 317 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_array_v4i8_trap(cudaSurfaceObject_t, int, int, uchar4); }
# 318 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_array_v4i16_trap(cudaSurfaceObject_t, int, int, ushort4); }
# 319 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_array_v4i32_trap(cudaSurfaceObject_t, int, int, uint4); }
# 320 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_i8_trap(cudaSurfaceObject_t, int, int, unsigned char); }
# 321 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_i16_trap(cudaSurfaceObject_t, int, int, unsigned short); }
# 322 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_i32_trap(cudaSurfaceObject_t, int, int, unsigned); }
# 323 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_i64_trap(cudaSurfaceObject_t, int, int, unsigned long long); }
# 324 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_v2i8_trap(cudaSurfaceObject_t, int, int, uchar2); }
# 325 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_v2i16_trap(cudaSurfaceObject_t, int, int, ushort2); }
# 326 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_v2i32_trap(cudaSurfaceObject_t, int, int, uint2); }
# 327 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_v2i64_trap(cudaSurfaceObject_t, int, int, ulonglong2); }
# 328 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_v4i8_trap(cudaSurfaceObject_t, int, int, uchar4); }
# 329 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_v4i16_trap(cudaSurfaceObject_t, int, int, ushort4); }
# 330 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_v4i32_trap(cudaSurfaceObject_t, int, int, uint4); }
# 331 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_array_i8_trap(cudaSurfaceObject_t, int, int, int, unsigned char); }
# 332 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_array_i16_trap(cudaSurfaceObject_t, int, int, int, unsigned short); }
# 333 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_array_i32_trap(cudaSurfaceObject_t, int, int, int, unsigned); }
# 334 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_array_i64_trap(cudaSurfaceObject_t, int, int, int, unsigned long long); }
# 335 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_array_v2i8_trap(cudaSurfaceObject_t, int, int, int, uchar2); }
# 336 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_array_v2i16_trap(cudaSurfaceObject_t, int, int, int, ushort2); }
# 337 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_array_v2i32_trap(cudaSurfaceObject_t, int, int, int, uint2); }
# 338 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_array_v2i64_trap(cudaSurfaceObject_t, int, int, int, ulonglong2); }
# 339 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_array_v4i8_trap(cudaSurfaceObject_t, int, int, int, uchar4); }
# 340 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_array_v4i16_trap(cudaSurfaceObject_t, int, int, int, ushort4); }
# 341 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_array_v4i32_trap(cudaSurfaceObject_t, int, int, int, uint4); }
# 342 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_3d_i8_trap(cudaSurfaceObject_t, int, int, int, unsigned char); }
# 343 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_3d_i16_trap(cudaSurfaceObject_t, int, int, int, unsigned short); }
# 344 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_3d_i32_trap(cudaSurfaceObject_t, int, int, int, unsigned); }
# 345 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_3d_i64_trap(cudaSurfaceObject_t, int, int, int, unsigned long long); }
# 346 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_3d_v2i8_trap(cudaSurfaceObject_t, int, int, int, uchar2); }
# 347 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_3d_v2i16_trap(cudaSurfaceObject_t, int, int, int, ushort2); }
# 348 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_3d_v2i32_trap(cudaSurfaceObject_t, int, int, int, uint2); }
# 349 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_3d_v2i64_trap(cudaSurfaceObject_t, int, int, int, ulonglong2); }
# 350 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_3d_v4i8_trap(cudaSurfaceObject_t, int, int, int, uchar4); }
# 351 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_3d_v4i16_trap(cudaSurfaceObject_t, int, int, int, ushort4); }
# 352 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_3d_v4i32_trap(cudaSurfaceObject_t, int, int, int, uint4); }
# 353 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_i8_zero(cudaSurfaceObject_t, int, unsigned char); }
# 354 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_i16_zero(cudaSurfaceObject_t, int, unsigned short); }
# 355 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_i32_zero(cudaSurfaceObject_t, int, unsigned); }
# 356 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_i64_zero(cudaSurfaceObject_t, int, unsigned long long); }
# 357 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_v2i8_zero(cudaSurfaceObject_t, int, uchar2); }
# 358 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_v2i16_zero(cudaSurfaceObject_t, int, ushort2); }
# 359 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_v2i32_zero(cudaSurfaceObject_t, int, uint2); }
# 360 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_v2i64_zero(cudaSurfaceObject_t, int, ulonglong2); }
# 361 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_v4i8_zero(cudaSurfaceObject_t, int, uchar4); }
# 362 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_v4i16_zero(cudaSurfaceObject_t, int, ushort4); }
# 363 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_v4i32_zero(cudaSurfaceObject_t, int, uint4); }
# 364 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_array_i8_zero(cudaSurfaceObject_t, int, int, unsigned char); }
# 365 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_array_i16_zero(cudaSurfaceObject_t, int, int, unsigned short); }
# 366 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_array_i32_zero(cudaSurfaceObject_t, int, int, unsigned); }
# 367 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_array_i64_zero(cudaSurfaceObject_t, int, int, unsigned long long); }
# 368 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_array_v2i8_zero(cudaSurfaceObject_t, int, int, uchar2); }
# 369 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_array_v2i16_zero(cudaSurfaceObject_t, int, int, ushort2); }
# 370 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_array_v2i32_zero(cudaSurfaceObject_t, int, int, uint2); }
# 371 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_array_v2i64_zero(cudaSurfaceObject_t, int, int, ulonglong2); }
# 372 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_array_v4i8_zero(cudaSurfaceObject_t, int, int, uchar4); }
# 373 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_array_v4i16_zero(cudaSurfaceObject_t, int, int, ushort4); }
# 374 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_1d_array_v4i32_zero(cudaSurfaceObject_t, int, int, uint4); }
# 375 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_i8_zero(cudaSurfaceObject_t, int, int, unsigned char); }
# 376 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_i16_zero(cudaSurfaceObject_t, int, int, unsigned short); }
# 377 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_i32_zero(cudaSurfaceObject_t, int, int, unsigned); }
# 378 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_i64_zero(cudaSurfaceObject_t, int, int, unsigned long long); }
# 379 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_v2i8_zero(cudaSurfaceObject_t, int, int, uchar2); }
# 380 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_v2i16_zero(cudaSurfaceObject_t, int, int, ushort2); }
# 381 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_v2i32_zero(cudaSurfaceObject_t, int, int, uint2); }
# 382 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_v2i64_zero(cudaSurfaceObject_t, int, int, ulonglong2); }
# 383 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_v4i8_zero(cudaSurfaceObject_t, int, int, uchar4); }
# 384 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_v4i16_zero(cudaSurfaceObject_t, int, int, ushort4); }
# 385 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_v4i32_zero(cudaSurfaceObject_t, int, int, uint4); }
# 386 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_array_i8_zero(cudaSurfaceObject_t, int, int, int, unsigned char); }
# 387 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_array_i16_zero(cudaSurfaceObject_t, int, int, int, unsigned short); }
# 388 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_array_i32_zero(cudaSurfaceObject_t, int, int, int, unsigned); }
# 389 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_array_i64_zero(cudaSurfaceObject_t, int, int, int, unsigned long long); }
# 390 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_array_v2i8_zero(cudaSurfaceObject_t, int, int, int, uchar2); }
# 391 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_array_v2i16_zero(cudaSurfaceObject_t, int, int, int, ushort2); }
# 392 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_array_v2i32_zero(cudaSurfaceObject_t, int, int, int, uint2); }
# 393 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_array_v2i64_zero(cudaSurfaceObject_t, int, int, int, ulonglong2); }
# 394 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_array_v4i8_zero(cudaSurfaceObject_t, int, int, int, uchar4); }
# 395 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_array_v4i16_zero(cudaSurfaceObject_t, int, int, int, ushort4); }
# 396 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_2d_array_v4i32_zero(cudaSurfaceObject_t, int, int, int, uint4); }
# 397 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_3d_i8_zero(cudaSurfaceObject_t, int, int, int, unsigned char); }
# 398 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_3d_i16_zero(cudaSurfaceObject_t, int, int, int, unsigned short); }
# 399 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_3d_i32_zero(cudaSurfaceObject_t, int, int, int, unsigned); }
# 400 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_3d_i64_zero(cudaSurfaceObject_t, int, int, int, unsigned long long); }
# 401 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_3d_v2i8_zero(cudaSurfaceObject_t, int, int, int, uchar2); }
# 402 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_3d_v2i16_zero(cudaSurfaceObject_t, int, int, int, ushort2); }
# 403 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_3d_v2i32_zero(cudaSurfaceObject_t, int, int, int, uint2); }
# 404 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_3d_v2i64_zero(cudaSurfaceObject_t, int, int, int, ulonglong2); }
# 405 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_3d_v4i8_zero(cudaSurfaceObject_t, int, int, int, uchar4); }
# 406 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_3d_v4i16_zero(cudaSurfaceObject_t, int, int, int, ushort4); }
# 407 "/usr/include/surface_indirect_functions.h" 3
extern "C" { __attribute__((unused)) void __sust_b_3d_v4i32_zero(cudaSurfaceObject_t, int, int, int, uint4); }
# 410 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(char * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 412 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(signed char * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 414 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(char1 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 416 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(unsigned char * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 418 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(uchar1 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 420 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(short * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 422 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(short1 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 424 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(unsigned short * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 426 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(ushort1 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 428 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(int * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 430 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(int1 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 432 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(unsigned * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 434 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(uint1 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 436 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(long long * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 438 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(longlong1 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 440 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(unsigned long long * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 442 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(ulonglong1 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 444 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(float * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 446 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(float1 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 454 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(char2 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 456 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(uchar2 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 458 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(short2 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 460 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(ushort2 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 462 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(int2 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 464 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(uint2 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 466 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(longlong2 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 468 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(ulonglong2 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 470 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(float2 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 478 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(char4 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 480 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(uchar4 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 482 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(short4 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 484 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(ushort4 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 486 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(int4 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 488 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(uint4 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 490 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(float4 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 498 "/usr/include/surface_indirect_functions.h" 3
template< class T>
# 499 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline T surf1Dread(cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap)
# 500 "/usr/include/surface_indirect_functions.h" 3
{int volatile ___ = 1;(void)surfObject;(void)x;(void)boundaryMode;
# 504 "/usr/include/surface_indirect_functions.h" 3
::exit(___);}
# 512 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(char * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 514 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(signed char * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 516 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(char1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 518 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(unsigned char * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 520 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(uchar1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 522 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(short * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 524 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(short1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 526 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(unsigned short * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 528 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(ushort1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 530 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(int * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 532 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(int1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 534 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(unsigned * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 536 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(uint1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 538 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(long long * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 540 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(longlong1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 542 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(unsigned long long * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 544 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(ulonglong1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 546 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(float * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 548 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(float1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 556 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(char2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 558 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(uchar2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 560 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(short2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 562 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(ushort2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 564 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(int2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 566 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(uint2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 568 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(longlong2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 570 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(ulonglong2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 572 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(float2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 580 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(char4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 582 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(uchar4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 584 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(short4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 586 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(ushort4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 588 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(int4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 590 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(uint4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 592 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(float4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 600 "/usr/include/surface_indirect_functions.h" 3
template< class T>
# 601 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline T surf2Dread(cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap)
# 602 "/usr/include/surface_indirect_functions.h" 3
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 606 "/usr/include/surface_indirect_functions.h" 3
::exit(___);}
# 614 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(char * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 616 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(signed char * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 618 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(char1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 620 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(unsigned char * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 622 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(uchar1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 624 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(short * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 626 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(short1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 628 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(unsigned short * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 630 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(ushort1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 632 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(int * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 634 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(int1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 636 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(unsigned * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 638 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(uint1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 640 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(long long * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 642 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(longlong1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 644 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(unsigned long long * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 646 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(ulonglong1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 648 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(float * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 650 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(float1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 658 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(char2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 660 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(uchar2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 662 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(short2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 664 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(ushort2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 666 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(int2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 668 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(uint2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 670 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(longlong2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 672 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(ulonglong2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 674 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(float2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 682 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(char4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 684 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(uchar4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 686 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(short4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 688 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(ushort4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 690 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(int4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 692 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(uint4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 694 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(float4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 702 "/usr/include/surface_indirect_functions.h" 3
template< class T>
# 703 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline T surf3Dread(cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap)
# 704 "/usr/include/surface_indirect_functions.h" 3
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 708 "/usr/include/surface_indirect_functions.h" 3
::exit(___);}
# 716 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(char * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 718 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(signed char * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 720 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(char1 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 722 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(unsigned char * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 724 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(uchar1 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 726 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(short * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 728 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(short1 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 730 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(unsigned short * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 732 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(ushort1 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 734 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(int * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 736 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(int1 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 738 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(unsigned * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 740 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(uint1 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 742 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(long long * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 744 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(longlong1 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 746 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(unsigned long long * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 748 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(ulonglong1 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 750 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(float * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 752 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(float1 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 760 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(char2 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 762 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(uchar2 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 764 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(short2 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 766 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(ushort2 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 768 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(int2 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 770 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(uint2 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 772 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(longlong2 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 774 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(ulonglong2 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 776 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(float2 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 784 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(char4 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 786 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(uchar4 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 788 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(short4 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 790 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(ushort4 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 792 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(int4 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 794 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(uint4 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 796 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(float4 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 804 "/usr/include/surface_indirect_functions.h" 3
template< class T>
# 805 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline T surf1DLayeredread(cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap)
# 806 "/usr/include/surface_indirect_functions.h" 3
{int volatile ___ = 1;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 810 "/usr/include/surface_indirect_functions.h" 3
::exit(___);}
# 818 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(char * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 820 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(signed char * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 822 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(char1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 824 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(unsigned char * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 826 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(uchar1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 828 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(short * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 830 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(short1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 832 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(unsigned short * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 834 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(ushort1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 836 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(int * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 838 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(int1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 840 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(unsigned * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 842 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(uint1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 844 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(long long * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 846 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(longlong1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 848 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(unsigned long long * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 850 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(ulonglong1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 852 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(float * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 854 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(float1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 862 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(char2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 864 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(uchar2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 866 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(short2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 868 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(ushort2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 870 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(int2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 872 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(uint2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 874 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(longlong2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 876 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(ulonglong2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 878 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(float2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 886 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(char4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 888 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(uchar4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 890 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(short4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 892 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(ushort4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 894 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(int4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 896 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(uint4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 898 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(float4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 906 "/usr/include/surface_indirect_functions.h" 3
template< class T>
# 907 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline T surf2DLayeredread(cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap)
# 908 "/usr/include/surface_indirect_functions.h" 3
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 912 "/usr/include/surface_indirect_functions.h" 3
::exit(___);}
# 920 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(char * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 922 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(signed char * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 924 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(char1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 926 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(unsigned char * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 928 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(uchar1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 930 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(short * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 932 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(short1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 934 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(unsigned short * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 936 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(ushort1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 938 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(int * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 940 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(int1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 942 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(unsigned * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 944 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(uint1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 946 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(long long * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 948 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(longlong1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 950 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(unsigned long long * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 952 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(ulonglong1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 954 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(float * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 956 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(float1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 964 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(char2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 966 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(uchar2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 968 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(short2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 970 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(ushort2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 972 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(int2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 974 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(uint2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 976 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(longlong2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 978 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(ulonglong2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 980 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(float2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 988 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(char4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 990 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(uchar4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 992 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(short4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 994 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(ushort4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 996 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(int4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 998 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(uint4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1000 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(float4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1008 "/usr/include/surface_indirect_functions.h" 3
template< class T>
# 1009 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline T surfCubemapread(cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap)
# 1010 "/usr/include/surface_indirect_functions.h" 3
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 1014 "/usr/include/surface_indirect_functions.h" 3
::exit(___);}
# 1022 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(char * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1024 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(signed char * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1026 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(char1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1028 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(unsigned char * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1030 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(uchar1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1032 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(short * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1034 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(short1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1036 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(unsigned short * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1038 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(ushort1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1040 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(int * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1042 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(int1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1044 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(unsigned * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1046 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(uint1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1048 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(long long * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1050 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(longlong1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1052 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(unsigned long long * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1054 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(ulonglong1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1056 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(float * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1058 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(float1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1066 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(char2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1068 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(uchar2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1070 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(short2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1072 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(ushort2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1074 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(int2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1076 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(uint2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1078 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(longlong2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1080 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(ulonglong2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1082 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(float2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1090 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(char4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1092 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(uchar4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1094 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(short4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1096 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(ushort4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1098 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(int4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1100 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(uint4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1102 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(float4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1110 "/usr/include/surface_indirect_functions.h" 3
template< class T>
# 1111 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline T surfCubemapLayeredread(cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap)
# 1112 "/usr/include/surface_indirect_functions.h" 3
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 1116 "/usr/include/surface_indirect_functions.h" 3
::exit(___);}
# 1124 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(char data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1126 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(signed char data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1128 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(char1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1130 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1132 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1134 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(short data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1136 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(short1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1138 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1140 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1142 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(int data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1144 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(int1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1146 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1148 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1150 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(long long data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1152 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1154 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(unsigned long long data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1156 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1158 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(float data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1160 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(float1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1168 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(char2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1170 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1172 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(short2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1174 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1176 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(int2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1178 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1180 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1182 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1184 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(float2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1192 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(char4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1194 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1196 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(short4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1198 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1200 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(int4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1202 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1204 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(float4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1212 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(char data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1214 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1216 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1218 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1220 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1222 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(short data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1224 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1226 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1228 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1230 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(int data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1232 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1234 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1236 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1238 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(long long data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1240 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1242 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(unsigned long long data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1244 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1246 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(float data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1248 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1256 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1258 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1260 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1262 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1264 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1266 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1268 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1270 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1272 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1280 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1282 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1284 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1286 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1288 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1290 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1292 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1301 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(char data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1303 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1305 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1307 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1309 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1311 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(short data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1313 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1315 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1317 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1319 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(int data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1321 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1323 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1325 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1327 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(long long data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1329 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1331 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(unsigned long long data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1333 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1335 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(float data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1337 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1345 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1347 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1349 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1351 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1353 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1355 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1357 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1359 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1361 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1369 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1371 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1373 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1375 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1377 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1379 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1381 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1389 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(char data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1391 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1393 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1395 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1397 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1399 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(short data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1401 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1403 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1405 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1407 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(int data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1409 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1411 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1413 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1415 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(long long data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1417 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1419 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(unsigned long long data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1421 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1423 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(float data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1425 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1433 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1435 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1437 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1439 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1441 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1443 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1445 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1447 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1449 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1457 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1459 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1461 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1463 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1465 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1467 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1469 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1477 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(char data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1479 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1481 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1483 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1485 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1487 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(short data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1489 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1491 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1493 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1495 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(int data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1497 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1499 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1501 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1503 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(long long data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1505 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1507 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(unsigned long long data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1509 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1511 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(float data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1513 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1521 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1523 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1525 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1527 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1529 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1531 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1533 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1535 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1537 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1545 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1547 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1549 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1551 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1553 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1555 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1557 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1565 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(char data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1567 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1569 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1571 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1573 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1575 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(short data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1577 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1579 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1581 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1583 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(int data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1585 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1587 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1589 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1591 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(long long data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1593 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1595 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(unsigned long long data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1597 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1599 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(float data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1601 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1609 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1611 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1613 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1615 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1617 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1619 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1621 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1623 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1625 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1633 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1635 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1637 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1639 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1641 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1643 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1645 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1653 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(char data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1655 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1657 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1659 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1661 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1663 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(short data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1665 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1667 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1669 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1671 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(int data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1673 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1675 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1677 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1679 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(long long data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1681 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1683 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(unsigned long long data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1685 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1687 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(float data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1689 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1697 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1699 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1701 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1703 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1705 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1707 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1709 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1711 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1713 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1721 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1723 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1725 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1727 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1729 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1731 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 1733 "/usr/include/surface_indirect_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap);
# 76 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(char *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 77 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 89 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 91 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(signed char *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 92 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 104 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 106 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(char1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 107 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 119 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 121 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(unsigned char *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 122 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 134 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 136 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(uchar1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 137 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 149 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 151 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(short *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 152 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 164 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 166 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(short1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 167 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 179 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 181 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(unsigned short *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 182 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 194 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 196 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(ushort1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 197 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 209 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 211 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(int *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 212 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 224 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 226 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(int1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 227 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 239 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 241 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(unsigned *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 242 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 254 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 256 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(uint1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 257 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 269 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 271 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(long long *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 272 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 284 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 286 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(longlong1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 287 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 299 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 301 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(unsigned long long *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 302 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 314 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 316 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(ulonglong1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 317 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 329 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 331 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(float *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 332 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 344 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 346 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(float1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 347 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 359 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 367 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(char2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 368 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 380 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 382 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(uchar2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 383 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 395 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 397 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(short2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 398 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 410 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 412 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(ushort2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 413 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 425 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 427 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(int2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 428 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 440 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 442 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(uint2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 443 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 455 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 457 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(longlong2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 458 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 470 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 472 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(ulonglong2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 473 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 485 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 487 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(float2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 488 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 500 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 508 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(char4 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 509 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 521 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 523 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(uchar4 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 524 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 536 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 538 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(short4 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 539 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 551 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 553 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(ushort4 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 554 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 566 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 568 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(int4 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 569 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 581 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 583 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(uint4 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 584 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 596 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 598 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(float4 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 599 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 611 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 619 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(char *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 620 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 632 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 634 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(signed char *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 635 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 647 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 649 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(char1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 650 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 662 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 664 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(unsigned char *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 665 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 677 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 679 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(uchar1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 680 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 692 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 694 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(short *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 695 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 707 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 709 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(short1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 710 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 722 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 724 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(unsigned short *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 725 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 737 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 739 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(ushort1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 740 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 752 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 754 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(int *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 755 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 767 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 769 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(int1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 770 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 782 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 784 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(unsigned *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 785 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 797 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 799 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(uint1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 800 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 812 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 814 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(long long *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 815 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 827 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 829 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(longlong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 830 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 842 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 844 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(unsigned long long *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 845 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 857 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 859 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(ulonglong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 860 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 872 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 874 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(float *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 875 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 887 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 889 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(float1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 890 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 902 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 910 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(char2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 911 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 923 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 925 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(uchar2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 926 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 938 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 940 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(short2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 941 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 953 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 955 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(ushort2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 956 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 968 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 970 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(int2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 971 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 983 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 985 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(uint2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 986 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 998 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1000 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(longlong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 1001 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 1013 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1015 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(ulonglong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 1016 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 1028 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1030 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(float2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 1031 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 1043 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1051 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(char4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 1052 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 1064 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1066 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(uchar4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 1067 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 1079 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1081 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(short4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 1082 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 1094 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1096 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(ushort4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 1097 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 1109 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1111 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(int4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 1112 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 1124 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1126 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(uint4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 1127 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 1139 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1141 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(float4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 1142 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 1154 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1162 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 1163 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1175 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1177 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(signed char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 1178 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1190 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1192 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(char1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 1193 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1205 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1207 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(unsigned char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 1208 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1220 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1222 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(uchar1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 1223 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1235 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1237 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(short *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 1238 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1250 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1252 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(short1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 1253 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1265 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1267 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(unsigned short *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 1268 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1280 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1282 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(ushort1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 1283 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1295 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1297 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(int *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 1298 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1310 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1312 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(int1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 1313 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1325 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1327 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(unsigned *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 1328 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1340 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1342 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(uint1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 1343 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1355 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1357 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(long long *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 1358 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1370 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1372 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(longlong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 1373 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1385 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1387 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(unsigned long long *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 1388 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1400 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1402 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(ulonglong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 1403 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1415 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1417 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(float *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 1418 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1430 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1432 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(float1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 1433 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1445 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1453 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(char2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 1454 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1466 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1468 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(uchar2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 1469 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1481 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1483 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(short2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 1484 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1496 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1498 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(ushort2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 1499 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1511 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1513 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(int2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 1514 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1526 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1528 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(uint2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 1529 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1541 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1543 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(longlong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 1544 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1556 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1558 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(ulonglong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 1559 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1571 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1573 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(float2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 1574 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1586 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1594 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(char4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 1595 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1607 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1609 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(uchar4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 1610 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1622 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1624 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(short4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 1625 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1637 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1639 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(ushort4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 1640 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1652 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1654 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(int4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 1655 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1667 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1669 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(uint4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 1670 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1682 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1684 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(float4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 1685 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1697 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1705 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(char *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 1706 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 1718 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1720 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(signed char *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 1721 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 1733 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1735 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(char1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 1736 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 1748 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1750 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(unsigned char *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 1751 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 1763 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1765 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(uchar1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 1766 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 1778 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1780 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(short *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 1781 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 1793 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1795 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(short1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 1796 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 1808 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1810 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(unsigned short *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 1811 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 1823 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1825 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(ushort1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 1826 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 1838 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1840 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(int *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 1841 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 1853 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1855 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(int1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 1856 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 1868 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1870 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(unsigned *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 1871 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 1883 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1885 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(uint1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 1886 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 1898 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1900 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(long long *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 1901 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 1913 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1915 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(longlong1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 1916 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 1928 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1930 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(unsigned long long *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 1931 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 1943 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1945 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(ulonglong1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 1946 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 1958 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1960 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(float *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 1961 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 1973 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1975 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(float1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 1976 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 1988 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 1996 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(char2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 1997 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 2009 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2011 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(uchar2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 2012 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 2024 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2026 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(short2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 2027 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 2039 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2041 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(ushort2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 2042 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 2054 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2056 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(int2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 2057 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 2069 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2071 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(uint2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 2072 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 2084 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2086 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(longlong2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 2087 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 2099 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2101 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(ulonglong2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 2102 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 2114 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2116 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(float2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 2117 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 2129 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2137 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(char4 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 2138 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 2150 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2152 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(uchar4 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 2153 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 2165 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2167 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(short4 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 2168 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 2180 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2182 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(ushort4 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 2183 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 2195 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2197 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(int4 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 2198 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 2210 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2212 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(uint4 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 2213 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 2225 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2227 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(float4 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 2228 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 2240 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2248 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 2249 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2261 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2263 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(signed char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 2264 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2276 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2278 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(char1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 2279 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2291 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2293 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(unsigned char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 2294 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2306 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2308 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(uchar1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 2309 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2321 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2323 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(short *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 2324 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2336 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2338 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(short1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 2339 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2351 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2353 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(unsigned short *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 2354 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2366 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2368 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(ushort1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 2369 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2381 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2383 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(int *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 2384 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2396 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2398 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(int1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 2399 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2411 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2413 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(unsigned *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 2414 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2426 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2428 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(uint1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 2429 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2441 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2443 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(long long *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 2444 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2456 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2458 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(longlong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 2459 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2471 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2473 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(unsigned long long *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 2474 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2486 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2488 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(ulonglong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 2489 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2501 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2503 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(float *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 2504 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2516 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2518 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(float1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 2519 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2531 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2539 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(char2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 2540 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2552 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2554 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(uchar2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 2555 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2567 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2569 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(short2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 2570 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2582 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2584 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(ushort2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 2585 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2597 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2599 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(int2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 2600 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2612 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2614 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(uint2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 2615 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2627 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2629 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(longlong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 2630 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2642 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2644 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(ulonglong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 2645 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2657 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2659 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(float2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 2660 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2672 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2680 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(char4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 2681 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2693 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2695 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(uchar4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 2696 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2708 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2710 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(short4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 2711 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2723 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2725 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(ushort4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 2726 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2738 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2740 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(int4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 2741 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2753 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2755 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(uint4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 2756 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2768 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2770 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(float4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 2771 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2783 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2791 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 2792 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 2804 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2806 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(signed char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 2807 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 2819 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2821 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(char1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 2822 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 2834 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2836 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(unsigned char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 2837 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 2849 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2851 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(uchar1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 2852 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 2864 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2866 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(short *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 2867 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 2879 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2881 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(short1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 2882 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 2894 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2896 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(unsigned short *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 2897 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 2909 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2911 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(ushort1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 2912 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 2924 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2926 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(int *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 2927 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 2939 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2941 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(int1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 2942 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 2954 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2956 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(unsigned *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 2957 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 2969 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2971 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(uint1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 2972 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 2984 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 2986 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(long long *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 2987 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 2999 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3001 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(longlong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 3002 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3014 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3016 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(unsigned long long *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 3017 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3029 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3031 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(ulonglong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 3032 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3044 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3046 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(float *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 3047 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3059 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3061 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(float1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 3062 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3074 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3082 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(char2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 3083 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3095 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3097 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(uchar2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 3098 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3110 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3112 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(short2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 3113 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3125 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3127 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(ushort2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 3128 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3140 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3142 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(int2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 3143 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3155 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3157 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(uint2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 3158 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3170 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3172 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(longlong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 3173 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3185 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3187 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(ulonglong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 3188 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3200 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3202 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(float2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 3203 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3215 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3223 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(char4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 3224 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3236 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3238 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(uchar4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 3239 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3251 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3253 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(short4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 3254 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3266 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3268 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(ushort4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 3269 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3281 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3283 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(int4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 3284 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3296 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3298 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(uint4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 3299 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3311 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3313 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(float4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 3314 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3326 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3334 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 3335 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 3347 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3349 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(signed char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 3350 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 3362 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3364 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(char1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 3365 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 3377 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3379 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(unsigned char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 3380 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 3392 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3394 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(uchar1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 3395 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 3407 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3409 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(short *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 3410 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 3422 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3424 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(short1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 3425 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 3437 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3439 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(unsigned short *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 3440 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 3452 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3454 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(ushort1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 3455 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 3467 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3469 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(int *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 3470 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 3482 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3484 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(int1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 3485 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 3497 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3499 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(unsigned *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 3500 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 3512 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3514 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(uint1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 3515 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 3527 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3529 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(long long *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 3530 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 3542 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3544 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(longlong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 3545 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 3557 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3559 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(unsigned long long *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 3560 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 3572 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3574 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(ulonglong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 3575 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 3587 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3589 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(float *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 3590 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 3602 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3604 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(float1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 3605 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 3617 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3625 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(char2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 3626 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 3638 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3640 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(uchar2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 3641 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 3653 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3655 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(short2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 3656 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 3668 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3670 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(ushort2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 3671 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 3683 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3685 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(int2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 3686 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 3698 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3700 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(uint2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 3701 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 3713 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3715 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(longlong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 3716 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 3728 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3730 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(ulonglong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 3731 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 3743 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3745 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(float2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 3746 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 3758 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3766 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(char4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 3767 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 3779 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3781 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(uchar4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 3782 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 3794 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3796 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(short4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 3797 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 3809 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3811 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(ushort4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 3812 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 3824 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3826 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(int4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 3827 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 3839 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3841 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(uint4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 3842 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 3854 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3856 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(float4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 3857 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 3869 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3877 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(char data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 3878 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 3888 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3890 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(signed char data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 3891 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 3901 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3903 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(char1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 3904 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 3914 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3916 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 3917 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 3927 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3929 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 3930 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 3940 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3942 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(short data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 3943 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 3953 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3955 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(short1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 3956 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 3966 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3968 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 3969 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 3979 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3981 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 3982 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 3992 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 3994 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(int data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 3995 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4005 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4007 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(int1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 4008 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4018 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4020 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 4021 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4031 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4033 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 4034 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4044 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4046 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(long long data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 4047 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4057 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4059 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 4060 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4070 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4072 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(unsigned long long data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 4073 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4083 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4085 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 4086 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4096 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4098 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(float data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 4099 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4112 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4114 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(float1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 4115 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4128 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4136 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(char2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 4137 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4147 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4149 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 4150 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4160 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4162 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(short2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 4163 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4173 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4175 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 4176 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4186 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4188 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(int2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 4189 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4199 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4201 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 4202 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4212 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4214 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 4215 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4225 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4227 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 4228 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4238 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4240 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(float2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 4241 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4254 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4262 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(char4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 4263 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4273 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4275 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 4276 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4286 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4288 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(short4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 4289 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4299 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4301 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 4302 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4312 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4314 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(int4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 4315 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4325 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4327 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 4328 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4338 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4340 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(float4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode)
# 4341 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4354 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4362 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(char data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 4363 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4373 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4375 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 4376 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4386 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4388 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 4389 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4399 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4401 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 4402 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4412 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4414 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 4415 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4425 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4427 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(short data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 4428 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4438 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4440 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 4441 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4451 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4453 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 4454 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4464 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4466 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 4467 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4477 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4479 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(int data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 4480 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4490 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4492 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 4493 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4503 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4505 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 4506 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4516 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4518 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 4519 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4529 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4531 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(long long data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 4532 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4542 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4544 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 4545 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4555 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4557 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(unsigned long long data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 4558 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4568 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4570 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 4571 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4581 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4583 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(float data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 4584 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4597 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4599 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 4600 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4613 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4621 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 4622 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4632 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4634 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 4635 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4645 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4647 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 4648 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4658 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4660 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 4661 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4671 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4673 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 4674 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4684 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4686 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 4687 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4697 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4699 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 4700 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4710 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4712 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 4713 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4723 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4725 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 4726 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4739 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4747 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 4748 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4758 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4760 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 4761 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4771 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4773 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 4774 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4784 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4786 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 4787 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4797 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4799 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 4800 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4810 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4812 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 4813 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4823 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4825 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode)
# 4826 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4839 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4848 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(char data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 4849 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 4859 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4861 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 4862 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 4872 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4874 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 4875 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 4885 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4887 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 4888 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 4898 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4900 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 4901 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 4911 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4913 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(short data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 4914 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 4924 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4926 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 4927 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 4937 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4939 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 4940 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 4950 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4952 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 4953 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 4963 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4965 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(int data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 4966 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 4976 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4978 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 4979 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 4989 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 4991 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 4992 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5002 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5004 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 5005 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5015 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5017 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(long long data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 5018 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5028 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5030 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 5031 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5041 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5043 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(unsigned long long data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 5044 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5054 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5056 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 5057 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5067 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5069 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(float data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 5070 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5083 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5085 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 5086 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5099 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5107 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 5108 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5118 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5120 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 5121 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5131 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5133 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 5134 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5144 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5146 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 5147 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5157 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5159 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 5160 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5170 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5172 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 5173 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5183 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5185 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 5186 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5196 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5198 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 5199 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5209 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5211 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 5212 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5225 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5233 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 5234 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5244 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5246 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 5247 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5257 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5259 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 5260 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5270 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5272 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 5273 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5283 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5285 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 5286 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5296 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5298 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 5299 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5309 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5311 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode)
# 5312 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5325 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5333 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(char data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 5334 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5344 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5346 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 5347 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5357 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5359 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 5360 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5370 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5372 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 5373 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5383 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5385 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 5386 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5396 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5398 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(short data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 5399 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5409 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5411 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 5412 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5422 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5424 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 5425 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5435 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5437 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 5438 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5448 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5450 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(int data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 5451 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5461 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5463 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 5464 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5474 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5476 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 5477 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5487 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5489 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 5490 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5500 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5502 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(long long data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 5503 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5513 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5515 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 5516 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5526 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5528 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(unsigned long long data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 5529 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5539 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5541 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 5542 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5552 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5554 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(float data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 5555 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5568 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5570 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 5571 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5584 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5592 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 5593 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5603 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5605 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 5606 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5616 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5618 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 5619 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5629 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5631 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 5632 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5642 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5644 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 5645 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5655 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5657 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 5658 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5668 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5670 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 5671 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5681 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5683 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 5684 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5694 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5696 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 5697 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5710 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5718 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 5719 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5729 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5731 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 5732 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5742 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5744 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 5745 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5755 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5757 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 5758 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5768 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5770 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 5771 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5781 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5783 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 5784 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5794 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5796 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 5797 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5810 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5818 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(char data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 5819 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 5829 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5831 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 5832 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 5842 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5844 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 5845 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 5855 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5857 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 5858 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 5868 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5870 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 5871 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 5881 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5883 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(short data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 5884 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 5894 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5896 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 5897 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 5907 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5909 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 5910 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 5920 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5922 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 5923 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 5933 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5935 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(int data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 5936 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 5946 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5948 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 5949 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 5959 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5961 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 5962 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 5972 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5974 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 5975 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 5985 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 5987 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(long long data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 5988 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 5998 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6000 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 6001 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6011 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6013 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(unsigned long long data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 6014 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6024 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6026 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 6027 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6037 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6039 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(float data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 6040 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6053 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6055 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 6056 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6069 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6077 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 6078 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6088 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6090 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 6091 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6101 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6103 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 6104 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6114 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6116 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 6117 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6127 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6129 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 6130 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6140 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6142 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 6143 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6153 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6155 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 6156 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6166 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6168 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 6169 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6179 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6181 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 6182 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6195 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6203 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 6204 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6214 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6216 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 6217 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6227 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6229 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 6230 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6240 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6242 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 6243 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6253 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6255 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 6256 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6266 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6268 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 6269 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6279 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6281 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode)
# 6282 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6295 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6303 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(char data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 6304 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6314 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6316 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 6317 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6327 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6329 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 6330 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6340 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6342 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 6343 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6353 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6355 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 6356 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6366 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6368 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(short data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 6369 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6379 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6381 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 6382 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6392 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6394 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 6395 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6405 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6407 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 6408 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6418 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6420 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(int data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 6421 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6431 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6433 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 6434 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6444 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6446 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 6447 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6457 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6459 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 6460 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6470 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6472 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(long long data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 6473 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6483 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6485 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 6486 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6496 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6498 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(unsigned long long data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 6499 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6509 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6511 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 6512 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6522 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6524 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(float data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 6525 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6538 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6540 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 6541 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6554 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6562 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 6563 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6573 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6575 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 6576 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6586 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6588 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 6589 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6599 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6601 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 6602 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6612 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6614 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 6615 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6625 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6627 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 6628 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6638 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6640 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 6641 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6651 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6653 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 6654 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6664 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6666 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 6667 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6680 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6688 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 6689 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6699 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6701 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 6702 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6712 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6714 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 6715 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6725 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6727 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 6728 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6738 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6740 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 6741 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6751 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6753 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 6754 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6764 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6766 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode)
# 6767 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6780 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6788 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(char data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 6789 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 6799 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6801 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 6802 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 6812 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6814 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 6815 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 6825 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6827 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 6828 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 6838 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6840 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 6841 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 6851 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6853 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(short data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 6854 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 6864 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6866 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 6867 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 6877 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6879 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 6880 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 6890 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6892 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 6893 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 6903 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6905 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(int data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 6906 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 6916 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6918 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 6919 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 6929 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6931 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 6932 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 6942 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6944 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 6945 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 6955 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6957 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(long long data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 6958 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 6968 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6970 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 6971 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 6981 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6983 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(unsigned long long data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 6984 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 6994 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 6996 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 6997 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 7007 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 7009 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(float data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 7010 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 7023 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 7025 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 7026 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 7039 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 7047 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 7048 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 7058 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 7060 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 7061 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 7071 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 7073 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 7074 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 7084 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 7086 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 7087 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 7097 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 7099 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 7100 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 7110 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 7112 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 7113 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 7123 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 7125 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 7126 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 7136 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 7138 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 7139 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 7149 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 7151 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 7152 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 7165 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 7173 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 7174 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 7184 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 7186 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 7187 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 7197 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 7199 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 7200 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 7210 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 7212 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 7213 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 7223 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 7225 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 7226 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 7236 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 7238 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 7239 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 7249 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 7251 "/usr/include/surface_indirect_functions.hpp" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode)
# 7252 "/usr/include/surface_indirect_functions.hpp" 3
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 7265 "/usr/include/surface_indirect_functions.hpp" 3
::exit(___);}
# 71 "/usr/include/device_launch_parameters.h" 3
extern "C" { extern const uint3 __device_builtin_variable_threadIdx; }
# 72 "/usr/include/device_launch_parameters.h" 3
extern "C" { extern const uint3 __device_builtin_variable_blockIdx; }
# 73 "/usr/include/device_launch_parameters.h" 3
extern "C" { extern const dim3 __device_builtin_variable_blockDim; }
# 74 "/usr/include/device_launch_parameters.h" 3
extern "C" { extern const dim3 __device_builtin_variable_gridDim; }
# 75 "/usr/include/device_launch_parameters.h" 3
extern "C" { extern const int __device_builtin_variable_warpSize; }
# 172 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 173 "/usr/include/cuda_runtime.h" 3
cudaLaunchKernel(const T *
# 174 "/usr/include/cuda_runtime.h" 3
func, dim3
# 175 "/usr/include/cuda_runtime.h" 3
gridDim, dim3
# 176 "/usr/include/cuda_runtime.h" 3
blockDim, void **
# 177 "/usr/include/cuda_runtime.h" 3
args, size_t
# 178 "/usr/include/cuda_runtime.h" 3
sharedMem = 0, cudaStream_t
# 179 "/usr/include/cuda_runtime.h" 3
stream = 0)
# 181 "/usr/include/cuda_runtime.h" 3
{
# 182 "/usr/include/cuda_runtime.h" 3
return ::cudaLaunchKernel((const void *)func, gridDim, blockDim, args, sharedMem, stream);
# 183 "/usr/include/cuda_runtime.h" 3
}
# 210 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 211 "/usr/include/cuda_runtime.h" 3
cudaSetupArgument(T
# 212 "/usr/include/cuda_runtime.h" 3
arg, size_t
# 213 "/usr/include/cuda_runtime.h" 3
offset)
# 215 "/usr/include/cuda_runtime.h" 3
{
# 216 "/usr/include/cuda_runtime.h" 3
return ::cudaSetupArgument((const void *)(&arg), sizeof(T), offset);
# 217 "/usr/include/cuda_runtime.h" 3
}
# 249 "/usr/include/cuda_runtime.h" 3
static inline cudaError_t cudaEventCreate(cudaEvent_t *
# 250 "/usr/include/cuda_runtime.h" 3
event, unsigned
# 251 "/usr/include/cuda_runtime.h" 3
flags)
# 253 "/usr/include/cuda_runtime.h" 3
{
# 254 "/usr/include/cuda_runtime.h" 3
return ::cudaEventCreateWithFlags(event, flags);
# 255 "/usr/include/cuda_runtime.h" 3
}
# 312 "/usr/include/cuda_runtime.h" 3
static inline cudaError_t cudaMallocHost(void **
# 313 "/usr/include/cuda_runtime.h" 3
ptr, size_t
# 314 "/usr/include/cuda_runtime.h" 3
size, unsigned
# 315 "/usr/include/cuda_runtime.h" 3
flags)
# 317 "/usr/include/cuda_runtime.h" 3
{
# 318 "/usr/include/cuda_runtime.h" 3
return ::cudaHostAlloc(ptr, size, flags);
# 319 "/usr/include/cuda_runtime.h" 3
}
# 321 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 322 "/usr/include/cuda_runtime.h" 3
cudaHostAlloc(T **
# 323 "/usr/include/cuda_runtime.h" 3
ptr, size_t
# 324 "/usr/include/cuda_runtime.h" 3
size, unsigned
# 325 "/usr/include/cuda_runtime.h" 3
flags)
# 327 "/usr/include/cuda_runtime.h" 3
{
# 328 "/usr/include/cuda_runtime.h" 3
return ::cudaHostAlloc((void **)((void *)ptr), size, flags);
# 329 "/usr/include/cuda_runtime.h" 3
}
# 331 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 332 "/usr/include/cuda_runtime.h" 3
cudaHostGetDevicePointer(T **
# 333 "/usr/include/cuda_runtime.h" 3
pDevice, void *
# 334 "/usr/include/cuda_runtime.h" 3
pHost, unsigned
# 335 "/usr/include/cuda_runtime.h" 3
flags)
# 337 "/usr/include/cuda_runtime.h" 3
{
# 338 "/usr/include/cuda_runtime.h" 3
return ::cudaHostGetDevicePointer((void **)((void *)pDevice), pHost, flags);
# 339 "/usr/include/cuda_runtime.h" 3
}
# 410 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 411 "/usr/include/cuda_runtime.h" 3
cudaMallocManaged(T **
# 412 "/usr/include/cuda_runtime.h" 3
devPtr, size_t
# 413 "/usr/include/cuda_runtime.h" 3
size, unsigned
# 414 "/usr/include/cuda_runtime.h" 3
flags = 1)
# 416 "/usr/include/cuda_runtime.h" 3
{
# 417 "/usr/include/cuda_runtime.h" 3
return ::cudaMallocManaged((void **)((void *)devPtr), size, flags);
# 418 "/usr/include/cuda_runtime.h" 3
}
# 486 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 487 "/usr/include/cuda_runtime.h" 3
cudaStreamAttachMemAsync(cudaStream_t
# 488 "/usr/include/cuda_runtime.h" 3
stream, T *
# 489 "/usr/include/cuda_runtime.h" 3
devPtr, size_t
# 490 "/usr/include/cuda_runtime.h" 3
length = 0, unsigned
# 491 "/usr/include/cuda_runtime.h" 3
flags = 4)
# 493 "/usr/include/cuda_runtime.h" 3
{
# 494 "/usr/include/cuda_runtime.h" 3
return ::cudaStreamAttachMemAsync(stream, (void *)devPtr, length, flags);
# 495 "/usr/include/cuda_runtime.h" 3
}
# 497 "/usr/include/cuda_runtime.h" 3
template< class T> inline cudaError_t
# 498 "/usr/include/cuda_runtime.h" 3
cudaMalloc(T **
# 499 "/usr/include/cuda_runtime.h" 3
devPtr, size_t
# 500 "/usr/include/cuda_runtime.h" 3
size)
# 502 "/usr/include/cuda_runtime.h" 3
{
# 503 "/usr/include/cuda_runtime.h" 3
return ::cudaMalloc((void **)((void *)devPtr), size);
# 504 "/usr/include/cuda_runtime.h" 3
}
# 506 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 507 "/usr/include/cuda_runtime.h" 3
cudaMallocHost(T **
# 508 "/usr/include/cuda_runtime.h" 3
ptr, size_t
# 509 "/usr/include/cuda_runtime.h" 3
size, unsigned
# 510 "/usr/include/cuda_runtime.h" 3
flags = 0)
# 512 "/usr/include/cuda_runtime.h" 3
{
# 513 "/usr/include/cuda_runtime.h" 3
return cudaMallocHost((void **)((void *)ptr), size, flags);
# 514 "/usr/include/cuda_runtime.h" 3
}
# 516 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 517 "/usr/include/cuda_runtime.h" 3
cudaMallocPitch(T **
# 518 "/usr/include/cuda_runtime.h" 3
devPtr, size_t *
# 519 "/usr/include/cuda_runtime.h" 3
pitch, size_t
# 520 "/usr/include/cuda_runtime.h" 3
width, size_t
# 521 "/usr/include/cuda_runtime.h" 3
height)
# 523 "/usr/include/cuda_runtime.h" 3
{
# 524 "/usr/include/cuda_runtime.h" 3
return ::cudaMallocPitch((void **)((void *)devPtr), pitch, width, height);
# 525 "/usr/include/cuda_runtime.h" 3
}
# 562 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 563 "/usr/include/cuda_runtime.h" 3
cudaMemcpyToSymbol(const T &
# 564 "/usr/include/cuda_runtime.h" 3
symbol, const void *
# 565 "/usr/include/cuda_runtime.h" 3
src, size_t
# 566 "/usr/include/cuda_runtime.h" 3
count, size_t
# 567 "/usr/include/cuda_runtime.h" 3
offset = 0, cudaMemcpyKind
# 568 "/usr/include/cuda_runtime.h" 3
kind = cudaMemcpyHostToDevice)
# 570 "/usr/include/cuda_runtime.h" 3
{
# 571 "/usr/include/cuda_runtime.h" 3
return ::cudaMemcpyToSymbol((const void *)(&symbol), src, count, offset, kind);
# 572 "/usr/include/cuda_runtime.h" 3
}
# 614 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 615 "/usr/include/cuda_runtime.h" 3
cudaMemcpyToSymbolAsync(const T &
# 616 "/usr/include/cuda_runtime.h" 3
symbol, const void *
# 617 "/usr/include/cuda_runtime.h" 3
src, size_t
# 618 "/usr/include/cuda_runtime.h" 3
count, size_t
# 619 "/usr/include/cuda_runtime.h" 3
offset = 0, cudaMemcpyKind
# 620 "/usr/include/cuda_runtime.h" 3
kind = cudaMemcpyHostToDevice, cudaStream_t
# 621 "/usr/include/cuda_runtime.h" 3
stream = 0)
# 623 "/usr/include/cuda_runtime.h" 3
{
# 624 "/usr/include/cuda_runtime.h" 3
return ::cudaMemcpyToSymbolAsync((const void *)(&symbol), src, count, offset, kind, stream);
# 625 "/usr/include/cuda_runtime.h" 3
}
# 660 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 661 "/usr/include/cuda_runtime.h" 3
cudaMemcpyFromSymbol(void *
# 662 "/usr/include/cuda_runtime.h" 3
dst, const T &
# 663 "/usr/include/cuda_runtime.h" 3
symbol, size_t
# 664 "/usr/include/cuda_runtime.h" 3
count, size_t
# 665 "/usr/include/cuda_runtime.h" 3
offset = 0, cudaMemcpyKind
# 666 "/usr/include/cuda_runtime.h" 3
kind = cudaMemcpyDeviceToHost)
# 668 "/usr/include/cuda_runtime.h" 3
{
# 669 "/usr/include/cuda_runtime.h" 3
return ::cudaMemcpyFromSymbol(dst, (const void *)(&symbol), count, offset, kind);
# 670 "/usr/include/cuda_runtime.h" 3
}
# 712 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 713 "/usr/include/cuda_runtime.h" 3
cudaMemcpyFromSymbolAsync(void *
# 714 "/usr/include/cuda_runtime.h" 3
dst, const T &
# 715 "/usr/include/cuda_runtime.h" 3
symbol, size_t
# 716 "/usr/include/cuda_runtime.h" 3
count, size_t
# 717 "/usr/include/cuda_runtime.h" 3
offset = 0, cudaMemcpyKind
# 718 "/usr/include/cuda_runtime.h" 3
kind = cudaMemcpyDeviceToHost, cudaStream_t
# 719 "/usr/include/cuda_runtime.h" 3
stream = 0)
# 721 "/usr/include/cuda_runtime.h" 3
{
# 722 "/usr/include/cuda_runtime.h" 3
return ::cudaMemcpyFromSymbolAsync(dst, (const void *)(&symbol), count, offset, kind, stream);
# 723 "/usr/include/cuda_runtime.h" 3
}
# 745 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 746 "/usr/include/cuda_runtime.h" 3
cudaGetSymbolAddress(void **
# 747 "/usr/include/cuda_runtime.h" 3
devPtr, const T &
# 748 "/usr/include/cuda_runtime.h" 3
symbol)
# 750 "/usr/include/cuda_runtime.h" 3
{
# 751 "/usr/include/cuda_runtime.h" 3
return ::cudaGetSymbolAddress(devPtr, (const void *)(&symbol));
# 752 "/usr/include/cuda_runtime.h" 3
}
# 774 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 775 "/usr/include/cuda_runtime.h" 3
cudaGetSymbolSize(size_t *
# 776 "/usr/include/cuda_runtime.h" 3
size, const T &
# 777 "/usr/include/cuda_runtime.h" 3
symbol)
# 779 "/usr/include/cuda_runtime.h" 3
{
# 780 "/usr/include/cuda_runtime.h" 3
return ::cudaGetSymbolSize(size, (const void *)(&symbol));
# 781 "/usr/include/cuda_runtime.h" 3
}
# 817 "/usr/include/cuda_runtime.h" 3
template< class T, int dim, cudaTextureReadMode readMode> static inline cudaError_t
# 818 "/usr/include/cuda_runtime.h" 3
cudaBindTexture(size_t *
# 819 "/usr/include/cuda_runtime.h" 3
offset, const texture< T, dim, readMode> &
# 820 "/usr/include/cuda_runtime.h" 3
tex, const void *
# 821 "/usr/include/cuda_runtime.h" 3
devPtr, const cudaChannelFormatDesc &
# 822 "/usr/include/cuda_runtime.h" 3
desc, size_t
# 823 "/usr/include/cuda_runtime.h" 3
size = ((2147483647) * 2U) + 1U)
# 825 "/usr/include/cuda_runtime.h" 3
{
# 826 "/usr/include/cuda_runtime.h" 3
return ::cudaBindTexture(offset, &tex, devPtr, &desc, size);
# 827 "/usr/include/cuda_runtime.h" 3
}
# 862 "/usr/include/cuda_runtime.h" 3
template< class T, int dim, cudaTextureReadMode readMode> static inline cudaError_t
# 863 "/usr/include/cuda_runtime.h" 3
cudaBindTexture(size_t *
# 864 "/usr/include/cuda_runtime.h" 3
offset, const texture< T, dim, readMode> &
# 865 "/usr/include/cuda_runtime.h" 3
tex, const void *
# 866 "/usr/include/cuda_runtime.h" 3
devPtr, size_t
# 867 "/usr/include/cuda_runtime.h" 3
size = ((2147483647) * 2U) + 1U)
# 869 "/usr/include/cuda_runtime.h" 3
{
# 870 "/usr/include/cuda_runtime.h" 3
return cudaBindTexture(offset, tex, devPtr, (tex.channelDesc), size);
# 871 "/usr/include/cuda_runtime.h" 3
}
# 918 "/usr/include/cuda_runtime.h" 3
template< class T, int dim, cudaTextureReadMode readMode> static inline cudaError_t
# 919 "/usr/include/cuda_runtime.h" 3
cudaBindTexture2D(size_t *
# 920 "/usr/include/cuda_runtime.h" 3
offset, const texture< T, dim, readMode> &
# 921 "/usr/include/cuda_runtime.h" 3
tex, const void *
# 922 "/usr/include/cuda_runtime.h" 3
devPtr, const cudaChannelFormatDesc &
# 923 "/usr/include/cuda_runtime.h" 3
desc, size_t
# 924 "/usr/include/cuda_runtime.h" 3
width, size_t
# 925 "/usr/include/cuda_runtime.h" 3
height, size_t
# 926 "/usr/include/cuda_runtime.h" 3
pitch)
# 928 "/usr/include/cuda_runtime.h" 3
{
# 929 "/usr/include/cuda_runtime.h" 3
return ::cudaBindTexture2D(offset, &tex, devPtr, &desc, width, height, pitch);
# 930 "/usr/include/cuda_runtime.h" 3
}
# 976 "/usr/include/cuda_runtime.h" 3
template< class T, int dim, cudaTextureReadMode readMode> static inline cudaError_t
# 977 "/usr/include/cuda_runtime.h" 3
cudaBindTexture2D(size_t *
# 978 "/usr/include/cuda_runtime.h" 3
offset, const texture< T, dim, readMode> &
# 979 "/usr/include/cuda_runtime.h" 3
tex, const void *
# 980 "/usr/include/cuda_runtime.h" 3
devPtr, size_t
# 981 "/usr/include/cuda_runtime.h" 3
width, size_t
# 982 "/usr/include/cuda_runtime.h" 3
height, size_t
# 983 "/usr/include/cuda_runtime.h" 3
pitch)
# 985 "/usr/include/cuda_runtime.h" 3
{
# 986 "/usr/include/cuda_runtime.h" 3
return ::cudaBindTexture2D(offset, &tex, devPtr, &(tex.channelDesc), width, height, pitch);
# 987 "/usr/include/cuda_runtime.h" 3
}
# 1018 "/usr/include/cuda_runtime.h" 3
template< class T, int dim, cudaTextureReadMode readMode> static inline cudaError_t
# 1019 "/usr/include/cuda_runtime.h" 3
cudaBindTextureToArray(const texture< T, dim, readMode> &
# 1020 "/usr/include/cuda_runtime.h" 3
tex, cudaArray_const_t
# 1021 "/usr/include/cuda_runtime.h" 3
array, const cudaChannelFormatDesc &
# 1022 "/usr/include/cuda_runtime.h" 3
desc)
# 1024 "/usr/include/cuda_runtime.h" 3
{
# 1025 "/usr/include/cuda_runtime.h" 3
return ::cudaBindTextureToArray(&tex, array, &desc);
# 1026 "/usr/include/cuda_runtime.h" 3
}
# 1056 "/usr/include/cuda_runtime.h" 3
template< class T, int dim, cudaTextureReadMode readMode> static inline cudaError_t
# 1057 "/usr/include/cuda_runtime.h" 3
cudaBindTextureToArray(const texture< T, dim, readMode> &
# 1058 "/usr/include/cuda_runtime.h" 3
tex, cudaArray_const_t
# 1059 "/usr/include/cuda_runtime.h" 3
array)
# 1061 "/usr/include/cuda_runtime.h" 3
{
# 1062 "/usr/include/cuda_runtime.h" 3
cudaChannelFormatDesc desc;
# 1063 "/usr/include/cuda_runtime.h" 3
cudaError_t err = ::cudaGetChannelDesc(&desc, array);
# 1065 "/usr/include/cuda_runtime.h" 3
return (err == (cudaSuccess)) ? cudaBindTextureToArray(tex, array, desc) : err;
# 1066 "/usr/include/cuda_runtime.h" 3
}
# 1097 "/usr/include/cuda_runtime.h" 3
template< class T, int dim, cudaTextureReadMode readMode> static inline cudaError_t
# 1098 "/usr/include/cuda_runtime.h" 3
cudaBindTextureToMipmappedArray(const texture< T, dim, readMode> &
# 1099 "/usr/include/cuda_runtime.h" 3
tex, cudaMipmappedArray_const_t
# 1100 "/usr/include/cuda_runtime.h" 3
mipmappedArray, const cudaChannelFormatDesc &
# 1101 "/usr/include/cuda_runtime.h" 3
desc)
# 1103 "/usr/include/cuda_runtime.h" 3
{
# 1104 "/usr/include/cuda_runtime.h" 3
return ::cudaBindTextureToMipmappedArray(&tex, mipmappedArray, &desc);
# 1105 "/usr/include/cuda_runtime.h" 3
}
# 1135 "/usr/include/cuda_runtime.h" 3
template< class T, int dim, cudaTextureReadMode readMode> static inline cudaError_t
# 1136 "/usr/include/cuda_runtime.h" 3
cudaBindTextureToMipmappedArray(const texture< T, dim, readMode> &
# 1137 "/usr/include/cuda_runtime.h" 3
tex, cudaMipmappedArray_const_t
# 1138 "/usr/include/cuda_runtime.h" 3
mipmappedArray)
# 1140 "/usr/include/cuda_runtime.h" 3
{
# 1141 "/usr/include/cuda_runtime.h" 3
cudaChannelFormatDesc desc;
# 1142 "/usr/include/cuda_runtime.h" 3
cudaArray_t levelArray;
# 1143 "/usr/include/cuda_runtime.h" 3
cudaError_t err = ::cudaGetMipmappedArrayLevel(&levelArray, mipmappedArray, 0);
# 1145 "/usr/include/cuda_runtime.h" 3
if (err != (cudaSuccess)) {
# 1146 "/usr/include/cuda_runtime.h" 3
return err;
# 1147 "/usr/include/cuda_runtime.h" 3
}
# 1148 "/usr/include/cuda_runtime.h" 3
err = ::cudaGetChannelDesc(&desc, levelArray);
# 1150 "/usr/include/cuda_runtime.h" 3
return (err == (cudaSuccess)) ? cudaBindTextureToMipmappedArray(tex, mipmappedArray, desc) : err;
# 1151 "/usr/include/cuda_runtime.h" 3
}
# 1174 "/usr/include/cuda_runtime.h" 3
template< class T, int dim, cudaTextureReadMode readMode> static inline cudaError_t
# 1175 "/usr/include/cuda_runtime.h" 3
cudaUnbindTexture(const texture< T, dim, readMode> &
# 1176 "/usr/include/cuda_runtime.h" 3
tex)
# 1178 "/usr/include/cuda_runtime.h" 3
{
# 1179 "/usr/include/cuda_runtime.h" 3
return ::cudaUnbindTexture(&tex);
# 1180 "/usr/include/cuda_runtime.h" 3
}
# 1208 "/usr/include/cuda_runtime.h" 3
template< class T, int dim, cudaTextureReadMode readMode> static inline cudaError_t
# 1209 "/usr/include/cuda_runtime.h" 3
cudaGetTextureAlignmentOffset(size_t *
# 1210 "/usr/include/cuda_runtime.h" 3
offset, const texture< T, dim, readMode> &
# 1211 "/usr/include/cuda_runtime.h" 3
tex)
# 1213 "/usr/include/cuda_runtime.h" 3
{
# 1214 "/usr/include/cuda_runtime.h" 3
return ::cudaGetTextureAlignmentOffset(offset, &tex);
# 1215 "/usr/include/cuda_runtime.h" 3
}
# 1260 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 1261 "/usr/include/cuda_runtime.h" 3
cudaFuncSetCacheConfig(T *
# 1262 "/usr/include/cuda_runtime.h" 3
func, cudaFuncCache
# 1263 "/usr/include/cuda_runtime.h" 3
cacheConfig)
# 1265 "/usr/include/cuda_runtime.h" 3
{
# 1266 "/usr/include/cuda_runtime.h" 3
return ::cudaFuncSetCacheConfig((const void *)func, cacheConfig);
# 1267 "/usr/include/cuda_runtime.h" 3
}
# 1269 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 1270 "/usr/include/cuda_runtime.h" 3
cudaFuncSetSharedMemConfig(T *
# 1271 "/usr/include/cuda_runtime.h" 3
func, cudaSharedMemConfig
# 1272 "/usr/include/cuda_runtime.h" 3
config)
# 1274 "/usr/include/cuda_runtime.h" 3
{
# 1275 "/usr/include/cuda_runtime.h" 3
return ::cudaFuncSetSharedMemConfig((const void *)func, config);
# 1276 "/usr/include/cuda_runtime.h" 3
}
# 1305 "/usr/include/cuda_runtime.h" 3
template< class T> inline cudaError_t
# 1306 "/usr/include/cuda_runtime.h" 3
cudaOccupancyMaxActiveBlocksPerMultiprocessor(int *
# 1307 "/usr/include/cuda_runtime.h" 3
numBlocks, T
# 1308 "/usr/include/cuda_runtime.h" 3
func, int
# 1309 "/usr/include/cuda_runtime.h" 3
blockSize, size_t
# 1310 "/usr/include/cuda_runtime.h" 3
dynamicSMemSize)
# 1311 "/usr/include/cuda_runtime.h" 3
{
# 1312 "/usr/include/cuda_runtime.h" 3
return ::cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(numBlocks, (const void *)func, blockSize, dynamicSMemSize, 0);
# 1313 "/usr/include/cuda_runtime.h" 3
}
# 1356 "/usr/include/cuda_runtime.h" 3
template< class T> inline cudaError_t
# 1357 "/usr/include/cuda_runtime.h" 3
cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(int *
# 1358 "/usr/include/cuda_runtime.h" 3
numBlocks, T
# 1359 "/usr/include/cuda_runtime.h" 3
func, int
# 1360 "/usr/include/cuda_runtime.h" 3
blockSize, size_t
# 1361 "/usr/include/cuda_runtime.h" 3
dynamicSMemSize, unsigned
# 1362 "/usr/include/cuda_runtime.h" 3
flags)
# 1363 "/usr/include/cuda_runtime.h" 3
{
# 1364 "/usr/include/cuda_runtime.h" 3
return ::cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(numBlocks, (const void *)func, blockSize, dynamicSMemSize, flags);
# 1365 "/usr/include/cuda_runtime.h" 3
}
# 1370 "/usr/include/cuda_runtime.h" 3
class __cudaOccupancyB2DHelper {
# 1371 "/usr/include/cuda_runtime.h" 3
size_t n;
# 1373 "/usr/include/cuda_runtime.h" 3
public: __cudaOccupancyB2DHelper(size_t n_) : n(n_) { }
# 1374 "/usr/include/cuda_runtime.h" 3
size_t operator()(int)
# 1375 "/usr/include/cuda_runtime.h" 3
{
# 1376 "/usr/include/cuda_runtime.h" 3
return n;
# 1377 "/usr/include/cuda_runtime.h" 3
}
# 1378 "/usr/include/cuda_runtime.h" 3
};
# 1380 "/usr/include/cuda_runtime.h" 3
template< class UnaryFunction, class T> static inline cudaError_t
# 1381 "/usr/include/cuda_runtime.h" 3
cudaOccupancyMaxPotentialBlockSizeVariableSMemWithFlags(int *
# 1382 "/usr/include/cuda_runtime.h" 3
minGridSize, int *
# 1383 "/usr/include/cuda_runtime.h" 3
blockSize, T
# 1384 "/usr/include/cuda_runtime.h" 3
func, UnaryFunction
# 1385 "/usr/include/cuda_runtime.h" 3
blockSizeToDynamicSMemSize, int
# 1386 "/usr/include/cuda_runtime.h" 3
blockSizeLimit = 0, unsigned
# 1387 "/usr/include/cuda_runtime.h" 3
flags = 0)
# 1388 "/usr/include/cuda_runtime.h" 3
{
# 1389 "/usr/include/cuda_runtime.h" 3
cudaError_t status;
# 1392 "/usr/include/cuda_runtime.h" 3
int device;
# 1393 "/usr/include/cuda_runtime.h" 3
cudaFuncAttributes attr;
# 1396 "/usr/include/cuda_runtime.h" 3
int maxThreadsPerMultiProcessor;
# 1397 "/usr/include/cuda_runtime.h" 3
int warpSize;
# 1398 "/usr/include/cuda_runtime.h" 3
int devMaxThreadsPerBlock;
# 1399 "/usr/include/cuda_runtime.h" 3
int multiProcessorCount;
# 1400 "/usr/include/cuda_runtime.h" 3
int funcMaxThreadsPerBlock;
# 1401 "/usr/include/cuda_runtime.h" 3
int occupancyLimit;
# 1402 "/usr/include/cuda_runtime.h" 3
int granularity;
# 1405 "/usr/include/cuda_runtime.h" 3
int maxBlockSize = 0;
# 1406 "/usr/include/cuda_runtime.h" 3
int numBlocks = 0;
# 1407 "/usr/include/cuda_runtime.h" 3
int maxOccupancy = 0;
# 1410 "/usr/include/cuda_runtime.h" 3
int blockSizeToTryAligned;
# 1411 "/usr/include/cuda_runtime.h" 3
int blockSizeToTry;
# 1412 "/usr/include/cuda_runtime.h" 3
int blockSizeLimitAligned;
# 1413 "/usr/include/cuda_runtime.h" 3
int occupancyInBlocks;
# 1414 "/usr/include/cuda_runtime.h" 3
int occupancyInThreads;
# 1415 "/usr/include/cuda_runtime.h" 3
int dynamicSMemSize;
# 1421 "/usr/include/cuda_runtime.h" 3
if (((!minGridSize) || (!blockSize)) || (!func)) {
# 1422 "/usr/include/cuda_runtime.h" 3
return cudaErrorInvalidValue;
# 1423 "/usr/include/cuda_runtime.h" 3
}
# 1429 "/usr/include/cuda_runtime.h" 3
status = ::cudaGetDevice(&device);
# 1430 "/usr/include/cuda_runtime.h" 3
if (status != (cudaSuccess)) {
# 1431 "/usr/include/cuda_runtime.h" 3
return status;
# 1432 "/usr/include/cuda_runtime.h" 3
}
# 1434 "/usr/include/cuda_runtime.h" 3
status = cudaDeviceGetAttribute(&maxThreadsPerMultiProcessor, cudaDevAttrMaxThreadsPerMultiProcessor, device);
# 1438 "/usr/include/cuda_runtime.h" 3
if (status != (cudaSuccess)) {
# 1439 "/usr/include/cuda_runtime.h" 3
return status;
# 1440 "/usr/include/cuda_runtime.h" 3
}
# 1442 "/usr/include/cuda_runtime.h" 3
status = cudaDeviceGetAttribute(&warpSize, cudaDevAttrWarpSize, device);
# 1446 "/usr/include/cuda_runtime.h" 3
if (status != (cudaSuccess)) {
# 1447 "/usr/include/cuda_runtime.h" 3
return status;
# 1448 "/usr/include/cuda_runtime.h" 3
}
# 1450 "/usr/include/cuda_runtime.h" 3
status = cudaDeviceGetAttribute(&devMaxThreadsPerBlock, cudaDevAttrMaxThreadsPerBlock, device);
# 1454 "/usr/include/cuda_runtime.h" 3
if (status != (cudaSuccess)) {
# 1455 "/usr/include/cuda_runtime.h" 3
return status;
# 1456 "/usr/include/cuda_runtime.h" 3
}
# 1458 "/usr/include/cuda_runtime.h" 3
status = cudaDeviceGetAttribute(&multiProcessorCount, cudaDevAttrMultiProcessorCount, device);
# 1462 "/usr/include/cuda_runtime.h" 3
if (status != (cudaSuccess)) {
# 1463 "/usr/include/cuda_runtime.h" 3
return status;
# 1464 "/usr/include/cuda_runtime.h" 3
}
# 1466 "/usr/include/cuda_runtime.h" 3
status = cudaFuncGetAttributes(&attr, func);
# 1467 "/usr/include/cuda_runtime.h" 3
if (status != (cudaSuccess)) {
# 1468 "/usr/include/cuda_runtime.h" 3
return status;
# 1469 "/usr/include/cuda_runtime.h" 3
}
# 1471 "/usr/include/cuda_runtime.h" 3
funcMaxThreadsPerBlock = (attr.maxThreadsPerBlock);
# 1477 "/usr/include/cuda_runtime.h" 3
occupancyLimit = maxThreadsPerMultiProcessor;
# 1478 "/usr/include/cuda_runtime.h" 3
granularity = warpSize;
# 1480 "/usr/include/cuda_runtime.h" 3
if (blockSizeLimit == 0) {
# 1481 "/usr/include/cuda_runtime.h" 3
blockSizeLimit = devMaxThreadsPerBlock;
# 1482 "/usr/include/cuda_runtime.h" 3
}
# 1484 "/usr/include/cuda_runtime.h" 3
if (devMaxThreadsPerBlock < blockSizeLimit) {
# 1485 "/usr/include/cuda_runtime.h" 3
blockSizeLimit = devMaxThreadsPerBlock;
# 1486 "/usr/include/cuda_runtime.h" 3
}
# 1488 "/usr/include/cuda_runtime.h" 3
if (funcMaxThreadsPerBlock < blockSizeLimit) {
# 1489 "/usr/include/cuda_runtime.h" 3
blockSizeLimit = funcMaxThreadsPerBlock;
# 1490 "/usr/include/cuda_runtime.h" 3
}
# 1492 "/usr/include/cuda_runtime.h" 3
blockSizeLimitAligned = (((blockSizeLimit + (granularity - 1)) / granularity) * granularity);
# 1494 "/usr/include/cuda_runtime.h" 3
for (blockSizeToTryAligned = blockSizeLimitAligned; blockSizeToTryAligned > 0; blockSizeToTryAligned -= granularity) {
# 1498 "/usr/include/cuda_runtime.h" 3
if (blockSizeLimit < blockSizeToTryAligned) {
# 1499 "/usr/include/cuda_runtime.h" 3
blockSizeToTry = blockSizeLimit;
# 1500 "/usr/include/cuda_runtime.h" 3
} else {
# 1501 "/usr/include/cuda_runtime.h" 3
blockSizeToTry = blockSizeToTryAligned;
# 1502 "/usr/include/cuda_runtime.h" 3
}
# 1504 "/usr/include/cuda_runtime.h" 3
dynamicSMemSize = blockSizeToDynamicSMemSize(blockSizeToTry);
# 1506 "/usr/include/cuda_runtime.h" 3
status = cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(&occupancyInBlocks, func, blockSizeToTry, dynamicSMemSize, flags);
# 1513 "/usr/include/cuda_runtime.h" 3
if (status != (cudaSuccess)) {
# 1514 "/usr/include/cuda_runtime.h" 3
return status;
# 1515 "/usr/include/cuda_runtime.h" 3
}
# 1517 "/usr/include/cuda_runtime.h" 3
occupancyInThreads = (blockSizeToTry * occupancyInBlocks);
# 1519 "/usr/include/cuda_runtime.h" 3
if (occupancyInThreads > maxOccupancy) {
# 1520 "/usr/include/cuda_runtime.h" 3
maxBlockSize = blockSizeToTry;
# 1521 "/usr/include/cuda_runtime.h" 3
numBlocks = occupancyInBlocks;
# 1522 "/usr/include/cuda_runtime.h" 3
maxOccupancy = occupancyInThreads;
# 1523 "/usr/include/cuda_runtime.h" 3
}
# 1527 "/usr/include/cuda_runtime.h" 3
if (occupancyLimit == maxOccupancy) {
# 1528 "/usr/include/cuda_runtime.h" 3
break;
# 1529 "/usr/include/cuda_runtime.h" 3
}
# 1530 "/usr/include/cuda_runtime.h" 3
}
# 1538 "/usr/include/cuda_runtime.h" 3
(*minGridSize) = (numBlocks * multiProcessorCount);
# 1539 "/usr/include/cuda_runtime.h" 3
(*blockSize) = maxBlockSize;
# 1541 "/usr/include/cuda_runtime.h" 3
return status;
# 1542 "/usr/include/cuda_runtime.h" 3
}
# 1575 "/usr/include/cuda_runtime.h" 3
template< class UnaryFunction, class T> static inline cudaError_t
# 1576 "/usr/include/cuda_runtime.h" 3
cudaOccupancyMaxPotentialBlockSizeVariableSMem(int *
# 1577 "/usr/include/cuda_runtime.h" 3
minGridSize, int *
# 1578 "/usr/include/cuda_runtime.h" 3
blockSize, T
# 1579 "/usr/include/cuda_runtime.h" 3
func, UnaryFunction
# 1580 "/usr/include/cuda_runtime.h" 3
blockSizeToDynamicSMemSize, int
# 1581 "/usr/include/cuda_runtime.h" 3
blockSizeLimit = 0)
# 1582 "/usr/include/cuda_runtime.h" 3
{
# 1583 "/usr/include/cuda_runtime.h" 3
return cudaOccupancyMaxPotentialBlockSizeVariableSMemWithFlags(minGridSize, blockSize, func, blockSizeToDynamicSMemSize, blockSizeLimit, 0);
# 1584 "/usr/include/cuda_runtime.h" 3
}
# 1620 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 1621 "/usr/include/cuda_runtime.h" 3
cudaOccupancyMaxPotentialBlockSize(int *
# 1622 "/usr/include/cuda_runtime.h" 3
minGridSize, int *
# 1623 "/usr/include/cuda_runtime.h" 3
blockSize, T
# 1624 "/usr/include/cuda_runtime.h" 3
func, size_t
# 1625 "/usr/include/cuda_runtime.h" 3
dynamicSMemSize = 0, int
# 1626 "/usr/include/cuda_runtime.h" 3
blockSizeLimit = 0)
# 1627 "/usr/include/cuda_runtime.h" 3
{
# 1628 "/usr/include/cuda_runtime.h" 3
return cudaOccupancyMaxPotentialBlockSizeVariableSMemWithFlags(minGridSize, blockSize, func, ((__cudaOccupancyB2DHelper)(dynamicSMemSize)), blockSizeLimit, 0);
# 1629 "/usr/include/cuda_runtime.h" 3
}
# 1679 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 1680 "/usr/include/cuda_runtime.h" 3
cudaOccupancyMaxPotentialBlockSizeWithFlags(int *
# 1681 "/usr/include/cuda_runtime.h" 3
minGridSize, int *
# 1682 "/usr/include/cuda_runtime.h" 3
blockSize, T
# 1683 "/usr/include/cuda_runtime.h" 3
func, size_t
# 1684 "/usr/include/cuda_runtime.h" 3
dynamicSMemSize = 0, int
# 1685 "/usr/include/cuda_runtime.h" 3
blockSizeLimit = 0, unsigned
# 1686 "/usr/include/cuda_runtime.h" 3
flags = 0)
# 1687 "/usr/include/cuda_runtime.h" 3
{
# 1688 "/usr/include/cuda_runtime.h" 3
return cudaOccupancyMaxPotentialBlockSizeVariableSMemWithFlags(minGridSize, blockSize, func, ((__cudaOccupancyB2DHelper)(dynamicSMemSize)), blockSizeLimit, flags);
# 1689 "/usr/include/cuda_runtime.h" 3
}
# 1772 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 1773 "/usr/include/cuda_runtime.h" 3
cudaLaunch(T *
# 1774 "/usr/include/cuda_runtime.h" 3
func)
# 1776 "/usr/include/cuda_runtime.h" 3
{
# 1777 "/usr/include/cuda_runtime.h" 3
return ::cudaLaunch((const void *)func);
# 1778 "/usr/include/cuda_runtime.h" 3
}
# 1809 "/usr/include/cuda_runtime.h" 3
template< class T> inline cudaError_t
# 1810 "/usr/include/cuda_runtime.h" 3
cudaFuncGetAttributes(cudaFuncAttributes *
# 1811 "/usr/include/cuda_runtime.h" 3
attr, T *
# 1812 "/usr/include/cuda_runtime.h" 3
entry)
# 1814 "/usr/include/cuda_runtime.h" 3
{
# 1815 "/usr/include/cuda_runtime.h" 3
return ::cudaFuncGetAttributes(attr, (const void *)entry);
# 1816 "/usr/include/cuda_runtime.h" 3
}
# 1838 "/usr/include/cuda_runtime.h" 3
template< class T, int dim> static inline cudaError_t
# 1839 "/usr/include/cuda_runtime.h" 3
cudaBindSurfaceToArray(const surface< T, dim> &
# 1840 "/usr/include/cuda_runtime.h" 3
surf, cudaArray_const_t
# 1841 "/usr/include/cuda_runtime.h" 3
array, const cudaChannelFormatDesc &
# 1842 "/usr/include/cuda_runtime.h" 3
desc)
# 1844 "/usr/include/cuda_runtime.h" 3
{
# 1845 "/usr/include/cuda_runtime.h" 3
return ::cudaBindSurfaceToArray(&surf, array, &desc);
# 1846 "/usr/include/cuda_runtime.h" 3
}
# 1867 "/usr/include/cuda_runtime.h" 3
template< class T, int dim> static inline cudaError_t
# 1868 "/usr/include/cuda_runtime.h" 3
cudaBindSurfaceToArray(const surface< T, dim> &
# 1869 "/usr/include/cuda_runtime.h" 3
surf, cudaArray_const_t
# 1870 "/usr/include/cuda_runtime.h" 3
array)
# 1872 "/usr/include/cuda_runtime.h" 3
{
# 1873 "/usr/include/cuda_runtime.h" 3
cudaChannelFormatDesc desc;
# 1874 "/usr/include/cuda_runtime.h" 3
cudaError_t err = ::cudaGetChannelDesc(&desc, array);
# 1876 "/usr/include/cuda_runtime.h" 3
return (err == (cudaSuccess)) ? cudaBindSurfaceToArray(surf, array, desc) : err;
# 1877 "/usr/include/cuda_runtime.h" 3
}
# 1888 "/usr/include/cuda_runtime.h" 3
#pragma GCC diagnostic pop
# 43 "CMakeCUDACompilerId.cu"

# 43 "CMakeCUDACompilerId.cu"
const char *info_compiler = ("INFO:compiler[NVIDIA]");
# 235 "CMakeCUDACompilerId.cu"
const char info_version[] = {'I', 'N', 'F', 'O', ':', 'c', 'o', 'm', 'p', 'i', 'l', 'e', 'r', '_', 'v', 'e', 'r', 's', 'i', 'o', 'n', '[', (48 + ((7 / 10000000) % 10)), (48 + ((7 / 1000000) % 10)), (48 + ((7 / 100000) % 10)), (48 + ((7 / 10000) % 10)), (48 + ((7 / 1000) % 10)), (48 + ((7 / 100) % 10)), (48 + ((7 / 10) % 10)), (48 + (7 % 10)), '.', (48 + ((5 / 10000000) % 10)), (48 + ((5 / 1000000) % 10)), (48 + ((5 / 100000) % 10)), (48 + ((5 / 10000) % 10)), (48 + ((5 / 1000) % 10)), (48 + ((5 / 100) % 10)), (48 + ((5 / 10) % 10)), (48 + (5 % 10)), '.', (48 + ((17 / 10000000) % 10)), (48 + ((17 / 1000000) % 10)), (48 + ((17 / 100000) % 10)), (48 + ((17 / 10000) % 10)), (48 + ((17 / 1000) % 10)), (48 + ((17 / 100) % 10)), (48 + ((17 / 10) % 10)), (48 + (17 % 10)), ']', '\000'};
# 282 "CMakeCUDACompilerId.cu"
const char *info_platform = ("INFO:platform[Linux]");
# 283 "CMakeCUDACompilerId.cu"
const char *info_arch = ("INFO:arch[]");
# 288 "CMakeCUDACompilerId.cu"
const char *info_language_dialect_default = ("INFO:dialect_default[98]");
# 304 "CMakeCUDACompilerId.cu"
int main(int argc, char *argv[])
# 305 "CMakeCUDACompilerId.cu"
{
# 306 "CMakeCUDACompilerId.cu"
int require = 0;
# 307 "CMakeCUDACompilerId.cu"
require += (info_compiler[argc]);
# 308 "CMakeCUDACompilerId.cu"
require += (info_platform[argc]);
# 310 "CMakeCUDACompilerId.cu"
require += ((info_version)[argc]);
# 318 "CMakeCUDACompilerId.cu"
require += (info_language_dialect_default[argc]);
# 319 "CMakeCUDACompilerId.cu"
(void)argv;
# 320 "CMakeCUDACompilerId.cu"
return require;
# 321 "CMakeCUDACompilerId.cu"
}
# 1 "CMakeCUDACompilerId.cudafe1.stub.c"
# 1 "CMakeCUDACompilerId.cudafe1.stub.c"
# 1 "tmp/CMakeCUDACompilerId.cudafe1.stub.c" 1 3
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wunused-function"
#pragma GCC diagnostic ignored "-Wcast-qual"

# 1 "/usr/include/crt/host_runtime.h" 1 3 4
# 74 "/usr/include/crt/host_runtime.h" 3 4

# 74 "/usr/include/crt/host_runtime.h" 3 4
template <typename T>
static inline T *__cudaAddressOf(T &val)
{
    return (T *)((void *)(&(const_cast<char &>(reinterpret_cast<const volatile char &>(val)))));
}
# 121 "/usr/include/crt/host_runtime.h" 3 4
static void ____nv_dummy_param_ref(void *param) { volatile static void **__ref __attribute__((unused)); __ref = (volatile void **)param; }




extern "C" {
void __cudaRegisterLinkedBinary__NV_MODULE_ID ( void (*)(void **), void *, void *, void (*)(void *));
}




extern "C" {







  static const unsigned char __module_id_str[] __attribute__((section ("__nv_module_id"))) = "__NV_MODULE_ID";
# 152 "/usr/include/crt/host_runtime.h" 3 4
}

extern "C" {
extern void** __cudaRegisterFatBinary(
  void *fatCubin
);

extern void __cudaUnregisterFatBinary(
  void **fatCubinHandle
);

extern void __cudaRegisterVar(
        void **fatCubinHandle,
        char *hostVar,
        char *deviceAddress,
  const char *deviceName,
        int ext,
        int size,
        int constant,
        int global
);

extern void __cudaRegisterManagedVar(
        void **fatCubinHandle,
        void **hostVarPtrAddress,
        char *deviceAddress,
  const char *deviceName,
        int ext,
        int size,
        int constant,
        int global
);

extern char __cudaInitModule(
        void **fatCubinHandle
);

extern void __cudaRegisterTexture(
        void **fatCubinHandle,
  const struct textureReference *hostVar,
  const void **deviceAddress,
  const char *deviceName,
        int dim,
        int norm,
        int ext
);

extern void __cudaRegisterSurface(
        void **fatCubinHandle,
  const struct surfaceReference *hostVar,
  const void **deviceAddress,
  const char *deviceName,
        int dim,
        int ext
);

extern void __cudaRegisterFunction(
        void **fatCubinHandle,
  const char *hostFun,
        char *deviceFun,
  const char *deviceName,
        int thread_limit,
        uint3 *tid,
        uint3 *bid,
        dim3 *bDim,
        dim3 *gDim,
        int *wSize
);





extern int atexit(void(*)(void)) throw();





}

static void **__cudaFatCubinHandle;

static void __cudaUnregisterBinaryUtil(void)
{
  ____nv_dummy_param_ref((void *)&__cudaFatCubinHandle);
  __cudaUnregisterFatBinary(__cudaFatCubinHandle);
}

static char __nv_init_managed_rt_with_module(void **handle)
{
  return __cudaInitModule(handle);
}

# 1 "/usr/include/common_functions.h" 1 3 4
# 224 "/usr/include/common_functions.h" 3 4
# 1 "/usr/include/math_functions.h" 1 3 4
# 9938 "/usr/include/math_functions.h" 3 4
# 1 "/usr/include/crt/func_macro.h" 1 3 4
# 9939 "/usr/include/math_functions.h" 2 3 4







inline double rsqrt(double a);

inline double rcbrt(double a);

inline double sinpi(double a);

inline double cospi(double a);

inline void sincospi(double a, double *sptr, double *cptr);

inline double erfinv(double a);

inline double erfcinv(double a);

inline double normcdfinv(double a);

inline double normcdf(double a);

inline double erfcx(double a);

inline float rsqrtf(float a);

inline float rcbrtf(float a);

inline float sinpif(float a);

inline float cospif(float a);

inline void sincospif(float a, float *sptr, float *cptr);

inline float erfinvf(float a);

inline float erfcinvf(float a);

inline float normcdfinvf(float a);

inline float normcdff(float a);

inline float erfcxf(float a);

inline int min(int a, int b);

inline unsigned int umin(unsigned int a, unsigned int b);

inline long long int llmin(long long int a, long long int b);

inline unsigned long long int ullmin(unsigned long long int a, unsigned long long int b);

inline int max(int a, int b);

inline unsigned int umax(unsigned int a, unsigned int b);

inline long long int llmax(long long int a, long long int b);

inline unsigned long long int ullmax(unsigned long long int a, unsigned long long int b);
# 10210 "/usr/include/math_functions.h" 3 4
# 1 "/usr/include/math_functions.hpp" 1 3 4
# 1053 "/usr/include/math_functions.hpp" 3 4
# 1 "/usr/include/math_constants.h" 1 3 4
# 1054 "/usr/include/math_functions.hpp" 2 3 4
# 3378 "/usr/include/math_functions.hpp" 3 4
inline double rsqrt(double a)
{
  return 1.0 / sqrt(a);
}

inline double rcbrt(double a)
{
  double s, t;

  if (__isnan(a)) {
    return a + a;
  }
  if (a == 0.0 || __isinf(a)) {
    return 1.0 / a;
  }
  s = fabs(a);
  t = exp2(-3.3333333333333333e-1 * log2(s));
  t = ((t*t) * (-s*t) + 1.0) * (3.3333333333333333e-1*t) + t;



  if (__signbit(a))

  {
    t = -t;
  }
  return t;
}

inline double sinpi(double a)
{
  int n;

  if (__isnan(a)) {
    return a + a;
  }
  if (a == 0.0 || __isinf(a)) {
    return sin (a);
  }
  if (a == floor(a)) {
    return ((a / 1.0e308) / 1.0e308) / 1.0e308;
  }
  a = remquo (a, 0.5, &n);
  a = a * 3.1415926535897931e+0;
  if (n & 1) {
    a = cos (a);
  } else {
    a = sin (a);
  }
  if (n & 2) {
    a = -a;
  }
  return a;
}

inline double cospi(double a)
{
  int n;

  if (__isnan(a)) {
    return a + a;
  }
  if (__isinf(a)) {
    return cos (a);
  }
  if (fabs(a) > 9.0071992547409920e+015) {
    a = 0.0;
  }
  a = remquo (a, 0.5, &n);
  a = a * 3.1415926535897931e+0;
  n++;
  if (n & 1) {
    a = cos (a);
  } else {
    a = sin (a);
  }
  if (n & 2) {
    a = -a;
  }
  if (a == 0.0) {
    a = fabs(a);
  }
  return a;
}

inline void sincospi(double a, double *sptr, double *cptr)
{
  *sptr = sinpi(a);
  *cptr = cospi(a);
}

inline double erfinv(double a)
{
  double p, q, t, fa;
  volatile union {
    double d;
    unsigned long long int l;
  } cvt;

  fa = fabs(a);
  if (fa >= 1.0) {
    cvt.l = 0xfff8000000000000ull;
    t = cvt.d;
    if (fa == 1.0) {
      t = a * exp(1000.0);
    }
  } else if (fa >= 0.9375) {




    t = log1p(-fa);
    t = 1.0 / sqrt(-t);
    p = 2.7834010353747001060e-3;
    p = p * t + 8.6030097526280260580e-1;
    p = p * t + 2.1371214997265515515e+0;
    p = p * t + 3.1598519601132090206e+0;
    p = p * t + 3.5780402569085996758e+0;
    p = p * t + 1.5335297523989890804e+0;
    p = p * t + 3.4839207139657522572e-1;
    p = p * t + 5.3644861147153648366e-2;
    p = p * t + 4.3836709877126095665e-3;
    p = p * t + 1.3858518113496718808e-4;
    p = p * t + 1.1738352509991666680e-6;
    q = t + 2.2859981272422905412e+0;
    q = q * t + 4.3859045256449554654e+0;
    q = q * t + 4.6632960348736635331e+0;
    q = q * t + 3.9846608184671757296e+0;
    q = q * t + 1.6068377709719017609e+0;
    q = q * t + 3.5609087305900265560e-1;
    q = q * t + 5.3963550303200816744e-2;
    q = q * t + 4.3873424022706935023e-3;
    q = q * t + 1.3858762165532246059e-4;
    q = q * t + 1.1738313872397777529e-6;
    t = p / (q * t);
    if (a < 0.0) t = -t;
  } else if (fa >= 0.75) {




    t = a * a - .87890625;
    p = .21489185007307062000e+0;
    p = p * t - .64200071507209448655e+1;
    p = p * t + .29631331505876308123e+2;
    p = p * t - .47644367129787181803e+2;
    p = p * t + .34810057749357500873e+2;
    p = p * t - .12954198980646771502e+2;
    p = p * t + .25349389220714893917e+1;
    p = p * t - .24758242362823355486e+0;
    p = p * t + .94897362808681080020e-2;
    q = t - .12831383833953226499e+2;
    q = q * t + .41409991778428888716e+2;
    q = q * t - .53715373448862143349e+2;
    q = q * t + .33880176779595142685e+2;
    q = q * t - .11315360624238054876e+2;
    q = q * t + .20369295047216351160e+1;
    q = q * t - .18611650627372178511e+0;
    q = q * t + .67544512778850945940e-2;
    p = p / q;
    t = a * p;
  } else {




    t = a * a - .5625;
    p = - .23886240104308755900e+2;
    p = p * t + .45560204272689128170e+3;
    p = p * t - .22977467176607144887e+4;
    p = p * t + .46631433533434331287e+4;
    p = p * t - .43799652308386926161e+4;
    p = p * t + .19007153590528134753e+4;
    p = p * t - .30786872642313695280e+3;
    q = t - .83288327901936570000e+2;
    q = q * t + .92741319160935318800e+3;
    q = q * t - .35088976383877264098e+4;
    q = q * t + .59039348134843665626e+4;
    q = q * t - .48481635430048872102e+4;
    q = q * t + .18997769186453057810e+4;
    q = q * t - .28386514725366621129e+3;
    p = p / q;
    t = a * p;
  }
  return t;
}

inline double erfcinv(double a)
{
  double t;
  volatile union {
    double d;
    unsigned long long int l;
  } cvt;

  if (__isnan(a)) {
    return a + a;
  }
  if (a <= 0.0) {
    cvt.l = 0xfff8000000000000ull;
    t = cvt.d;
    if (a == 0.0) {
        t = (1.0 - a) * exp(1000.0);
    }
  }
  else if (a >= 0.0625) {
    t = erfinv (1.0 - a);
  }
  else if (a >= 1e-100) {




    double p, q;
    t = log(a);
    t = 1.0 / sqrt(-t);
    p = 2.7834010353747001060e-3;
    p = p * t + 8.6030097526280260580e-1;
    p = p * t + 2.1371214997265515515e+0;
    p = p * t + 3.1598519601132090206e+0;
    p = p * t + 3.5780402569085996758e+0;
    p = p * t + 1.5335297523989890804e+0;
    p = p * t + 3.4839207139657522572e-1;
    p = p * t + 5.3644861147153648366e-2;
    p = p * t + 4.3836709877126095665e-3;
    p = p * t + 1.3858518113496718808e-4;
    p = p * t + 1.1738352509991666680e-6;
    q = t + 2.2859981272422905412e+0;
    q = q * t + 4.3859045256449554654e+0;
    q = q * t + 4.6632960348736635331e+0;
    q = q * t + 3.9846608184671757296e+0;
    q = q * t + 1.6068377709719017609e+0;
    q = q * t + 3.5609087305900265560e-1;
    q = q * t + 5.3963550303200816744e-2;
    q = q * t + 4.3873424022706935023e-3;
    q = q * t + 1.3858762165532246059e-4;
    q = q * t + 1.1738313872397777529e-6;
    t = p / (q * t);
  }
  else {




    double p, q;
    t = log(a);
    t = 1.0 / sqrt(-t);
    p = 6.9952990607058154858e-1;
    p = p * t + 1.9507620287580568829e+0;
    p = p * t + 8.2810030904462690216e-1;
    p = p * t + 1.1279046353630280005e-1;
    p = p * t + 6.0537914739162189689e-3;
    p = p * t + 1.3714329569665128933e-4;
    p = p * t + 1.2964481560643197452e-6;
    p = p * t + 4.6156006321345332510e-9;
    p = p * t + 4.5344689563209398450e-12;
    q = t + 1.5771922386662040546e+0;
    q = q * t + 2.1238242087454993542e+0;
    q = q * t + 8.4001814918178042919e-1;
    q = q * t + 1.1311889334355782065e-1;
    q = q * t + 6.0574830550097140404e-3;
    q = q * t + 1.3715891988350205065e-4;
    q = q * t + 1.2964671850944981713e-6;
    q = q * t + 4.6156017600933592558e-9;
    q = q * t + 4.5344687377088206783e-12;
    t = p / (q * t);
  }
  return t;
}

inline double normcdfinv(double a)
{
  return -1.4142135623730951 * erfcinv(a + a);
}

inline double normcdf(double a)
{
  double ah, al, t1, t2, u1, u2, v1, v2, z;
  if (fabs (a) > 38.5) a = copysign (38.5, a);
  ah = a * 134217729.0;
  u1 = (a - ah) + ah;
  u2 = a - u1;
  v1 = -7.0710678398609161e-01;
  v2 = 2.7995440410322203e-09;
  t1 = a * -7.0710678118654757e-1;
  t2 = (((u1 * v1 - t1) + u1 * v2) + u2 * v1) + u2 * v2;
  t2 = (a * -(-4.8336466567264567e-17)) + t2;
  ah = t1 + t2;
  z = erfc (ah);
  if (a < -1.0) {
    al = (t1 - ah) + t2;
    t1 = -2.0 * ah * z;
    z = t1 * al + z;
  }
  return 0.5 * z;
}

inline double erfcx(double a)
{
  double x, t1, t2, t3;

  if (__isnan(a)) {
    return a + a;
  }
  x = fabs(a);
  if (x < 32.0) {
# 3696 "/usr/include/math_functions.hpp" 3 4
    t1 = x - 4.0;
    t2 = x + 4.0;
    t2 = t1 / t2;

    t1 = - 3.5602694826817400E-010;
    t1 = t1 * t2 - 9.7239122591447274E-009;
    t1 = t1 * t2 - 8.9350224851649119E-009;
    t1 = t1 * t2 + 1.0404430921625484E-007;
    t1 = t1 * t2 + 5.8806698585341259E-008;
    t1 = t1 * t2 - 8.2147414929116908E-007;
    t1 = t1 * t2 + 3.0956409853306241E-007;
    t1 = t1 * t2 + 5.7087871844325649E-006;
    t1 = t1 * t2 - 1.1231787437600085E-005;
    t1 = t1 * t2 - 2.4399558857200190E-005;
    t1 = t1 * t2 + 1.5062557169571788E-004;
    t1 = t1 * t2 - 1.9925637684786154E-004;
    t1 = t1 * t2 - 7.5777429182785833E-004;
    t1 = t1 * t2 + 5.0319698792599572E-003;
    t1 = t1 * t2 - 1.6197733895953217E-002;
    t1 = t1 * t2 + 3.7167515553018733E-002;
    t1 = t1 * t2 - 6.6330365827532434E-002;
    t1 = t1 * t2 + 9.3732834997115544E-002;
    t1 = t1 * t2 - 1.0103906603555676E-001;
    t1 = t1 * t2 + 6.8097054254735140E-002;
    t1 = t1 * t2 + 1.5379652102605428E-002;
    t1 = t1 * t2 - 1.3962111684056291E-001;
    t1 = t1 * t2 + 1.2329951186255526E+000;

    t2 = 2.0 * x + 1.0;
    t1 = t1 / t2;
  } else {

    t2 = 1.0 / x;
    t3 = t2 * t2;
    t1 = -29.53125;
    t1 = t1 * t3 + 6.5625;
    t1 = t1 * t3 - 1.875;
    t1 = t1 * t3 + 0.75;
    t1 = t1 * t3 - 0.5;
    t1 = t1 * t3 + 1.0;
    t2 = t2 * 5.6418958354775628e-001;
    t1 = t1 * t2;
  }
  if (a < 0.0) {

    t2 = ((int)(x * 16.0)) * 0.0625;
    t3 = (x - t2) * (x + t2);
    t3 = exp(t2 * t2) * exp(t3);
    t3 = t3 + t3;
    t1 = t3 - t1;
  }
  return t1;
}

inline float rsqrtf(float a)
{
  return (float)rsqrt((double)a);
}

inline float rcbrtf(float a)
{
  return (float)rcbrt((double)a);
}

inline float sinpif(float a)
{
  return (float)sinpi((double)a);
}

inline float cospif(float a)
{
  return (float)cospi((double)a);
}

inline void sincospif(float a, float *sptr, float *cptr)
{
  double s, c;

  sincospi((double)a, &s, &c);
  *sptr = (float)s;
  *cptr = (float)c;
}

inline float erfinvf(float a)
{
  return (float)erfinv((double)a);
}

inline float erfcinvf(float a)
{
  return (float)erfcinv((double)a);
}

inline float normcdfinvf(float a)
{
  return (float)normcdfinv((double)a);
}

inline float normcdff(float a)
{
  return (float)normcdf((double)a);
}

inline float erfcxf(float a)
{
  return (float)erfcx((double)a);
}
# 10211 "/usr/include/math_functions.h" 2 3 4



# 1 "/usr/include/math_functions_dbl_ptx3.h" 1 3 4
# 270 "/usr/include/math_functions_dbl_ptx3.h" 3 4
# 1 "/usr/include/math_functions_dbl_ptx3.hpp" 1 3 4
# 271 "/usr/include/math_functions_dbl_ptx3.h" 2 3 4
# 10215 "/usr/include/math_functions.h" 2 3 4
# 225 "/usr/include/common_functions.h" 2 3 4
# 247 "/usr/include/crt/host_runtime.h" 2 3 4







#pragma pack()
# 6 "tmp/CMakeCUDACompilerId.cudafe1.stub.c" 2 3
# 1 "tmp/CMakeCUDACompilerId.fatbin.c" 1 3
# 1 "/usr/include/fatBinaryCtl.h" 1 3 4
# 33 "/usr/include/fatBinaryCtl.h" 3 4
# 1 "/usr/include/fatbinary.h" 1 3 4
# 49 "/usr/include/fatbinary.h" 3 4
typedef struct fatBinaryHeader *computeFatBinaryFormat_t;
# 78 "/usr/include/fatbinary.h" 3 4
struct __attribute__((aligned(8))) fatBinaryHeader
{
  unsigned int magic;
  unsigned short version;
  unsigned short headerSize;
  unsigned long long int fatSize;
};


typedef enum {
  FATBIN_KIND_PTX = 0x0001,
  FATBIN_KIND_ELF = 0x0002,
  FATBIN_KIND_OLDCUBIN = 0x0004,
} fatBinaryCodeKind;
# 34 "/usr/include/fatBinaryCtl.h" 2 3 4






typedef enum {
  FBCTL_ERROR_NONE = 0,
  FBCTL_ERROR_NULL,
  FBCTL_ERROR_UNRECOGNIZED,
  FBCTL_ERROR_NO_CANDIDATE,
  FBCTL_ERROR_COMPILE_FAILED,
  FBCTL_ERROR_INTERNAL
} fatBinaryCtlError_t;
extern char* fatBinaryCtl_Errmsg (fatBinaryCtlError_t e);

extern fatBinaryCtlError_t fatBinaryCtl_Create (void* *data);

extern void fatBinaryCtl_Delete (void* data);


extern fatBinaryCtlError_t fatBinaryCtl (void* data, int request, ...);
# 70 "/usr/include/fatBinaryCtl.h" 3 4
typedef enum {
  fatBinary_PreferBestCode,
  fatBinary_AvoidPTX,
  fatBinary_ForcePTX,
  fatBinary_JITIfNotMatch
} fatBinary_CompilationPolicy;





extern fatBinaryCtlError_t fatBinaryCtl_PickCandidate (void* data);







extern fatBinaryCtlError_t fatBinaryCtl_Compile (void* data,
                                                 void* *elf, size_t *esize);
# 99 "/usr/include/fatBinaryCtl.h" 3 4
typedef struct {
  int magic;
  int version;
  const unsigned long long* data;
  void *filename_or_fatbins;

} __fatBinC_Wrapper_t;
# 2 "tmp/CMakeCUDACompilerId.fatbin.c" 2 3


asm(
".section .nv_fatbin, \"a\"\n"
".align 8\n"
"fatbinData:\n"
".quad 0x00100001ba55ed50,0x0000000000000330,0x0000004001010002,0x0000000000000268\n"
".quad 0x0000000000000000,0x0000001400010007,0x0000000000000000,0x0000000000000015\n"
".quad 0x0000000000000000,0x0000000000000000,0x33010102464c457f,0x0000000000000007\n"
".quad 0x0000004b00be0002,0x0000000000000000,0x00000000000001c0,0x00000000000000c0\n"
".quad 0x0038004000140514,0x0001000400400003,0x7472747368732e00,0x747274732e006261\n"
".quad 0x746d79732e006261,0x746d79732e006261,0x78646e68735f6261,0x666e692e766e2e00\n"
".quad 0x747368732e00006f,0x74732e0062617472,0x79732e0062617472,0x79732e006261746d\n"
".quad 0x6e68735f6261746d,0x692e766e2e007864,0x00000000006f666e,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000300000001,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000040,0x0000000000000032,0x0000000000000000\n"
".quad 0x0000000000000001,0x0000000000000000,0x000000030000000b,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000072,0x0000000000000032,0x0000000000000000\n"
".quad 0x0000000000000001,0x0000000000000000,0x0000000200000013,0x0000000000000000\n"
".quad 0x0000000000000000,0x00000000000000a8,0x0000000000000018,0x0000000000000002\n"
".quad 0x0000000000000008,0x0000000000000018,0x0000000500000006,0x00000000000001c0\n"
".quad 0x0000000000000000,0x0000000000000000,0x00000000000000a8,0x00000000000000a8\n"
".quad 0x0000000000000008,0x0000000500000001,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000008\n"
".quad 0x0000000600000001,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000008,0x0000005001010001\n"
".quad 0x0000000000000038,0x0000004000000035,0x0000001400040003,0x0000000000000000\n"
".quad 0x0000000000002015,0x0000000000000000,0x0000000000000037,0x0000000000000048\n"
".quad 0x0000000000000000,0x762e20f000010a13,0x34206e6f69737265,0x677261742e0a332e\n"
".quad 0x30325f6d73207465,0x7365726464612e0a,0x3620657a69735f73,0x0000000a0a0a0a34\n"
".text\n");

extern "C" {

extern const unsigned long long fatbinData[104];

}


extern "C" {

static const __fatBinC_Wrapper_t __fatDeviceText __attribute__ ((aligned (8))) __attribute__ ((section (".nvFatBinSegment")))=
 { 0x466243b1, 1, fatbinData, 0 };

}
# 7 "tmp/CMakeCUDACompilerId.cudafe1.stub.c" 2 3
static void __nv_cudaEntityRegisterCallback(void **);
static void __sti____cudaRegisterAll_27_CMakeCUDACompilerId_cpp1_ii_bd57c623(void) __attribute__((__constructor__));
static void __nv_cudaEntityRegisterCallback(void **__T20){{ volatile static void **__ref __attribute__((unused)); __ref = (volatile void **)__T20; };__nv_save_fatbinhandle_for_managed_rt(__T20);}
static void __sti____cudaRegisterAll_27_CMakeCUDACompilerId_cpp1_ii_bd57c623(void){__cudaFatCubinHandle = __cudaRegisterFatBinary((void*)&__fatDeviceText); { void (*callback_fp)(void **) = (void (*)(void **))(__nv_cudaEntityRegisterCallback); (*callback_fp)(__cudaFatCubinHandle); } atexit(__cudaUnregisterBinaryUtil);}

#pragma GCC diagnostic pop
# 2 "CMakeCUDACompilerId.cudafe1.stub.c" 2
# 1 "CMakeCUDACompilerId.cudafe1.stub.c"
